{
  // Basic Block Information
  "Name": "Old Star Rotary Auto Cannon",
  "Description": "Now this is how the Old Star do.The Rotary Auto Cannon is a large and powerful gatling that will for sure damage whatever is in front of you. Originally this girl was meant for more stationary defenses but when people see a big gun they have to mount it on their mobile techs. So we gave her a new mount and added more powder to her shells to give more kick. She still can't look down but she can now look up!",
  "ID": 300031, // This is the Block ID; it must be unique

  "Faction": 4, // Tells TT what Corporation this block belongs to.
  // 1 or 0   = GSO
  // 2        = GeoCorp
  // 3        = EXP
  // 4        = Venture
  // 5        = HawkEye
  // 6        = Special (Decorative)
  // 7        = Better Future

  "Category": 4, // Tells TT what type of block this is.
  // 1    = Control (Cabs)
  // 2    = Standard (Basic Blocks)
  // 3    = Wheels
  // 4    = Weapons
  // 5    = Accessory (Radar, Lights, etc.)
  // 6    = Power (Batteries, Shields, etc.)
  // 7    = Manufacturing
  // 8    = Flight (Wings, Fans, etc.)

  "Grade": 2, // The Grade is equal to X + 1 (e.g. "Grade": 4 is read by TT as Grade 5.)
  "Price": 23856, // The price is equal to the sum of the resources/components used by this block times 3. (e.g. P = ((R1 + R2 + R3) * 3) )

  // The resources/components needed to make this block. For the full ID Resource/Component list, 
  // please refer to the Terratech Wiki.

  // Recipe:    Body:   8 Titanic Alloy, 4 Plubonic Alloy
  //            Gun:    6 Blast Caps
  //            Rotor:  2 Ion Pulse Cell, 1 Coffman Cell
  "Recipe": "54, 54, 54, 54, 54, 54, 54, 54, 53, 53, 53, 53, 46, 46, 46, 46, 46, 46, 56, 56, 62",

  "IconName": "Gat_icon.png", // Name of the block's icon. This will be used in the UI screen                            
  "MeshName": null, // Name of the block's mesh                                        
  "ColliderMeshName": null, // Name of the block's collider.
  "SupressBoxColliderFallback": true,
  "EmissionMode": 2,
  "MeshTextureName": "OST1.png",
  "MeshGlossTextureName": "OST2.png",
  "MeshEmissionTextureName": "OST3.png",

  // Basic Block HP Values
  "HP": 3200, // A GSO one block has 250 health
  // LK Stats:
  // 500/cell = Standard & Armor blocks (Add 3000 for Cabs)
  // 400/cell = Weapons
  // 300/cell = Wheels

  "Mass": 15, // LK Standard Blocks have 2.5 mass per cell,
  // LK Cabs have 5 mass per cell
  // LK Weapons have 4 mass per cell
  // LK Wheels have 2 mass per cell

  "DamageableType": 1, // Tells TT the block's Armor type, which makes it more resilient to one type of damage over another.
  // 0    = Standard
  // 1    = Armor
  // 2    = Rubber
  // 3    = Volatile
  // 4    = Shield
  // 5    = Wood
  // 6    = Rock
  "Fragility": 0.0, // Tells TT how likely this block can fall off when attacked. 0 is none at all, while 2 is twice as likely.

  // Block Dimensions
  "BlockExtents": //Makes a grid box with these dimensions. IGNORED if "Cells": is used
  {
    "x": 6,
    "y": 3,
    "z": 8
  },

  "APs": [
    // Bottom APs
    {
      "x": 2.0,
      "y": -0.5,
      "z": 1.0
    },
    {
      "x": 3.0,
      "y": -0.5,
      "z": 1.0
    },
    {
      "x": 2.0,
      "y": -0.5,
      "z": 2.0
    },
    {
      "x": 3.0,
      "y": -0.5,
      "z": 2.0
    },
    {
      "x": 2.0,
      "y": -0.5,
      "z": 3.0
    },
    {
      "x": 3.0,
      "y": -0.5,
      "z": 3.0
    }
  ],

  // Advanced Settings
  "GamePrefabReference": "HE_MiniGun_Large_525",
  "KeepReferenceRenderers": true, // Setting this to false will remove any mesh instances the original block will be spawning with the modded block
  "ReferenceOffset": {
    "x": 2.5,
    "y": 0.0,
    "z": 1.0
  },

  "SubObjects": [
    {
      "SubOverrideName": "m_HE_MiniGun_313_Base",
      "DestroyExistingRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "Gat_Turrent_Base.obj",
      "ColliderMeshName": "Gat_Turrent_Base.obj",
      "SubPosition": {
        "x": 2.0,
        "y": 0,
        "z": 1.0
      },
      "SubScale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "SubRotation": {
        "x": 0,
        "y": 0,
        "z": 0
      }
    },

    {
      "SubOverrideName": "m_HE_MiniGun_313_RotatingPart_A",
      "DestroyExistingRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "Gat_Turrent_Turrent.obj",
      "ColliderMeshName": "Gat_Turrent_Turrent.obj",
      "SubPosition": {
        "x": -0.5,
        "y": 0,
        "z": 0
      },
      "SubScale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "SubRotation": {
        "x": 0,
        "y": 0,
        "z": 0
      }
    },

    {
      "SubOverrideName": "m_HE_MiniGun_313_RotatingPart_B",
      "DestroyExistingRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "Gat_Turrent_Gat_Base.obj",
      "ColliderMeshName": "Gat_Turrent_Gat_Base.obj",
      "SubPosition": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "SubScale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "SubRotation": {
        "x": 0,
        "y": 0,
        "z": 0
      }
    },

    {
      "SubOverrideName": "m_HE_MiniGun_Barrel",
      "DestroyExistingRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "Gatling.obj",
      "ColliderMeshName": "Gatling_C.obj",
      "SubPosition": {
        "x": 0,
        "y": 0,
        "z": 0
      },
      "SubScale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "SubRotation": {
        "x": 0,
        "y": 0,
        "z": 0
      }
    },

    {
      "SubOverrideName": "_spawnBullet",
      "SubPosition": {
        "x": 0,
        "y": -0.35,
        "z": 6.2
      },
      "SubScale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "SubRotation": {
        "x": 0,
        "y": 0,
        "z": 0
      }
    },

    {
      "SubOverrideName": "_smoke",
      "SubPosition": {
        "x": 0,
        "y": -0.18,
        "z": 6
      },
      "SubScale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "SubRotation": {
        "x": 0,
        "y": 0,
        "z": 0
      }
    },

    {
      "SubOverrideName": "_muzzleFlash",
      "SubPosition": {
        "x": 0,
        "y": -0.35,
        "z": 5.8
      },
      "SubScale": {
        "x": 1,
        "y": 1,
        "z": 3
      },
      "SubRotation": {
        "x": 0,
        "y": 0,
        "z": 0
      }
    },

    { // _spawnCasing Objects are rotation-dependent; their orientation will dictate the direction of the casing ejection
      "SubOverrideName": "_spawnCasing",
      "SubPosition": {
        "x": 0,
        "y": 0.7,
        "z": -0.7
      },
      "SubScale": {
        "x": 1,
        "y": 1,
        "z": 1
      },
      "SubRotation": {
        "x": -45,
        "y": 180,
        "z": 0
      }
    }
  ],

  "Deserializer": {
    "GameObject|m_HE_MiniGun_313_Base": {
      "GameObject|_gimbalBase": {
        "UnityEngine.Transform": {
          "localPosition": {
            "x": 0.5,
            "y": 0,
            "z": 0
          }
        },
        "GimbalAimer": { "rotationLimits": [ 85, -85 ] },

        "GameObject|m_HE_MiniGun_313_RotatingPart_A": {
          "GameObject|_gimbalElev": {
            "UnityEngine.Transform": {
              "localPosition": {
                "x": 0.5,
                "y": 0.7,
                "z": 0.4
              }
            },
            "GimbalAimer": { "rotationLimits": [ 1, -45 ] },

            "GameObject|_barrel": {
              "UnityEngine.Transform": {
                "localPosition": {
                  "x": 0.0,
                  "y": 0.19,
                  "z": -0.4
                }
              },

              "GameObject|_spindle": {
                "Spinner": {
                  "m_Speed": 2.5, // Dictates the speed of the rotation
                  "m_AutoSpin": false, // Enables or disables the object's ability to spin automatically. 

                  // Mileage varies between blocks, but in general, any block that has a spinning component 
                  // will have this module and will work.

                  "m_SpinUpTime": 2.5, // Dictates the amount of time required for the object to spin in full speed
                  "m_CurrentAngle": 0.0, // Dictates the starting angle of the object when spawned into the world
                  "m_CurrentAutoSpeed": 0.0,
                  "m_CurrentSpeedFraction": 0.0,
                  "m_SpinnerSound": null,
                  "m_SpinnerSoundOriginalPitch": 1.0,
                  "AtFullSpeed": false
                }
              }
            }
          }
        }
      }
    },

    "ModuleWeaponGun": {
      "m_ShotCooldown": 0.1, // The length of paus between shots. A higher value lengthens the pause and vice versa.
      "m_CooldownVariancePct": 0, // Dictates how random the length of pause between shots.

      "m_BurstShotCount": 0, // Dictates that this block will be firing in bursts before applying a pause. A zero value here disables this behavior.
      // A non-zero, integer value will dictate the number of shots fired.
      // The pause uses the value in m_BurstCooldown

      "m_BurstCooldown": 0.0, // The amount of time used to reload when using burst firing - a higher value lengthens reload time. 
      // This is automatically disabled when m_BurstShotCount is set to 0

      "m_ResetBurstOnInterrupt": false, // Dictates whether the gun will automatically reload the gun when it stops firing. 
      // Only applies when m_BurstShotCount is NOT set to 0

      "m_ResetFiringTAfterNotFiredFor": 0.0, // Dictates the amount of time required for the block to reset its firing sequence. 
      // Weapons that use m_BurstShotCount will reset its count when this is active
      // This will only work if m_ResetBurstOnInterrupt is true

      "m_FireControlMode": 1, // Dictates how the guns will fire
      //  0 =   The guns will fire one at a time
      //  1 =   All guns will fire at the same time


      "m_SeekingRounds": false, // Dictates whether the projectiles fired by this weapon will home in toward targets



      "m_RegisterWarningAfter": 1.0,

      "m_HasSpinUpDownAnim": false,
      "m_HasCooldownAnim": false,
      "m_CanInterruptSpinUpAnim": false,
      "m_CanInterruptSpinDownAnim": false,
      "m_SpinUpAnimLayerIndex": 0,
      "m_DeploySFXType": 0,
      "OnAudioTickUpdate": null,
      "m_NumCannonBarrels": 1
    },

    // Reference the 3-Pounder cannon's shell data here
    "Reference|GSO_Cannon_Turret(111)/FireData.": {
      "m_MuzzleVelocity": 150.0, // Dictates the projectile's speed. The higher the value, the faster it will travel.
      "m_KickbackStrength": 100.0, // Dictates the strength of the recoil when firing the gun
      "m_BulletSprayVariance": 0.05, // Dictates how accurate the gun is. The lower the value, the more accurate it fires its shots.

      "m_CasingVelocity": 10.0,
      "m_BulletSpin": 0.0,
      "m_CasingEjectVariance": 0.3,
      "m_CasingEjectSpin": 50.0,
      "Instantiate|m_BulletPrefab": {
        "WeaponRound": {
          "m_Damage": 252
        }
      }
    },

    "ModuleWeapon": {
      "m_AutoFire": false, // If set to true, this weapon will automatically fire at targets
      "m_AimType": 0, // If set to 0, the gun will rotate according to its gimbal limits. If set to 1, it will not rotate.
      "m_RotateSpeed": 50.0, // Dictates the speed of the gun's rotation whenever it aims at a target.
      "m_ChangeTargetInteval": 0.3,

      "m_PreventShootingTowardsFloor": false,
      "m_DeployOnHasTarget": false,
      "m_LimitedShootAngle": 90.0,
      "m_FireSFXType": 6, // Dictates the sound used when firing
      // 6  = GSO Megaton Cannon
      // 64 = GSO Gigaton Cannon
      // 77 = GSO Big Bertha Cannon

      "Projectile": { //Use if the projectile is an explosion
        "Instantiate|m_Explosion": { //Instantiate| is like GameObject|
          "Explosion": {
            "m_ExplosionSize": 1,
            "m_EffectRadius": 2,
            "m_MaxDamageStrength": 150,
            "m_MaxImpulseStrength": 55
          }
        }
      },


      "m_TargetAimer": {
        "m_ChangeTargetTimeout": 0.0,
        "m_ChangeTargetInteval": 0.5
      },

      "m_RemoteShotFiredPending": 0,
      "m_HasTargetInFiringCone": false,
      "FireControl": false,
      "AimControl": 0,

      "DisableTargetAimer": false
    }

  }

}