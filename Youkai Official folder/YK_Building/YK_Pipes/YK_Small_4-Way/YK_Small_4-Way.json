// -- Make a copy of this file, change the ID, and modify the values shown to make your own block --
// "PropertyName" : Value,
// Only change the Value, and make sure it ends with a comma

// Helpful site for https://danny-alexander.github.io/terratech-block-list/block-list.html
{
  "Name": "Youkai 4-Way Junction Pipe",
  "Description": "An armoured junction pipe block, perfect for creating sturdy frames on your techs.", //You can make multiple lines with \n
  "ID": 19068, //A random ID that MUST be unique

  "Faction": 1, //GSO = 1|0, GeoCorp = 2, EXP = 3, Venture = 4, HawkEye = 5, Special = 6, BetterFuture = 7
  "Category": 2, //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
  "Grade": 2, //The desired grade minus one
  "Price": 594, //The price is measured by sum of recipe value times 3
  "HP": 350, //A GSO one block has 250 health
  "Mass": 1.5,
  "Rarity": 0,
  "Fragility": 0.25, //How likely the block is to fall off from being attacked. 2 is two times as likely, 0 is none at all. For example, SCUs do not fall off when attacked
  "DamageableType": 1, // Standard = 0, Armour = 1, Rubber = 2, Volatile = 3, Shield = 4, Wood = 5, Rock = 6

  "Recipe": "45, 5, 7, 7", // Separate chunk names or IDs with a comma. Not case sensitive.

  "IconName": "YK_Small_4-Way.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named

  "MeshName": "YK_Small_4-Way.obj", //FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

  "MeshTextureName": "YK_Texture 1.png", 
  "MeshGlossTextureName": "YK_Texture 2.png", 

  "ColliderMeshName": null, //FILE Name of the mesh, such as "collider.obj". Leaving as null will make an upright box collider relative to the mesh's extents
  "SupressBoxColliderFallback": false, //Disable creation of BoxCollider. Useful for if a collider will be already provided

 "Cells": [

    { "x": 0, "y": 0, "z": 0 }
  ],

  "APs": [ //The location of APs on the block. Delete this or set to null if you'd rather use "APsOnlyAtBottom": with "BlockExtents": 

    {"x": 0, "y": 0, "z": 0.5},
    {"x": -0.5, "y": 0, "z": 0},
    {"x": 0.5, "y": 0, "z": 0},
    {"x": 0, "y": -0.5, "z": 0}
  ],

  // Delete /* and */ if using

  //OPTIONAL
  "GamePrefabReference": "GSO_Block_111", //Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)"
  "KeepReferenceRenderers": false,
  "ReferenceOffset": {
    "x": 0,
    "y": 0,
    "z": 0
  }, //Shift the subobjects of the block prefab by x, y and z
  /*
  "ReferenceRotationOffset": {
    "x": 0, // Pitch
    "y": 0, // Yaw
    "z": 0  // Roll
  }, //Rotate the subobjects of the block prefab by the origin
  */
  /*
  "ReferenceScale": {
    "x": 0,
    "y": 0,
    "z": 0
  }, //Scale all the subobjects of the block prefab by the origin
  */

  // Sub Objects can modify existing sub gameobjects on a prefab reference. Properties can be omitted as necessary
 

  /*/

  //For great control of a block without creating a C# mod, such a system exists that you can modify the Hierarchy, and variables, of one.
  //OPTIONAL
  /*
  //Example to make a drill very powerful
  "JSONBLOCK": {
    "ModuleDrill": {
      "damagePerSecond": 1000000
    }
  }

  //Example to change travel distance of a projectile
  "JSONBLOCK": {
    "FireData": {
      "m_MuzzleVelocity": 2.1
    }
  }

  //You can access children of gameobjects as you access components. And in those children, modify their components or go deeper
  "JSONBLOCK": {
    "ModuleWeapon": {
      "m_RotateSpeed" : 15 //Speed at which a weapon can aim at something
    },
    "GameObject|_gimbalBase": {        //When a property name starts with GameObject|, it means it is a subobject. Which holds more subobjects, or components
      "GimbalAimer": {                 //This is a component, and holds values
        "rotationLimits": [-90, 90]//Modifications go here
      },
      "GameObject|_gimbalElev": {
        "GimbalAimer": {
        "rotationLimits": [-90, 90]//Modifications go here
      }
    }
  }

  //You can even modify damage caused from bullets
  "JSONBLOCK": {
    "FireData": {
      "Instantiate|m_BulletPrefab": {  //Instantiating duplicates the object in the property to make it unique from the prefab. Enters the subobject rather than component
        "WeaponRound": {               //Hence why the component type is used. Can be combined with more subobject exploration or components for more control
          "m_Damage": 10000,
        },
        "Projectile": {                //Use if the projectile is an explosion
          "Instantiate|m_Explosion": { //Instantiate| is like GameObject|
            "Explosion": {
              "m_ExplosionSize": 1,
              "m_EffectRadius": 4,
              "m_MaxDamageStrength": 1000,
              "m_MaxImpulseStrength": 1000
            }
          }
        }
      }
    }
  }

  // There are a LOT of things that can be modified, but to learn of them would require a dumper tool/mod, or decompiler.
  */
  //Note: Any component or gameobject which cannot be found will be created.
  //A gameobject can be created without specifying a name, such as "GameObject": {}
  //This is an old module which has recently been brought to life. It is not recommended for normal use, but brings much more capability.
  //If you have any problems, recommendations, or seek for guidance, ask on the Forum or official TerraTech Discord (discord.gg/terratechgame)

  //It may be necessary to examine the hierarchy of the block you wish to base your block on. You can do that by pressing backslash with your mouse on top of that block, with the Control Blocks mod installed.
}