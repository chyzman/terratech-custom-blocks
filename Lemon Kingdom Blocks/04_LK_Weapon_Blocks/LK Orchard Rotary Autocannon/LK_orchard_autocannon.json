/*
Description: This is a large, 6-barreled Megaton gatling gun for Retrogue. 

Pros:   High damage output using Megaton shells

Cons:   Heavy, expensive, does not aim and has a long spin-up time.

*/
{
    // Basic Block Information
    "Name":                 "LK Orchard Rotary Autocannon",
    "Description":          "This large rotary cannon spews Megaton shells at an eye-watering speed, thanks to its 'Retrograde Roller Gun Engine' (Retrogue) system. However, it's heavy and has a long spin-up time.\n\n\"Nicknamed the 'Platinum Star' due to it filling the sky with 'stars' after a barrage, this is a favorite amongst artillerymen as a secondary weapon for sieges when Knightfall ammunition is scarce.\"",

    "ID": 419024,           // This is the Block ID; it must be unique

    "Faction": 2,           // Tells TT what Corporation this block belongs to.
                            // 1 or 0   = GSO
                            // 2        = GeoCorp
                            // 3        = EXP/Reticule Research
                            // 4        = Venture
                            // 5        = HawkEye
                            // 6        = Special (Decorative)
                            // 7        = Better Future

    "Category": 4,          // Tells TT what type of block this is.
                            // 1    = Control (Cabs)
                            // 2    = Standard (Basic Blocks)
                            // 3    = Wheels
                            // 4    = Weapons
                            // 5    = Accessory (Radar, Lights, etc.)
                            // 6    = Power (Batteries, Shields, etc.)
                            // 7    = Manufacturing
                            // 8    = Flight (Wings, Fans, etc.)

    "Rarity": 2,            // Dictates the rarity of the block.
                            // 0 = Common 
                            // 1 = Uncommon
                            // 2 = Rare

    "Grade": 3,             // The Grade is equal to X + 1 (e.g. "Grade": 4 is read by TT as Grade 5.)
    
    "Price": 352656,        // The price is equal to the sum of the resources/components used by this block times 3. (e.g. P = ((R1 + R2 + R3) * 3) )
    "CenterOfMass":         {"x": 1.5, "y": 1.5, "z": 4.5},


    // The resources/components needed to make this block. For the full ID Resource/Component list, 
    // please refer to the Terratech Wiki.
    /*
    Recipe:     Main Body:      128 Titanic Alloy, 10 Plubonic Alloy
                Gun Assembly:   12 Blast Caps
                Motor Assembly: 4 Cyclone Jet, 4 Coffman Cell
                Ammunition:     16 Proxima Dark
                Electronics:    4 Mother Brain
    */
    "Recipe" : { 
        // Main Body
        "54": 128, "53": 10, 

        // Gun Assembly
        "46": 12,

        // Motor Assembly
        "57": 4, "62": 4,
    
        // Ammunition & Electronics:
        "66": 16, "60": 4
    },
      
    "IconName":                   "LK_orchard_autocannon_icon.png",                 // Name of the block's icon. This will be used in the UI screen                            
    "MeshName":                   null,                 // Name of the block's mesh                                        
    "MeshColliderName":           null,                 // Name of the block's collider.
    "NoBoxCollider":              true,

    "TextureName":              "LK_tex_1.png",
    "GlossTextureName":         "LK_tex_2.png",
    "EmissionTextureName":      "LK_tex_3.png",
  
    // Basic Block Values
    "HP": 51200,            // A GSO one block has 250 health
                            // LK Stats:
                            // 500/cell = Standard & Armor blocks (Add 3000 for Cabs, and add 50% for Armor blocks)
                            // 400/cell = Weapons
                            // 300/cell = Wheels
                            
    "Mass": 512,            // LK Standard Blocks have 2.5 mass per cell,
                            // LK Cabs have 5 mass per cell
                            // LK Weapons have 4 mass per cell
                            // LK Wheels have 2 mass per cell
                            // LK Bubble Projectors have 6 mass per cell
                            // LK Generators have 3 mass per cell

    "DamageableType": 1,    // Tells TT the block's Armor type, which makes it more resilient to one type of damage over another.
                            // 0    = Standard
                            // 1    = Armor
                            // 2    = Rubber
                            // 3    = Volatile
                            // 4    = Shield
                            // 5    = Wood
                            // 6    = Rock

    "DetachFragility": 0.0, // Tells TT how likely this block can fall off when attacked. 0 is none at all, while 2 is twice as likely.
    
    // Block Dimensions
    "Cells":  
    [   
        // Z Layer 0
        { "x": 0, "y": 0, "z": 0 }, { "x": 1, "y": 0, "z": 0 }, { "x": 2, "y": 0, "z": 0 }, { "x": 3, "y": 0, "z": 0 },
        { "x": 0, "y": 1, "z": 0 }, { "x": 1, "y": 1, "z": 0 }, { "x": 2, "y": 1, "z": 0 }, { "x": 3, "y": 1, "z": 0 },
        { "x": 0, "y": 2, "z": 0 }, { "x": 1, "y": 2, "z": 0 }, { "x": 2, "y": 2, "z": 0 }, { "x": 3, "y": 2, "z": 0 },
        { "x": 0, "y": 3, "z": 0 }, { "x": 1, "y": 3, "z": 0 }, { "x": 2, "y": 3, "z": 0 }, { "x": 3, "y": 3, "z": 0 },

        // Z Layer 1
        { "x": 0, "y": 0, "z": 1 }, { "x": 1, "y": 0, "z": 1 }, { "x": 2, "y": 0, "z": 1 }, { "x": 3, "y": 0, "z": 1 },
        { "x": 0, "y": 1, "z": 1 }, { "x": 1, "y": 1, "z": 1 }, { "x": 2, "y": 1, "z": 1 }, { "x": 3, "y": 1, "z": 1 },
        { "x": 0, "y": 2, "z": 1 }, { "x": 1, "y": 2, "z": 1 }, { "x": 2, "y": 2, "z": 1 }, { "x": 3, "y": 2, "z": 1 },
        { "x": 0, "y": 3, "z": 1 }, { "x": 1, "y": 3, "z": 1 }, { "x": 2, "y": 3, "z": 1 }, { "x": 3, "y": 3, "z": 1 },

        // Z Layer 2
        { "x": 0, "y": 0, "z": 2 }, { "x": 1, "y": 0, "z": 2 }, { "x": 2, "y": 0, "z": 2 }, { "x": 3, "y": 0, "z": 2 },
        { "x": 0, "y": 1, "z": 2 }, { "x": 1, "y": 1, "z": 2 }, { "x": 2, "y": 1, "z": 2 }, { "x": 3, "y": 1, "z": 2 },
        { "x": 0, "y": 2, "z": 2 }, { "x": 1, "y": 2, "z": 2 }, { "x": 2, "y": 2, "z": 2 }, { "x": 3, "y": 2, "z": 2 },
        { "x": 0, "y": 3, "z": 2 }, { "x": 1, "y": 3, "z": 2 }, { "x": 2, "y": 3, "z": 2 }, { "x": 3, "y": 3, "z": 2 },

        // Z Layer 3
        { "x": 0, "y": 0, "z": 3 }, { "x": 1, "y": 0, "z": 3 }, { "x": 2, "y": 0, "z": 3 }, { "x": 3, "y": 0, "z": 3 },
        { "x": 0, "y": 1, "z": 3 }, { "x": 1, "y": 1, "z": 3 }, { "x": 2, "y": 1, "z": 3 }, { "x": 3, "y": 1, "z": 3 },
        { "x": 0, "y": 2, "z": 3 }, { "x": 1, "y": 2, "z": 3 }, { "x": 2, "y": 2, "z": 3 }, { "x": 3, "y": 2, "z": 3 },
        { "x": 0, "y": 3, "z": 3 }, { "x": 1, "y": 3, "z": 3 }, { "x": 2, "y": 3, "z": 3 }, { "x": 3, "y": 3, "z": 3 },

        // Z Layer 4
        { "x": 0, "y": 0, "z": 4 }, { "x": 1, "y": 0, "z": 4 }, { "x": 2, "y": 0, "z": 4 }, { "x": 3, "y": 0, "z": 4 },
        { "x": 0, "y": 1, "z": 4 }, { "x": 1, "y": 1, "z": 4 }, { "x": 2, "y": 1, "z": 4 }, { "x": 3, "y": 1, "z": 4 },
        { "x": 0, "y": 2, "z": 4 }, { "x": 1, "y": 2, "z": 4 }, { "x": 2, "y": 2, "z": 4 }, { "x": 3, "y": 2, "z": 4 },
        { "x": 0, "y": 3, "z": 4 }, { "x": 1, "y": 3, "z": 4 }, { "x": 2, "y": 3, "z": 4 }, { "x": 3, "y": 3, "z": 4 },

        // Z Layer 5
        { "x": 0, "y": 0, "z": 5 }, { "x": 1, "y": 0, "z": 5 }, { "x": 2, "y": 0, "z": 5 }, { "x": 3, "y": 0, "z": 5 },
        { "x": 0, "y": 1, "z": 5 }, { "x": 1, "y": 1, "z": 5 }, { "x": 2, "y": 1, "z": 5 }, { "x": 3, "y": 1, "z": 5 },
        { "x": 0, "y": 2, "z": 5 }, { "x": 1, "y": 2, "z": 5 }, { "x": 2, "y": 2, "z": 5 }, { "x": 3, "y": 2, "z": 5 },
        { "x": 0, "y": 3, "z": 5 }, { "x": 1, "y": 3, "z": 5 }, { "x": 2, "y": 3, "z": 5 }, { "x": 3, "y": 3, "z": 5 },

        // Z Layer 6
                                    { "x": 1, "y": 0, "z": 6 }, { "x": 2, "y": 0, "z": 6 }, 
        { "x": 0, "y": 1, "z": 6 }, { "x": 1, "y": 1, "z": 6 }, { "x": 2, "y": 1, "z": 6 }, { "x": 3, "y": 1, "z": 6 },
        { "x": 0, "y": 2, "z": 6 }, { "x": 1, "y": 2, "z": 6 }, { "x": 2, "y": 2, "z": 6 }, { "x": 3, "y": 2, "z": 6 },
                                    { "x": 1, "y": 3, "z": 6 }, { "x": 2, "y": 3, "z": 6 },

        // Z Layer 7
                                    { "x": 1, "y": 1, "z": 7 }, { "x": 2, "y": 1, "z": 7 }, 
                                    { "x": 1, "y": 2, "z": 7 }, { "x": 2, "y": 2, "z": 7 },

        // Z Layer 8
                                    { "x": 1, "y": 0, "z": 8 }, { "x": 2, "y": 0, "z": 8 }, 
        { "x": 0, "y": 1, "z": 8 }, { "x": 1, "y": 1, "z": 8 }, { "x": 2, "y": 1, "z": 8 }, { "x": 3, "y": 1, "z": 8 },
        { "x": 0, "y": 2, "z": 8 }, { "x": 1, "y": 2, "z": 8 }, { "x": 2, "y": 2, "z": 8 }, { "x": 3, "y": 2, "z": 8 },
                                    { "x": 1, "y": 3, "z": 8 }, { "x": 2, "y": 3, "z": 8 },


        // Z Layer 9
                                    { "x": 1, "y": 1, "z": 9 }, { "x": 2, "y": 1, "z": 9 }, 
                                    { "x": 1, "y": 2, "z": 9 }, { "x": 2, "y": 2, "z": 9 },
    ],

    "APs": [ 
        // Top APs
        { "x": 1, "y": 3.5, "z": 0 }, { "x": 2, "y": 3.5, "z": 0 },

        // Front APs
        { "x": 1, "y": 3.5, "z": 4 }, { "x": 2, "y": 3.5, "z": 4 },
        { "x": 1, "y": -0.5, "z": 4 }, { "x": 2, "y": -0.5, "z": 4 },

        // Back APs
        { "x": 1, "y": 1, "z": -0.5 }, { "x": 2, "y": 1, "z": -0.5 },
        { "x": 1, "y": 2, "z": -0.5 }, { "x": 2, "y": 2, "z": -0.5 },       
      ],

    // Advanced Settings
    "GamePrefabReference": "HE_MiniGun_Large_525",
    "KeepReferenceRenderers": true,                      // Setting this to false will remove any mesh instances the original block will be spawning with the modded block
    "ReferenceOffset": { "x": 0.5, "y": 0.0, "z": 0.5 },

    "SubObjects":[
        // Remove the original components
        {
            "ObjectName":                   "m_HE_MiniGun_313_Base",
            "DestroyExistingRenderer":      true,       
            "DestroyExistingColliders":     true,   
            "Position":                     { "x": 1.5, "y": 1.5, "z": 5.5 }    
        },
        {
            "ObjectName":                   "m_HE_MiniGun_313_RotatingPart_A",
            "DestroyExistingRenderer":      true,       
            "DestroyExistingColliders":     true,            
        },
        {
            "ObjectName":                   "m_HE_MiniGun_313_RotatingPart_B",
            "DestroyExistingRenderer":      true,       
            "DestroyExistingColliders":     true,            
        },

        // Create the body
        {
            "ObjectName":                   "body",
            "MeshName":                     "LK_orchard_autocannon_body.obj",
            "ColliderMeshName":             "LK_orchard_autocannon_body_col.obj",
            "Position":                     { "x": 1.5, "y": 1.5, "z": -0.5 }
        },

        // Remove the original barrel and replace it with a new one
        {
            "ObjectName":                   "m_HE_MiniGun_Barrel",
            "MeshName":                     "LK_orchard_autocannon_barrel.obj",
            "ColliderMeshName":             null,
            "DestroyExistingRenderer":      true,       
            "DestroyExistingColliders":     true,
            "Position":                     { "x": 0.0, "y": 0, "z": -2.7 },
        },

        // Move the other components
        {
            "ObjectName":                   "_spawnBullet", 
            "Position":                     { "x": 0, "y": 0.75, "z": 1.8 },
        },
        {
            "ObjectName":                   "_muzzleFlash", 
            "Position":                     { "x": 0, "y": 0.75, "z": 1.3 },
            "Scale":                        { "x": 2, "y": 2, "z": 2 },
        },
        { 
            "ObjectName":                   "_smoke",
            "Position":                     { "x": 0, "y": 0.75, "z": 1.5 },
        },   
        { // _spawnCasing Objects are rotation-dependent; their orientation will dictate the direction of the casing ejection
            "ObjectName":                   "_spawnCasing",
            "Position":                     { "x": 0, "y": -2, "z": -3 },
            "Rotation":                     { "x": 0, "y": 0,"z": 0 }
        },

    ],

    "Deserializer":{
        "GameObject|m_HE_MiniGun_313_Base":{
            "GameObject|_gimbalBase":{
                "UnityEngine.Transform": {
                    "localPosition": { "x": 0, "y": 0, "z": 0 }
                },
                "GimbalAimer": {
                    "rotationLimits": [0, 0], 
                    "rotationAxis": 0          
                  },

                "GameObject|m_HE_MiniGun_313_RotatingPart_A":{
                    "UnityEngine.Transform": {
                        "localPosition": { "x": 0, "y": 0, "z": 0 }
                    },
                    "GameObject|_gimbalElev":{
                        "GimbalAimer": {
                            "rotationLimits": [0, 0], 
                            "rotationAxis": 0          
                          },
                        "GameObject|_barrel":{
                            "UnityEngine.Transform": {
                                "localPosition": { "x": 0, "y": -0.05, "z": 2.5 }
                            },
                            "GameObject|_spindle":{
                                "Spinner": {
                                    "m_Speed": 1.5,                         // Dictates the speed of the rotation
                                    "m_AutoSpin": false,                    // Enables or disables the object's ability to spin automatically. 
                
                                                                            // Mileage varies between blocks, but in general, any block that has a spinning component 
                                                                            // will have this module and will work.
                
                                    "m_SpinUpTime": 2.0,                    // Dictates the amount of time required for the object to spin in full speed
                                    "m_CurrentAngle": 0.0,                  // Dictates the starting angle of the object when spawned into the world
                                    "m_CurrentAutoSpeed": 0.0,
                                    "m_CurrentSpeedFraction": 0.0,
                                    "m_SpinnerSound": null,
                                    "m_SpinnerSoundOriginalPitch": 0.0,
                                    "AtFullSpeed": false            
                                },

                            },
                            "GameObject|_smoke":{  
                                // Particles are similar to most DDCs. They use an emitter and some form of texture to work in-game.                          
                                "ParticleSystem": {
                                    "startSize":            0.5,        // The start size of the particle
                                    "startLifetime":        3.0,        // The duration of the particle's existence
                                    "emissionRate":         100,
                                    "duration":             0.3,
                                    
                                    // Self-explanatory; this dictates the size of the particle at different points of its life, all the way to the end
                                    "sizeOverLifetime": {
                                        "xMultiplier": 10.0,        // Dictates the multiplier on the X axis of the particle
                                        "yMultiplier": 1.0,         // Dictates the multiplier on the Y axis of the particle
                                        "zMultiplier": 1.0,         // Dictates the multiplier on the Z axis of the particle
                                    },

                                },
                            }

                        }
    
                    }
                }
            },
            

        },

        "Reference|GSO_Cannon_Medium(222)/FireData.": {
            "m_MuzzleVelocity": 200.0,              // Dictates the projectile's speed. The higher the value, the faster it will travel.
            "m_KickbackStrength": 1000.0,           // Dictates the strength of the recoil when firing the gun
            "m_BulletSprayVariance": 0.02,          // Dictates how accurate the gun is. The lower the value, the more accurate it fires its shots.
  
            "m_CasingVelocity": 10.0,
            "m_BulletSpin": 90.0,
            "m_CasingEjectVariance": 0.3,
            "m_CasingEjectSpin": 50.0,

            "Instantiate|m_BulletPrefab": {
                "WeaponRound": {
                  "m_Damage": 1500
                },
                // This is the bullet's white trail. 
                "SmokeTrail":{
                    "numberOfPoints":   10.0,   // Dictates the length of the trail by telling the lineRenderer how many points to create while being spawned.
                                                // Do not decrease this too much as it will begin to act strangely.

                    "spread":           2.0,   // Dictates how erratic the trail is.
                    "riseSpeed":        0.1,   // Dictates how fast the trail rises. This will make the trail act more like a smoke
                    "updateSpeed":      0.15,   // DIctates the speed of the trail.
                },
                // This is attached to the SmokeTrail and controls some of its shape. Please refer to the Unity Scripting API for more information and modules
                "LineRenderer": {
                    "startWidth": 0.5,
                    "endWidth": 0.1,
                    "widthMultiplier": 1.0,
                    
                    // The color at the start of the trail
                    "startColor": {
                        "r": 1.0,
                        "g": 0.3,
                        "b": 0.0,
                        "a": 1.0                
                    },

                    // The color at the end of the trail
                    "endColor":{
                        "r": 1.0,
                        "g": 0.8,
                        "b": 0.0,
                        "a": 1.0                
                    }
                },
              }
        },
        
        "ModuleWeapon": {
            "m_AutoFire": false,                    // If set to true, this weapon will automatically fire at targets
            "m_AimType": 1,                         // If set to 0, the gun will aim at targets. If set to 1, it will not.

            "m_FireSFXType": 64,                    // Dictates the sound used when firing
                                                    // 6  = GSO Megaton Cannon
                                                    // 64 = GSO Gigaton Cannon
                                                    // 77 = GSO Big Bertha Cannon
        },
        
        "ModuleWeaponGun": {
            "m_ShotCooldown": 0.15,                  // The length of pause between shots. A higher value lengthens the pause and vice versa.
            "m_CooldownVariancePct": 0.00,          // Dictates how random the length of pause between shots.
    
            "m_BurstShotCount": 0,                  // Dictates that this block will be firing in bursts before applying a pause. A zero value here disables this behavior.
                                                    // A non-zero, integer value will dictate the number of shots fired.
                                                    // The pause uses the value in m_BurstCooldown
    
            "m_BurstCooldown": 0,                   // The amount of time used to reload when using burst firing - a higher value lengthens reload time. 
                                                    // This is automatically disabled when m_BurstShotCount is set to 0
    
            "m_ResetBurstOnInterrupt": false,       // Dictates whether the gun will automatically reload the gun when it stops firing. 
                                                    // Only applies when m_BurstShotCount is NOT set to 0
    
            "m_FireControlMode": 1,                 // Dictates how the guns will fire
                                                    //  0 =   The guns will fire one at a time
                                                    //  1 =   All guns will fire at the same time
    
            "m_SeekingRounds": false,               // Dictates whether the projectiles fired by this weapon will home toward targets
        },

    }


}