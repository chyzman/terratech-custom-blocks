// -- Make a copy of this file, change the ID and Hex, and modify the values shown to make your own block --
// "PropertyName" : Value,
// Only change the Value
{
  "Name": "TAC Sniper AI Core", //was TAC Drone Chassis
  "Description": "!!!MUST BE FIRST CAB BLOCK ON TECH TO FUNCTION CORRECTLY!!! \n\nA purdy AI who likes to keep their distance and snipe the dumbells from far away. \n\n\nDeveloped by a pact between UESO and TAC, this AI was taught how to fight enemies from a safe distance.", //You can make multiple lines with \n
  "ID": 584256, //A random ID that MUST be unique
  //"IDNetHex": "ffffffffffffffff", //Get a random hex from https://www.random.org/bytes/ (8 bytes work)

  "Faction": 5, //GSO = 1|0, GeoCorp = 2, EXP = 3, Venture = 4, HawkEye = 5, Special = 6, BetterFuture = 7
  "Category": 1, //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
  "Grade": 3, //The desired grade minus one - HE Grade 4
  "Price": 24663,//
  "HP": 3000, //no easy die but DO NOT PUSH IT
  //TAC blocks are normally 450, this has HUGE bonus health.
  "Mass": 1.5,

  "IconName": "HAL9000.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named

  "MeshName": null, //"GSO_BigBertha_845_MOD.obj"  FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

  "Recipe":  "44, 44, 45, 45, 51, 60, 60, 65", // Separate chunk names or IDs with a comma. Not case sensitive.
      // "name": "Rugged Fiblar",
      // "id": 52,
      // "price": 94,
      // "name": "Mother Brain",
      // "id": 60,
      // "price": 1465,


  /*  EITHER  */
  "MeshTextureName": null, //FILE Name of image for texture, such as "texture.png". File can be anywhere and should be uniquely named
  /*  OR  */
  "MeshMaterialName": null, //Name of one of the GAME'S materials to use, such as "Corp_Main", "GSO_Main", "GeoCorp_Main", "Venture_Main", and "HE_Main". This material flashes and everything!


  /*  OPTIONAL  */ "ColliderMeshName": null, //FILE Name of the mesh, such as "collider.obj". Leaving as null will make a box collider relative to the mesh

  // X is right and left, Y is up and down, and Z is forward and backward

  /*  EITHER  */
  "Cells": [ //The grid space to be occupied

  ],
  "APs": [ //The location of APs on the block. For use with "Cells"
     {
       "x": 0,
       "y": 0,
       "z": -0.5
     },
     {
       "x": 0,
       "y": 0.5,
       "z": 0
     },
     {
       "x": 0,
       "y": -0.5,
       "z": 0
     },
     {
       "x": -0.5,
       "y": 0,
       "z": 0
     },
     {
       "x": 0.5,
       "y": 0,
       "z": 0
     },
  ],
  /*  OR  */
  "BlockExtents": //Makes a grid box with these dimensions. Is ignored if "Cells": is used
  {
    "x": 1,
    "y": 1,
    "z": 1 
  }, // A vector of (1, 1, 1) returns a one-celled block
  "APsOnlyAtBottom": false, //Make APs only on the bottom, or have all faces covered. Only works with "BlockExtents":



  // Delete /* and */ if using
   
  
  //OPTIONAL

	"GamePrefabReference": "GC_Cab(222)",//Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)"
  "KeepReferenceRenderers": false,
	"ReferenceOffset": { "x": 0, "y": 0.5, "z": 1 }, //Shift the subobjects of the block prefab by x, y and z

 
  
  // Sub Objects can modify existing sub gameobjects on a prefab reference
  "SubObjects": [ 
  { // Base
    "SubOverrideName": "m_GC_Cab_222_copy",
    // "DestroySubReferenceRenderer": true,
    "DestroyExistingRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "DecoyBlockScreen.obj",
    "ColliderMeshName": "DecoyBlockScreen.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
    //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
  },
  { // Base
    "SubOverrideName": "m_GC_Cab_222",
    // "DestroySubReferenceRenderer": true,
    "DestroyExistingRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "DecoyBlock.obj",
    "ColliderMeshName": "DecoyBlock.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
    //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
  },
],
	
  "JSONBLOCK": { //Root GameObject
    "GameObject|GeoCorp_Cab_Light 2": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
    },
    "GameObject|GeoCorp_Cab_Light 1": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
    },
    "GameObject|m_GC_Cab_222": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
      "UnityEngine.MeshCollider":{
        "gameObject": {
          "layer": 8 //ID 524288Layers:
        }
      },
    },
    "Duplicate|m_GC_Cab_222": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
      // "UnityEngine.MeshRenderer": {
      //   "material": {
      //     // "mainTexture": "LED_BeamBlockG.png",
      //     "color": {
      //       "r": 0.0,
      //       "g": 0.0,
      //       "b": 1.0,
      //       "a": 1.0,
      //       "maxColorComponent": 2.0
      //     },
      //   },
      // },
    },
    "GameObject|CentreOfMass": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
    },
    "GameObject|GEO_Corp_Cab2_SPOTLIGHT 2": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
      "UnityEngine.Light": {
        "spotAngle": 45.0,
        "color": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0,
          "a": 1.0
        },
        // "colorTemperature": 6570.0,
        "intensity": 0.1,//2.0
        "bounceIntensity": 1.0,
        "shadowCustomResolution": -1,
        "shadowBias": 0.5,
        "shadowNormalBias": 1.0,
        "shadowNearPlane": 0.2,
        "range": 15.0,
        "flare": null
      }
    },
    "GameObject|GEO_Corp_Cab2_SPOTLIGHT 1": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
      "UnityEngine.Light": {
        "spotAngle": 45.0,
        "color": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0,
          "a": 1.0
        },
        // "colorTemperature": 6570.0,
        "intensity": 0.25,//2.0
        "bounceIntensity": 1.0,
        "shadowCustomResolution": -1,
        "shadowBias": 0.5,
        "shadowNormalBias": 1.0,
        "shadowNearPlane": 0.2,
        "range": 15.0,
        "flare": null
      }
    },

    //Now we begin MADNESS
    "ModuleFuelTank": {
      "m_Capacity": 1.0,
      "m_RefillRate": 1.0,
    },

    "FFW_TT_BuffBlock.ModuleBuffMk2": {//Set all guns and boosters to fire automatically!
      //Also make them less noisy
      "m_BuffPath": [ 
        "ModuleWeapon.m_AutoFire",
        "ModuleBooster.m_UseDriveControls",
        "ModuleBooster.m_IsRocketBooster",
        "ModuleBooster.m_IsFiringSteer",
        "ModuleBooster.m_BoosterAudioType",
        //To make steering more precise
        "ModuleWheels.m_WheelParams.m_wheels.m_DriveTurnPower",
        "ModuleWheels.m_WheelParams.m_wheels.m_DriveTurnBrake",
        "ModuleWheels.m_WheelParams.m_wheels.m_TurnOnSpotPower",
      ],
      "m_Strength": [ 
        0, 
        0,
        0,
        0,
        0,
        0,
        0,
        0
      ],
      "m_AddAfter": [ 
        1, 
        1,
        0,
        1,
        4,
        0.1,
        0.4,
        0.2
      ],
      "m_NeedsToBeAnchored": [ 
        false, 
        false,
        false,
        false,
        false,
        false,
        false,
        false
      ]
    },
    "ModuleTechController": { //Let's-a-Control!
      "m_PlayerInput": false,//Blocks player control
      "HandlesPlayerInput": false
    },
    "ModuleAIBot": {
      "m_AITypesEnabled": ["Harvest", "Idle", "Escort"]
    },
     //Snipebot
	  "ModuleDriveBot": {
      "targetIdealRange": 100.0, //How far do we want to stay from the target? Far for sniping. Works best with unlimited-range weapon.
      //AI freezes at 150
      //within this range we turn "turnToleranceInner"
      "turnToleranceOuter": 25.0, //How hard we steer when far from target
      "turnToleranceInner": 180.0, //How hard we steer when close to target
      "m_DefaultThrottle": 5.0, //How hard we press on the "W" key
      "poweredTurnInsideWheel": 0.05, //how much the wheels by the enemy slows by when turning
      "waypointDistanceFullThrottle": 10.0, //If beyond this we move FAST
      "turnAngleFullThrottle": 15.0, //Max safe angle to turn while pressing "W"
      "waypointReachedTolerance": 6.0, //The location error the Tech can have before assuming that it is "close enough" to the target location
      "waypointPlayerAngularBias": 25.0, //How hard we should turn in relation to the player when trying to flank them
      "lookAroundAngleMin": 30.0, //idk
      "lookAroundAngleMax": 60.0, //idk
      "m_DefaultPatrolDistMin": 500.0, //Idle movement distance before engaging player
      "m_DefaultPatrolDistMax": 1500.0, //Idle movement distance before FREEEZE
      "patrolThrottle": 0.75, //Idle movements
      "lookAroundPauseMin": 2.0, //Minimum time before moving randomly while idle
      "lookAroundPauseMax": 8.0, //Maximum time before moving randomly while idle
      "lookAroundThrottle": 0.6, //How hard we press "W" when idle
      "lostTargetMemoryTime": 2.0, //How long we attempt to reach a location from where someone attacked us
      "holdTargetDuration": 3.0, //Max time before we update our pursued target to the closest target in agro range
      "stopCirclingTimer": 2.0, //how long until we stop circling the target
      "stopCirclingDelay": 10.0, //how long until we stop circling the target
      "controlPriority": 50, //idk
      "recoverTimeout": 3.0, //How long before we attempt to Build Beam(right self) again
      "forceUnCapsizeTimeout": 5.0, //How longe before we give up on the Build Beam self-righting attempt
      "capsizedMinSpeed": 1.0, //How slow we must be going in order to attempt Build Beam
      "m_ThrottleD": 0.75, //Max Throttle Forwards/Backwards
      "m_ThrottleT": 0.1, //Max Throttle Turning
      "m_PatrolDistMin": 8.0, //Idle movement distance before engaging player
      "m_PatrolDistMax": 15.0, //Idle movement distance before FREEEZE
	    "sumoBoostOn": true, //Will hold shift to KILL ENEMY
	    "attackTargetRadius": 500,//When the AI will attack when possible targets are within this range
	    // "OnSpawn": {
	    // "hostileTarget": true, //ATTACK ON SPAWN
	    // "friendlyTarget": false, //Is this an ally of Player
	    // }, //
	  },
    "ModuleDamage": {
      "m_DamageDetachFragility": 0.0, //the multiplier for the knock-off value from weapon damage hits x Bullet Velocity. Set to zero to disable.
      //Popping off in the middle of a fight will really ruin your day
      // "m_ExplodeCountdownTimer": 0.0, //How long till the block commits die
      // "m_HealOnDetach": false, //Does this block heal when it is detached?
      // "m_HealOnDetachPercent": 0.0, //How much it heals when detached
      // "m_DamageDetachMeter": 0.0, //idk
      // "m_DamageDetachMeterTimestamp": 0.0, //idk
    },
    "Damageable": {
      "m_DamageableType": 1, 
      "m_AoEDamageBlockPercent": 0.1,//Explosions are pathetic on TAC Blocks in general
    },
    // TAC Standard - Shockwave Dissipation Armor
    "RandomAdditions.ModuleReinforced":{ // Add a special resistance to your block
      "DoDamagableSwitch": true, // Should we switch the DamageableType of this block?
      "TypeToSwitch": 0,          // DamageableType to switch to

      "ModifyAoEDamage": true,    // Enable AoE damage changing? (only handles Explosion, not shotguns)
      "ExplosionMultiplier": 0.6,   // Multiplier for all AoE attacks dealt against this block

      "UseMultipliers": false,     // Should the multipliers be used?
    },
    "TAC_AI.ModuleAIExtension":{ // Add a special AI type to your AI Module
      // Set the ones you want your AI to support to true
      // -----COMBAT-----
      // - Escort is enabled by default since you have to corral your minions somehow
      "Assault": false,
      "Aegis": false,

      // -----RESOURCES-----
      "Prospector": false,
      "Scrapper": false,
      "Energizer": false,

      // ----TOUGHER ENEMIES----
      "Aviator": false,
      "Buccaneer": false,
      "Astrotech": false,

      // ----EXTRAS----
      "AutoAnchor": false,    // Should the AI anchor and un-anchor automatically?
      "MeleePreferred": false,// Should the AI ram the enemy?
      "SidePreferred": false, // Should the AI orbit the enemy? (Partially overrides melee)
      "AdvAvoidence": false,  // Should the AI avoid two allied techs at once?
      "AdvancedAI": false,    // Should the AI take combat calculations and retreat if nesseary? (N/A atm)
      "MTForAll": false,      // Should the AI listen to other Tech MT commands?
      "AidAI": false,         // Should the AI be willing to sacrifice themselves for their owner's safety? - (N/A)
      "SelfRepairAI": false,  // Can the AI self-repair?
      "AnimeAI": false,       // Work with the AnimeAI mod and display a character for this AI? (And also allow interaction with other characters?)

      "MinCombatRange": 150,   // Min range the AI will keep from an enemy
      "MaxCombatRange": 300,  // Max range the AI will travel from it's priority defence target (or x2 assassin provoke radius from home)
    }
  }
}
