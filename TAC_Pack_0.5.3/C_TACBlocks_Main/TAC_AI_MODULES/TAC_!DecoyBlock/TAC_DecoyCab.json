// -- Make a copy of this file, change the ID and Hex, and modify the values shown to make your own block --
// "PropertyName" : Value,
// Only change the Value
{
  "Name": "TAC Decoy Computer", //was TAC Drone Chassis
  "Description": "Fool your enemies with the Decoy Block! \nYou can also use this to hold Techs together, yet not have a player-controllable Cab.", //You can make multiple lines with \n
  "ID": 584234, //A random ID that MUST be unique
  //"IDNetHex": "ffffffffffffffff", //Get a random hex from https://www.random.org/bytes/ (8 bytes work)

  "Faction": 5, //GSO = 1|0, GeoCorp = 2, EXP = 3, Venture = 4, HawkEye = 5, Special = 6, BetterFuture = 7
  "Category": 1, //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
  "Grade": 3, //The desired grade minus one - HE Grade 4
  "Price": 5805,//5805x3=17415
  "HP": 1750, //no easy die but DO NOT PUSH IT
  //TAC blocks are normally 450, this has HUGE bonus health.
  "Mass": 1.5,

  "IconName": "HAL9000.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named

  "MeshName": null, //"GSO_BigBertha_845_MOD.obj"  FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

  "Recipe": "52, 52, 52, 52, 52, 60", // Separate chunk names or IDs with a comma. Not case sensitive.
      // "name": "Rugged Fiblar",
      // "id": 52,
      // "price": 94,
      // "name": "Mother Brain",
      // "id": 60,
      // "price": 1465,


  /*  EITHER  */
  "MeshTextureName": null, //FILE Name of image for texture, such as "texture.png". File can be anywhere and should be uniquely named
  /*  OR  */
  "MeshMaterialName": null, //Name of one of the GAME'S materials to use, such as "Corp_Main", "GSO_Main", "GeoCorp_Main", "Venture_Main", and "HE_Main". This material flashes and everything!


  /*  OPTIONAL  */ "ColliderMeshName": null, //FILE Name of the mesh, such as "collider.obj". Leaving as null will make a box collider relative to the mesh

  // X is right and left, Y is up and down, and Z is forward and backward

  /*  EITHER  */
  "Cells": [ //The grid space to be occupied

  ],
  "APs": [ //The location of APs on the block. For use with "Cells"
     {
       "x": 0,
       "y": 0,
       "z": -0.5
     },
     {
       "x": 0,
       "y": 0.5,
       "z": 0
     },
     {
       "x": 0,
       "y": -0.5,
       "z": 0
     },
     {
       "x": -0.5,
       "y": 0,
       "z": 0
     },
     {
       "x": 0.5,
       "y": 0,
       "z": 0
     },
  ],
  /*  OR  */
  "BlockExtents": //Makes a grid box with these dimensions. Is ignored if "Cells": is used
  {
    "x": 1,
    "y": 1,
    "z": 1 
  }, // A vector of (1, 1, 1) returns a one-celled block
  "APsOnlyAtBottom": false, //Make APs only on the bottom, or have all faces covered. Only works with "BlockExtents":



  // Delete /* and */ if using
   
  
  //OPTIONAL

	"GamePrefabReference": "GC_Cab(222)",//Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)"
  "KeepReferenceRenderers": false,
	"ReferenceOffset": { "x": 0, "y": 0.5, "z": 1 }, //Shift the subobjects of the block prefab by x, y and z

 
  
  // Sub Objects can modify existing sub gameobjects on a prefab reference
  "SubObjects": [ 
  { // Base
    "SubOverrideName": "m_GC_Cab_222_copy",
    // "DestroySubReferenceRenderer": true,
    "DestroyExistingRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "DecoyBlockScreen.obj",
    "ColliderMeshName": "DecoyBlockScreen.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
    //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
  },
  { // Base
    "SubOverrideName": "m_GC_Cab_222",
    // "DestroySubReferenceRenderer": true,
    "DestroyExistingRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "DecoyBlock.obj",
    "ColliderMeshName": "DecoyBlock.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
    //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
  },
],
	
  "JSONBLOCK": { //Root GameObject
    "GameObject|GeoCorp_Cab_Light 2": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
    },
    "GameObject|GeoCorp_Cab_Light 1": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
    },
    "GameObject|m_GC_Cab_222": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
      "UnityEngine.MeshCollider":{
        "gameObject": {
          "layer": 8 //ID 524288Layers:
        }
      },
    },
    "Duplicate|m_GC_Cab_222": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
      "UnityEngine.MeshRenderer": {
        "material": {
          // "mainTexture": "LED_BeamBlockG.png",
          "color": {
            "r": 1.0,
            "g": 0.0,
            "b": 0.0,
            "a": 1.0,
            "maxColorComponent": 2.0
          },
        },
      },
    },
    "GameObject|CentreOfMass": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
    },
    "GameObject|GEO_Corp_Cab2_SPOTLIGHT 2": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
      "UnityEngine.Light": {
        "spotAngle": 45.0,
        "color": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0,
          "a": 1.0
        },
        // "colorTemperature": 6570.0,
        "intensity": 0.1,//2.0
        "bounceIntensity": 1.0,
        "shadowCustomResolution": -1,
        "shadowBias": 0.5,
        "shadowNormalBias": 1.0,
        "shadowNearPlane": 0.2,
        "range": 15.0,
        "flare": null
      }
    },
    "GameObject|GEO_Corp_Cab2_SPOTLIGHT 1": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
      "UnityEngine.Light": {
        "spotAngle": 45.0,
        "color": {
          "r": 1.0,
          "g": 1.0,
          "b": 1.0,
          "a": 1.0
        },
        // "colorTemperature": 6570.0,
        "intensity": 0.1,//2.0
        "bounceIntensity": 1.0,
        "shadowCustomResolution": -1,
        "shadowBias": 0.5,
        "shadowNormalBias": 1.0,
        "shadowNearPlane": 0.2,
        "range": 15.0,
        "flare": null
      }
    },

    //Now we begin MADNESS
    "ModuleFuelTank": {
      "m_Capacity": 1.0,
      "m_RefillRate": 1.0,
    },

    "ModuleTechController": { //Let's-a-Control!
      "m_PlayerInput": false,//Blocks player control
      "HandlesPlayerInput": false
    },
    // "ModuleAIBot": {
    //   "m_AITypesEnabled": ["Harvest", "Idle", "Escort"]
    // },
    "ModuleDamage": {
      "m_DamageDetachFragility": 100.0, //the multiplier for the knock-off value from weapon damage hits x Bullet Velocity. Set to zero to disable.
      //Popping off in the middle of a fight will really ruin your day
      // "m_ExplodeCountdownTimer": 0.0, //How long till the block commits die
      // "m_HealOnDetach": false, //Does this block heal when it is detached?
      // "m_HealOnDetachPercent": 0.0, //How much it heals when detached
      // "m_DamageDetachMeter": 0.0, //idk
      // "m_DamageDetachMeterTimestamp": 0.0, //idk
    },
    "Damageable": {
      "m_DamageableType": 1, 
      "m_AoEDamageBlockPercent": 0.1,//Explosions are pathetic on TAC Blocks in general
    },
    // TAC Standard - Shockwave Dissipation Armor
    "RandomAdditions.ModuleReinforced":{ // Add a special resistance to your block
      "DoDamagableSwitch": true, // Should we switch the DamageableType of this block?
      "TypeToSwitch": 0,          // DamageableType to switch to

      "ModifyAoEDamage": true,    // Enable AoE damage changing? (only handles Explosion, not shotguns)
      "ExplosionMultiplier": 0.6,   // Multiplier for all AoE attacks dealt against this block

      "UseMultipliers": false,     // Should the multipliers be used?
    },
  }
}
