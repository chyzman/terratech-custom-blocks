// -- Make a copy of this file, change the ID and Hex, and modify the values shown to make your own block --
// "PropertyName" : Value,
// Only change the Value
{ 
  "Name": "TAC Light Praetorian Turret",
  "Description": "The Praetorian Gun is a very powerful gun used to shoot targets in orbit from the ground. A massive twin-barreled railgun that can be used for home defense as well as a naval primary gun. \n\nThis is a weapon designed by the legendary Naval Engineer, <b>Sozin</b>. \n\nKatherine: I am base weapons fella, and this, is my weapon. It fires 20 ton tungsten slugs at over mach 5. It costs 2,000,000BB to fire this gun <b>for 8 seconds</b>. \nKatherine the TAC HQ AI loves this gun. \n\n\nOf course we gave you <b>The Toy</b>, we can't trust you yet with the real thing silly! \nThe OG base one is almost at the maximum build limit and would cost 2,000,000BB to fire for 8 seconds. \n\nIt would take LOADS of time and effort to amass said cash, and \n<b>aint nobody got time for dat</b>.",//You can make multiple lines with \n
  "ID": 584221, //A random ID that MUST be unique

  "Faction": 5, //GSO = 1|0, GeoCorp = 2, EXP = 3, Venture = 4, HawkEye = 5, Special = 6, BetterFuture = 7
  "Category": 4, //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
  "Grade": 3, //The desired grade minus one
  "Price": 100812,
  "HP": 37500,//Bulky
  //Was 8750
  //Let's face it, if this block had as much health per area consumed, it would be stronger than the Bulkhead Doors and probably go to the enemy. 
  //a stupidly high 90000 HP. Let's not.
  //Instead we can give it some blast resistance.
  "Mass": 45.0,//Heavy
  //This block takes up an area of 200 blocks ALONE

  "IconName": "OverkillRailgun.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named

  "MeshName": null, //"GSO_BigBertha_845_MOD.obj"  FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

  "Recipe":  "44, 44, 44, 44, 44, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 45, 45, 45, 45, 47, 47, 49, 49, 49, 49, 50,52, 52, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 63, 63, 64, 64, 65, 66, 66", // Separate chunk names or IDs with a comma. Not case sensitive.


  /*  EITHER  */
  "MeshTextureName": null, //FILE Name of image for texture, such as "texture.png". File can be anywhere and should be uniquely named
  /*  OR  */
  "MeshMaterialName": null, //Name of one of the GAME'S materials to use, such as "Corp_Main", "GSO_Main", "GeoCorp_Main", "Venture_Main", and "HE_Main". This material flashes and everything!


  /*  OPTIONAL  */ "ColliderMeshName": null, //FILE Name of the mesh, such as "collider.obj". Leaving as null will make a box collider relative to the mesh

  // X is right and left, Y is up and down, and Z is forward and backward

  /*  EITHER  */
  "Cells": [ //The grid space to be occupied

  ],
  "APs": [ //The location of APs on the block. For use with "Cells"
     { "x": 1, "y": -0.5, "z": 2 },
     { "x": 2, "y": -0.5, "z": 2 },
     { "x": 3, "y": -0.5, "z": 2 },
     { "x": 1, "y": -0.5, "z": 3 },
     { "x": 2, "y": -0.5, "z": 3 },
     { "x": 3, "y": -0.5, "z": 3 },
     { "x": 1, "y": -0.5, "z": 4 },
     { "x": 2, "y": -0.5, "z": 4 },
     { "x": 3, "y": -0.5, "z": 4 },
  ],
  /*  OR  */
  "BlockExtents": //Makes a grid box with these dimensions. Is ignored if "Cells": is used
  {
    "x": 5,
    "y": 5,
    "z": 8 //Absolutely massive for now.
  }, // A vector of (1, 1, 1) returns a one-celled block
  "APsOnlyAtBottom": false, //Make APs only on the bottom, or have all faces covered. Only works with "BlockExtents":


  // Delete /* and */ if using
   
  
  //OPTIONAL

	"GamePrefabReference": "HE_RailGunTurret(213)",//Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)"
  "KeepReferenceRenderers": true,
	"ReferenceOffset": { "x": 0.5, "y": 0.6, "z": 2.5 }, //Shift the subobjects of the block prefab by x, y and z
  "DeathExplosionReference":"HE_DeliveryCannon_353",//bigg

 
  
  // Sub Objects can modify existing sub gameobjects on a prefab reference
  "SubObjects": [ 
  { //Base
   "SubOverrideName": "m_HE_RailGunTurret_213_Base",
    "DestroySubReferenceRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "TACPTurretBaseR.obj",
    "ColliderMeshName": "TACPTurretBaseR.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
  },
  { //Azimuth
   "SubOverrideName": "m_HE_RailGunTurret_213_Mount",
    "DestroySubReferenceRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "TACPTurretRotatingPartR.obj",
    "ColliderMeshName": "TACPTurretRotatingPartR.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
  },
  { //Azimuth Detail L
   "SubOverrideName": "m_Azi_Detail_L",
    "DestroySubReferenceRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "TACPTurretRotatingPartPipesR.obj",
    "ColliderMeshName": "TACPTurretRotatingPartPipesR.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
  },
  { //Azimuth Detail L
   "SubOverrideName": "m_Azi_Detail_R",
    "DestroySubReferenceRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "TACPTurretRotatingPartPipesR.obj",
    "ColliderMeshName": "TACPTurretRotatingPartPipesR.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
  },
  { //Elevation Left
   "SubOverrideName": "m_HE_RailGunTurret_213_Body",
    "DestroySubReferenceRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "TACPTurretElevationR.obj",
    "ColliderMeshName": "TACPTurretElevationR.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
  },
  { //Elevation Right
   "SubOverrideName": "m_Turret_Elevation_R",
    "DestroySubReferenceRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "TACPTurretElevationR.obj",
    "ColliderMeshName": "TACPTurretElevationR.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
  },
  { //Elevation Eye
   "SubOverrideName": "m_EyeAimer",
    "DestroySubReferenceRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "TACPTurretRotatingPartEyeR.obj",
    "ColliderMeshName": "TACPTurretRotatingPartEyeR.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
  },
  { //Anchor
   "SubOverrideName": "m_GSO_Base_Rotating_Stand_111",
    "DestroySubReferenceRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "TACRotatingAnchorAnchor3.obj",
    "ColliderMeshName": "TACRotatingAnchorAnchor3.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
  },
  { //Remove unwanted parts
   "SubOverrideName": "m_GSO_Anchor_Hook",
    "DestroyExistingRenderer": true,
    "DestroyExistingColliders": true,
  }
],
	
  //
  // Deadly Laser
  //
  "JSONBLOCK": { //Root GameObject
    "GameObject|m_HE_RailGunTurret_213_Base": {
      "UnityEngine.Transform": {
        "localScale": { "x":1, "y":1, "z":1 },
        "localPosition": { "x":2, "y":0, "z":3 }
      },
    },
    "GameObject|_gimbalBase": { //GameObject child
      "UnityEngine.Transform": {
        "localPosition": { "x":2, "y":0, "z":3 }
      },
      "GimbalAimer": {
        "rotationLimits": [-180, 180]//Full Range here
      }, //For horizontal aim restrictions - Doesn't work on this Turret though
      "GameObject|m_HE_RailGunTurret_213_Mount": {
        "UnityEngine.Transform": {
          "localScale": { "x":1, "y":1, "z":1 },
          "localEulerAngles": { "x":0, "y":0, "z":0 },
          "localPosition": { "x":0, "y":0, "z":0 }
        },
      },
      "GameObject|m_Azi_Detail_L": {
        "UnityEngine.Transform": {
          "localScale": { "x":1, "y":1, "z":1 },
          "localEulerAngles": { "x":0, "y":0, "z":0 },
          "localPosition": { "x":0, "y":0, "z":0 }
        },
      },
      "GameObject|m_Azi_Detail_R": {
        "UnityEngine.Transform": {
          "localScale": { "x":-1, "y":1, "z":1 },
          "localEulerAngles": { "x":0, "y":0, "z":0 },
          "localPosition": { "x":0, "y":0, "z":0 }
        },
      },
      "GameObject|b_EyeBone": { //GameObject child
        "UnityEngine.Transform": { //Positioning Set
          // "localScale": { "x":1, "y":1, "z":1 },
          "localPosition": { "x":0, "y":2.65, "z":1.375 }
        },
      },
      //Disabled this for now as it was messing with the other barrels that launch projectiles.
      // "Reference|BF_Laser_Turret_212/_gimbalBase/_gimbalElev": { //adding evil lasor aim effect placeholder
      //   "GimbalAimer": {
      //     "rotationLimits": [-100, 12] //Vertical aim restrictions
      //   },
      //   "UnityEngine.Transform": {
      //     "localScale": { "x":1, "y":1, "z":1 },
      //     "localEulerAngles": { "x":0, "y":0, "z":0 },
      //     "localPosition": { "x":0, "y":2.65, "z":1.75 }
      //   },
      //   "GameObject|_barrel": {
      //     // "CannonBarrel": {
      //     //   // "projectileSpawnPoint": null,
      //     // },
      //     "GameObject|_muzzleFlash": {
      //       "GameObject|_light": {        
      //         "UnityEngine.Light": {
      //           "color": {
      //             "r": 1.0,
      //             "g": 0.0,
      //             "b": 0.0,
      //             "a": 1.0
      //           },
      //           // "colorTemperature": 6570.0,
      //           "areaSize": 1.25,//2.0
      //           "intensity": 50.0,//2.0
      //           // "bounceIntensity": 1.0,
      //           // "shadowCustomResolution": -1,
      //           // "shadowBias": 0.5,
      //           // "shadowNormalBias": 1.0,
      //           // "shadowNearPlane": 0.2,
      //           "range": 1.25,
      //         }, 
      //         "FadeInOutLight": {
      //           "StartDelay": 0.0,
      //           "FadeInSpeed": 0.05,
      //           "FadeOutDelay": 20.0,
      //           "FadeOutSpeed": 0.05,
      //           "FadeOutAfterCollision": true,
      //           "UseHideStatus": true,
      //           // "goLight": "TheLightSpecifiedAbove",
      //           // "canStart": true,
      //         }
      //       }
      //     },
      //     // "GameObject|_bulletSpawn": null,
      //     "GameObject|_beam": {
      //       "BeamWeapon": {
      //         "m_Range": 450.0,
      //         "m_DamagePerSecond": 0.5,//this is just a blinky light laser
      //         "m_DamageType": 0,
      //         "m_FadeOutTime": 11.0,
      //         "m_BeamParticlesPrefab": null,
      //         "m_BeamStartDistance": 0.0,
      //         // "m_FadeTimer": -11.6362123,
      //         "m_BeamParticles": null,
      //         "m_HitParticles": null,
      //         "m_FlashEffect": null,
      //         // "m_HitParticlesPrefab": null,
      //         "Instantiate|m_HitParticlesPrefab": {
      //           "UnityEngine.ParticleSystem": {
      //             "startColor": { "r": 1.0, "g": 0.0, "b": 0.0, "a": 1.0 },
      //             "startSize": 0,
      //             "main": {
      //               "m_ParticleSystem": {
      //                 "maxParticles": 0
      //               }
      //             }
      //           },
      //           "GameObject|_glow": {
      //             "UnityEngine.ParticleSystem": {
      //               "startColor": { "r": 1.0, "g": 0.0, "b": 0.0, "a": 1.0 },
      //               "startSize": 0,
      //               "main": {
      //                 "m_ParticleSystem": {
      //                   "maxParticles": 0
      //                 }
      //               }
      //             },
      //             "UnityEngine.Light": {
      //               "color": {
      //                 "r": 1.0,
      //                 "g": 0.0,
      //                 "b": 0.0,
      //                 "a": 1.0
      //               },
      //               // "colorTemperature": 6570.0,
      //               "areaSize": 1.0,//2.0
      //               "intensity": 175.0,//2.0
      //               // "bounceIntensity": 1.0,
      //               // "shadowCustomResolution": -1,
      //               // "shadowBias": 0.5,
      //               // "shadowNormalBias": 1.0,
      //               // "shadowNearPlane": 0.2,
      //               "range": 1.0,
      //             }, 
      //             // "FadeInOutLight": {
      //             //   "StartDelay": 0.0,
      //             //   "FadeInSpeed": 0.05,
      //             //   "FadeOutDelay": 0.1,
      //             //   "FadeOutSpeed": 0.05,
      //             //   "FadeOutAfterCollision": true,
      //             //   "UseHideStatus": true,
      //             //   // "goLight": "TheLightSpecifiedAbove",
      //             //   // "canStart": true,
      //             // }
      //           },
      //         },
      //         // "Range": 350.0
      //       },
      //       "UnityEngine.LineRenderer": {
      //         "startWidth": 0.6,
      //         "endWidth": 0.6,
      //         // "positionCount": 2
      //         "startColor": {
      //           "r": 1.0,
      //           "g": 0.0,
      //           "b": 0.0,
      //           "a": 1.0,
      //           "maxColorComponent": 1.0
      //         },
      //         "endColor": {
      //           "r": 1.0,
      //           "g": 0.0,
      //           "b": 0.0,
      //           "a": 1.0,
      //           "maxColorComponent": 1.0
      //         }
      //       }
      //     },
      //     "Duplicate|_beam": {
      //     },
      //   }
      // },
      "GameObject|_gimbalElev": { //GameObject in child
        "UnityEngine.Transform": {
          "localPosition": { "x":0, "y":2.25, "z":-0.75 }
        },
        "GimbalAimer": {
          "rotationLimits": [-90, 10], //Vertical aim restrictions
        },
        "GameObject|m_EyeAimer": { //GameObject child
          "UnityEngine.Transform": { //Positioning Reset
            // "localScale": { "x":1, "y":1, "z":1 },
            "localPosition": { "x":0, "y":0, "z":0 }
          },
          "FollowTransform": {//lock to assigned position
            "m_TransformToFollow": "/_gimbalBase/b_EyeBone",
            "m_FollowOrientation": false,
          },
          "GameObject|_redLight": {  
            "UnityEngine.Transform": {
              "localScale": { "x":1, "y":1, "z":1 },
              "localEulerAngles": { "x":0, "y":0, "z":0 },
              "localPosition": { "x":0, "y":0, "z":0.95 }
            },      
            "UnityEngine.Light": {
              "color": {
                "r": 1.0,
                "g": 0.0,
                "b": 0.0,
                "a": 1.0
              },
              // "colorTemperature": 6570.0,
              "intensity": 25.0,//2.0
              // "bounceIntensity": 1.0,
              // "shadowCustomResolution": -1,
              // "shadowBias": 0.5,
              // "shadowNormalBias": 1.0,
              // "shadowNearPlane": 0.2,
              "range": 0.5,
            }, 
          },
        },
        "GameObject|m_HE_RailGunTurret_213_Body": {
          "UnityEngine.Transform": {
            "localScale": { "x":1, "y":1, "z":1 },
            "localEulerAngles": { "x":0, "y":0, "z":0 },
            "localPosition": { "x":-1.0, "y":0, "z":0 }
          },
        },
        "GameObject|m_Turret_Elevation_R": {
          "UnityEngine.Transform": {
            "localScale": { "x":1, "y":1, "z":1 },
            "localEulerAngles": { "x":0, "y":0, "z":0 },
            "localPosition": { "x":1.0, "y":0, "z":0 }
          },
        },
        "GameObject|_barrel": { //GameObject in child
          "UnityEngine.Transform": {
            "localPosition": { "x":-1.0, "y":0, "z":3 }
          },
          "CannonBarrel": {
            "muzzleFlash": {
              "m_SpeedFactor": 1.0
            },
            "animState": null,
            "recoilAnim": null
          },
          "GameObject|_bulletSpawn": {
            "UnityEngine.Transform": {
              "localScale": { "x":1, "y":1, "z":1 }, //Animation rescaling
              "localPosition": { "x":0, "y":0, "z":1.5 }
            },
          },
          "GameObject|_muzzleFlash": { //GameObject in child
            "UnityEngine.Transform": {
              "localScale": { "x":1.5, "y":1.5, "z":3 },
              "localPosition": { "x":0, "y":0, "z":-1.0 }
            },
            "MuzzleFlash": {
              "m_SpeedFactor": 1
            },
            "GameObject|_muzzleFlashAnim": {
              "UnityEngine.Transform": {"localScale": { "x":1.5, "y":1.7, "z":1.5 }},
              "UnityEngine.Light": {
                // // "cookie": {
                // //   "mainTexture": "LED_BeamBlockB.png",
                // //   "shader": "Legacy Shaders/Particles/Alpha Blended Premultiply",
                // //   "color": {
                // //     "r": 0.1,
                // //     "g": 0.2,
                // //     "b": 1.0,
                // //     "a": 0.2
                // //   },
                // // },
                // "cookieSize": 4.0,
                // "spotAngle": 360.0,
                // // "innerSpotAngle": 360.0,
                "color": {
                  "r": 1.0,
                  "g": 0.05,
                  "b": 0.05,
                  "a": 1.0
                },
                // "colorTemperature": 6570.0,
                // "areaSize": 5.0,//2.0
                // "intensity": 10.0,//2.0
                // "bounceIntensity": 1.0,
                // "shadowCustomResolution": -1,
                // "shadowBias": 0.5,
                // "shadowNormalBias": 1.0,
                // "shadowNearPlane": 0.2,
                // "renderMode": "Auto",
                // //Auto, ForcePixel, ForceVertex
                // "type": "point",
                // //Spot, Directional, Point, Rectangle, Disc
                // "range": 4.0,
                // "flare": null
              },
            }
          }
        },
        "Duplicate|_barrel": { //GameObject in child
        // "Reference|BF_Laser_Turret_212/_gimbalBase/_gimbalElev/_barrel": { //adding evil lasor aim effect placeholder
        //   "GameObject|_beam": {
        //     "UnityEngine.Transform": {
        //       "localScale": { "x":1, "y":1, "z":1 },
        //       "localEulerAngles": { "x":0, "y":0, "z":0 },
        //       "localPosition": { "x":-1.0, "y":0.5, "z":-1.0 }
        //     },
        //     "BeamWeapon": {
        //       "m_Range": 450.0,
        //       "m_DamagePerSecond": 0.5,//this is just a blinky light laser
        //       "m_DamageType": 0,
        //       "m_FadeOutTime": 11.0,
        //       "m_BeamParticlesPrefab": null,
        //       "m_BeamStartDistance": 0.0,
        //       "m_BeamParticles": null,
        //       "m_HitParticles": null,
        //       "m_FlashEffect": null,
        //       "Instantiate|m_HitParticlesPrefab": {
        //         "UnityEngine.ParticleSystem": {
        //           "startColor": { "r": 1.0, "g": 0.0, "b": 0.0, "a": 1.0 },
        //           "startSize": 0,
        //           "main": {
        //             "m_ParticleSystem": {
        //               "maxParticles": 0
        //             }
        //           }
        //         },
        //         "GameObject|_glow": {
        //           "UnityEngine.ParticleSystem": {
        //             "startColor": { "r": 1.0, "g": 0.0, "b": 0.0, "a": 1.0 },
        //             "startSize": 0,
        //             "main": {
        //               "m_ParticleSystem": {
        //                 "maxParticles": 0
        //               }
        //             }
        //           },
        //           "UnityEngine.Light": {
        //             "color": {
        //               "r": 1.0,
        //               "g": 0.0,
        //               "b": 0.0,
        //               "a": 1.0
        //             },
        //             "areaSize": 1.0,//2.0
        //             "intensity": 175.0,//2.0
        //             "range": 1.0,
        //           }, 
        //         },
        //       },
        //     },
        //     "UnityEngine.LineRenderer": {
        //       "startWidth": 0.6,
        //       "endWidth": 0.6,
        //       // "positionCount": 2
        //       "startColor": {
        //         "r": 1.0,
        //         "g": 0.0,
        //         "b": 0.0,
        //         "a": 1.0,
        //         "maxColorComponent": 1.0
        //       },
        //       "endColor": {
        //         "r": 1.0,
        //         "g": 0.0,
        //         "b": 0.0,
        //         "a": 1.0,
        //         "maxColorComponent": 1.0
        //       }
        //     }
        //   },
          "UnityEngine.Transform": {
            "localScale": { "x":1, "y":1, "z":1 },
            "localEulerAngles": { "x":0, "y":0, "z":0 },
            "localPosition": { "x":1.0, "y":0, "z":3 }
          },
          "CannonBarrel": {
            "muzzleFlash": {
              "m_SpeedFactor": 5.0,
            },
            "animState": null,
            "recoilAnim": null
          },
          "GameObject|_muzzleFlash": { //GameObject in child
            "UnityEngine.Transform": {
              "localScale": { "x":1.5, "y":1.5, "z":3 },
              "localPosition": { "x":0, "y":0, "z":-1.0 }
            },
            "MuzzleFlash": {
              "m_SpeedFactor": 1
            },
            "GameObject|_muzzleFlashAnim": {
              "UnityEngine.Transform": {"localScale": { "x":1.5, "y":1.7, "z":1.5 }},
            }
          }
        }
      }
    }, //Back to GameObject
    "Reference|GSO_AIAnchor_121/_anchor": {
      "GameObject|GSOAnchorAI": {
        "UnityEngine.Transform": {
          "localScale": { "x":1, "y":1, "z":1 },
          "localPosition": { "x":2, "y":0, "z":3.0 }
        },
        "GameObject|m_GSO_Base_Rotating_Stand_111": {
            "UnityEngine.Transform": {
              "localPosition": { "x":0, "y":0.5, "z":0 },
              "localScale": { "x":1.5, "y":1.5, "z":1.5 }
            },
          "GameObject|m_GSO_Anchor_Hook": {

          },
        }
      },
    },
    "ModuleAnchor": { //Fixed Anchor stats
      "m_MaxAngularVelocity": 0.0, //Top anchor rotation velocity
      "m_MaxTorque": 0.0,
      "m_BrakeTorque": 1000.0, //How fast it slows down
      "m_ForceHorizontal": true,
      "m_IsSkyAnchor": false,
      "m_SkyAnchorBeamAttachPoint": null,
      "m_SkyAnchorFirePoint": null,
      "m_VisibleAnchorExceptions": 0,
      "m_AnimatorController": null,
      "m_APsBlockedByAnchor": //Doesn't work correctly...
      [0,1,2,3,4,5,6,7,8],
      "m_HasBeenRestored": false,
    },
    "ModuleVision": { //Temp Arty Tests
      "visionRange": 200,//was 250
      "visionConeAngle": 360, //
      "m_Range": 200 //Gives it more vision range
      //Nerfing all of this from 400 because this is insane
    },
    "ModuleTechController": { //Let's-a-Control!
      "m_PlayerInput": false,
      // "HandlesPlayerInput": false
    },
    "ModuleAIBot": {
      "m_AITypesEnabled": ["Escort", "Idle"]
    },
    "Damageable": {
      "m_DamageableType": 1, 
      "m_AoEDamageBlockPercent": 0.5,//Can resist better than some blocks.
    },

    "ModuleDamage": {
      "m_DamageDetachFragility": 0.1, //the multiplier for the knock-off value from weapon damage hits x Bullet Velocity. Set to zero to disable.
      //Normally 1.0 //TAC blocks refuse to go to the enemy
    },
    "ModuleDriveBot": {
      "targetIdealRange": 50.0, //How far do we want to stay from the target? Zero to kamikaze rush
      "turnToleranceOuter": 90.0, //How hard we steer when far from target
      "turnToleranceInner": 90.0, //How hard we steer when close to target
      "m_DefaultThrottle": 0.25, //How hard we press on the "W" key
      //We don't touch w at all here unless absolutely nesseary
      "poweredTurnInsideWheel": 0.5, //idk
      "waypointDistanceFullThrottle": 1.0, //If we are running
      "turnAngleFullThrottle": 1.0, //Max safe angle to turn while pressing "W"
      "waypointReachedTolerance": 2.0, //The location error the Tech can have before assuming that it is "close enough" to the target location
      "waypointPlayerAngularBias": 0.0, //How hard we should turn in relation to the player when trying to flank them -DIRECT RAM
      "lookAroundAngleMin": 90.0, //idk
      "lookAroundAngleMax": 90.0, //idk
      // "m_DefaultPatrolDistMin": 5.0, //Idle movement distance before engaging player
      // "m_DefaultPatrolDistMax": 15.0, //Idle movement distance before FREEEZE
      "patrolThrottle": 0.25, //Idle movements
      "lookAroundPauseMin": 1.0, //Minimum time before moving randomly while idle
      "lookAroundPauseMax": 2.0, //Maximum time before moving randomly while idle
      "lookAroundThrottle": 0.25, //How hard we press "W" when idle
      "lostTargetMemoryTime": 0.5, //How long we attempt to reach a location from where someone attacked us
      "holdTargetDuration": 0.5, //Max time before we update our pursued target to the closest target in agro range
      "stopCirclingDelay": 0.1, //how long until we stop circling the target
      "controlPriority": 100, //idk
      "recoverTimeout": 300000.0, //How long before we attempt to Build Beam(right self) again
      //we want to never do that
      "forceUnCapsizeTimeout": 5000.0, //How longe before we give up on the Build Beam self-righting attempt
      "capsizedMinSpeed": 0.0, //How slow we must be going in order to attempt Build Beam
      "m_ThrottleD": 0.5, //Max Throttle Forwards/Backwards
      "m_ThrottleT": 5.0, //Max Throttle Turning
      "m_PatrolDistMin": 50.0, //Idle movement distance before engaging player
      "m_PatrolDistMax": 125.0, //Idle movement distance before FREEEZE
      // "sumoBoostOn": true, //Will hold shift to KILL ENEMY
      "attackTargetRadius": 500,//When the AI will attack when possible targets are within this range
      // "OnSpawn": {
      // "hostileTarget": true, //ATTACK ON SPAWN
      // "friendlyTarget": false, //Is this an ally of Player
      // }, //
    },

    //In case this needs a serious nerf later on
    //From Despacito Cab
    // "ModuleDamage": { // Copy the death explosion of a fuel tank
    //   //"deathExplosion": "Reference|GSO_FuelTank_222.ModuleDamage.deathExplosion", // This just replaces the explosion with the value on this path
    //   "Instantiate|deathExplosion": { // Why replace the explosion, when we can ADD to the explosion
    //     "Reference|HE_Exploder_211.ModuleDamage.deathExplosion": {
    //       "UnityEngine.Transform": {
    //         "localPosition": { "x": 0, "y": -3.0, "z": 0 } // Recenter it
    //       }
    //     },
    //     "Reference|VEN_FuelTank_212.ModuleDamage.deathExplosion": {
    //       "UnityEngine.Transform": {
    //         "localPosition": { "x": 0, "y": 0, "z": 0 } // Recenter it
    //       }
    //     }
    //   }
    // },

    "Damageable": {
      "m_DamageableType": 1, 
      "m_AoEDamageBlockPercent": 1.0,//Stop shotguns
    },
    // TAC Armor Turret - Defender Armor
    "RandomAdditions.ModuleReinforced":{ // Add a special resistance to your block
      "DoDamagableSwitch": false, // Should we switch the DamageableType of this block?

      "ModifyAoEDamage": true,    // Enable AoE damage changing? (only handles Explosion, not shotguns)
      "ExplosionMultiplier": 0.4,   // Multiplier for all AoE attacks dealt against this block

      "UseMultipliers": false,     // Should the multipliers be used?
    },
    "ModuleWeapon": { //Component
      //"m_FireSFXType": "BFLaser", //Firing noise
      "m_LimitedShootAngle": 90,
      "m_RotateSpeed" : 40.0 //SPEED of turret aiming, not homing
    },
    "ModuleWeaponGun": { // Another component
      //"UnityEngine.Transform": {"localScale": { "x":6, "y":6, "z":6 }}, //Bigger for placeholder - broken as it crashes the game
      //"m_NumCannonBarrels" : 3,//[doesn't change anything]How many shots can be fired before animation plays
      "m_FireControlMode": "AllAtOnce", //Sequenced for salvo
      "m_ShotCooldown" : 0.0, //This is the cooldown between every burst shot.
      //"m_ShotTimer" : -2.0,
      "m_CooldownVariancePct" : 0.24, 
      "m_BurstShotCount" : 2, //Number of shots before the gun "overheats"
      "m_BurstCooldown" : 3.5, //3 seconds between bursts.
      //"m_SeekingRounds" : true, //Rounds that home in. Missiles have these without gravity(0.0 "m_BulletSpin") - Fails to do this currently
      "m_HasCooldownAnim" : false, //Doesn't change anything
      "m_Animator" : null,
      "m_FiringData": null //Test to clear internal cache, probably does nothing good or bad
      //"m_DeploySFXType": 77 //This is supposed to make it sound like a big bertha(When it deploys on pressing Space[BF Block] or open when anchored)
    
    },//comma
    "FireData": { //Component, but with a catch
      "m_MuzzleVelocity": 250, //Bullet speed - Slightly faster than the Zeus' approx. 200 MuzzleVelocity. Tested faster values than Zeus and clipping issues began
      //"m_BulletSprayVariance": 0.1, //Bullet inverse-accuracy 
      //"m_BulletSpin": 5, //Adds Gravity and likely reduces tracking ability - 
      "m_KickbackStrength": 750,//was 4750.0, // Would you like to become a plane
      "Instantiate|m_BulletPrefab": { //Makes bullet unique, enters like "GameObject|m_BulletPrefab"    
        "UnityEngine.Transform": {
          "localPosition": { "x":0, "y":0, "z":3 },
          "localScale": { "x":1.5, "y":1.5, "z":9 },
        },  //                                                                 
        "WeaponRound": { //Component because we are in GameObject right now
          "m_DamageType" : "Impact", //What damage modifier the weapon does - To raid shielded Techs //was "Bullet"
          "m_Damage": 4275 //Damage for successful projectile contact hit
        },
        "UnityEngine.Rigidbody": {//This is how to enable/disable gravioli
          // "useGravity": true
          "mass": 250.0, //we want a THUD not a pomf
          // "collisionDetectionMode": "ContinuousDynamic", //ContinuousDynamic(fast moving objects), Continuous(for colliding with ContinuousDynamic colliders), ContinuousSpeculative(Kinematics), Discrete(Non-Fast Objects),
          // "detectCollisions": true,
          // "maxDepenentrationVelocity": 10000.0,
          // "drag": 0.1,
          // "angularDrag": 1.0,
          // "centerOfMass": { "x":0, "y":0, "z":0 },
          // "isKinematic": false,//If isKinematic is enabled, Forces, collisions or joints will not affect the rigidbody anymore.
          // "freezeRotation": true,
        },  
        "UnityEngine.TrailRenderer": { //Paint them trails
          "material": {
            "shader": "Legacy Shaders/Particles/Alpha Blended Premultiply",
            "shaderKeywords": [
              "_ALBEDO",
              "_EMISSION",
              "_NORMALMAP"
            ],
            "mainTextureOffset": {"x":1, "y":1},
            "mainTextureScale": {"x":1, "y":1},
            "globalIlluminationFlags": 1,
            "mainTexture": "LED_BeamBlockPR.png",
          },
          "receiveShadows": false,
          "shadowCastingMode": "Off",
          "rendererPriority": 1,
          "realtimeLightmapIndex": -1,
          "generateLightingData": false,
          "time": 0.2,
          "startWidth": 0.3,
          "endWidth": 0.05,
          "widthMultiplier": 1.0, //Uniform Width Multiplier
          "autodestruct": false, // Having this true crashes the game
          "emitting": true, //0.2
          "numCornerVertices": 4,
          "numCapVertices": 8,
          "minVertexDistance": 0.25,
          "startColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 1.0
          },
          "endColor": {
            "r": 1.0,
            "g": 1.0,
            "b": 1.0,
            "a": 0.6
          },
          // "startColor": {
          //   "r": 1.0,
          //   "g": 0.5,
          //   "b": 0.5,
          //   "a": 0.8
          // },
          // "endColor": {
          //   "r": 1.0,
          //   "g": 0.5,
          //   "b": 0.5,
          //   "a": 0.8
          // },
          // "positionCount": 1,
          "shadowBias": 0.0,
          "generateLightingData": false,
          "textureMode": 0,
          "alignment": 0,
        },
        "GameObject|FX_SemiCircle": {  
          "UnityEngine.ParticleSystem": {
            "main": {
              "m_ParticleSystem": {
                "startColor": {         //Determine the color
                  "r": 1.0,
                  "g": 0.3,
                  "b": 0.3,
                  "a": 1.0
                },
                "startSize": 3.0,
                // "startSpeed": 15, //How far you want the particles to spread
                // "emissionRate": 250.0,
                // "maxParticles": 500,
                // "emission": {
                //   "rateMultiplier": 50.0,
                //   "rateOverTimeMultiplier": 0.2,
                //   "burst": {
                //     "count": 50,
                //     //"cycleCount": 1,
                //     "maxCount": 50,
                //     "minCount": 30,
                //     // "probability": 150,
                //     // "repeatInterval": 150,
                //     //"time": 0
                //   }
                // },
              }
            }
          }
        },
        "Duplicate|FX_SemiCircle": {  
          "UnityEngine.ParticleSystem": {
            "main": {
              "m_ParticleSystem": {
                "startColor": {         //Determine the color
                  "r": 1.0,
                  "g": 1.0,
                  "b": 0.7,
                  "a": 1.0
                },
                "startSize": 1.5,
                // "startSpeed": 15, //How far you want the particles to spread
                // "emissionRate": 250.0,
                // "maxParticles": 500
                // "emission": {
                //   "rateMultiplier": 50.0,
                //   "rateOverTimeMultiplier": 0.2,
                //   "burst": {
                //     "count": 50,
                //     //"cycleCount": 1,
                //     "maxCount": 50,
                //     "minCount": 30,
                //     // "probability": 150,
                //     // "repeatInterval": 150,
                //     //"time": 0
                //   }
                // },
              }
            }
          }
        },
        "GameObject|FX_Distortion": {  
          "UnityEngine.ParticleSystem": {
            "main": {
              "m_ParticleSystem": {
                "startSize": 0.2,
                // "startSpeed": 15, //How far you want the particles to spread
                // "emissionRate": 25.0,
                // "maxParticles": 750,
                // "emission": {
                //   "rateMultiplier": 50.0,
                //   "rateOverTimeMultiplier": 0.2,
                //   "burst": {
                //     "count": 50,
                //     //"cycleCount": 1,
                //     "maxCount": 50,
                //     "minCount": 30,
                //     // "probability": 150,
                //     // "repeatInterval": 150,
                //     //"time": 0
                //   }
                // },
              }
            }
          }
        },
        "GameObject|Line": {                    
          // "UnityEngine.Transform": {
          //   //"localPosition": { "x":0, "y":0, "z":0 },
          //   "localScale": { "x":2, "y":2, "z":1, },
          //   //"localEulerAngles": { "x":0, "y":0, "z":0  }
          // },            
          "UnityEngine.LineRenderer": { //For some reason TerraTech's lasers are shot out of the gun in reverse
            "startWidth": 0.2,
            "endWidth": 0.3,
            "numCapVertices": 10,
            "startColor": {
              "r": 0.75,
              "g": 0.2,
              "b": 0.2,
              "a": 0.0,
              // "a": 0.60
            },
            "endColor": {
              "r": 1.0,
              "g": 0.2,
              "b": 0.2,
              "a": 0.0,
              // "a": 0.8
            },
          }
        },
        "GameObject|_glow": {//Does work
          "UnityEngine.Light": {
            // "cookie": {
            //   "mainTexture": "LED_BeamBlockB.png",
            //   "shader": "Legacy Shaders/Particles/Alpha Blended Premultiply",
            //   "color": {
            //     "r": 0.1,
            //     "g": 0.2,
            //     "b": 1.0,
            //     "a": 0.2
            //   },
            // },
            "cookieSize": 4.0,
            "spotAngle": 360.0,
            // "innerSpotAngle": 360.0,
            "color": {
              "r": 1.0,
              "g": 0.05,
              "b": 0.05,
              "a": 1.0
            },
            "colorTemperature": 6570.0,
            "intensity": 10.0,//2.0
            "bounceIntensity": 1.0,
            "shadowCustomResolution": -1,
            "shadowBias": 0.5,
            "shadowNormalBias": 1.0,
            "shadowNearPlane": 0.2,
            "renderMode": "Auto",
            //Auto, ForcePixel, ForceVertex
            "type": "point",
            //Spot, Directional, Point, Rectangle, Disc
            "range": 4.0,
            "flare": null
          },
        },
        "Projectile": { //Another one (doot doooooot dododoot)
            //"m_LifeTime": 10, //Time before BOOM
            "m_DeathDelay": 0.25, //Time before BOOM
            //"m_ExplodeAfterLifetime": true,
            "m_ExplodeOnTerrain": false,
            "m_SingleImpact" : false, // The Bees are Relentless and will continuously deal damge while in the Enemy
            // "m_IgnoreCollisionWithBarrel" : true,
            //"m_CanHaveGravity" : false,
            //"m_GravityScale" : 0, //You can do a fraction of gravity to allow for dramatic effect
            //"m_StickOnTerrain" : true,
            // "m_ImpactSFXType" : "Cannon",
            "m_ImpactSFXType" : "Hammer",
            //"m_FlightSFXType" : "DeliveryBomb", // Allows for homing effect
            //"m_Trail" : {"startWidth": 3},
          //"SeekingProjectile": {
            //"m_TurnSpeed" : 1 // How strong the turn is towards the enemy
          //},

          "Instantiate|m_Explosion": { //Makes explosion unique, enters like "GameObject|m_Explosion"
            "Explosion": { //wOW a component
            //   "HitDesc": { //Lost here, the way to modify the explosions
            //   "visible" : "Impact",
            //   "point" : "Impact",
            //   "impulse" : "Impact",
            //   "sqDist" : 18,
            // },
            //"HitDesc": {},
            "m_DamageType" : "Fire", //What damage modifier the explosion does
            //"m_ExplosionSize": 0, //This is an enum with values 0 1 and 2 for SFX (Not actual size! that would be RAIDUS)
            //"m_ExplosionType": "Fuel", //What the explosion looks like
            "m_EffectRadius": 3.5, //WHAM
            "m_EffectRadiusMaxStrength": 2.5, 
            "m_MaxDamageStrength": 175, //This affects splash damage
            "m_MaxImpulseStrength": 2750, //How hard to push things, explosion force -YEET
            },
            "GameObject|Point light": {//Does work
              "UnityEngine.Transform": {
                "localPosition": { "x":0, "y":0, "z":0 },
                "localScale": { "x":1, "y":1, "z":1 },
              },  //                  
              "UnityEngine.Light": {
                // "cookie": {
                //   "mainTexture": "LED_BeamBlockB.png",
                //   "shader": "Legacy Shaders/Particles/Alpha Blended Premultiply",
                //   "color": {
                //     "r": 0.1,
                //     "g": 0.2,
                //     "b": 1.0,
                //     "a": 0.2
                //   },
                // },
                "cookieSize": 4.0,
                "spotAngle": 360.0,
                // "innerSpotAngle": 360.0,
                "color": {
                  "r": 0.2,
                  "g": 0.5,
                  "b": 1.0,
                  "a": 1.0
                },
                "colorTemperature": 6570.0,
                "intensity": 15.0,//2.0
                "bounceIntensity": 1.0,
                "shadowCustomResolution": -1,
                "shadowBias": 0.5,
                "shadowNormalBias": 1.0,
                "shadowNearPlane": 0.2,
                "renderMode": "Auto",
                //Auto, ForcePixel, ForceVertex
                "type": "point",
                //Spot, Directional, Point, Rectangle, Disc
                "range": 6.0,
                "flare": null
              }, 
              "FadeInOutLight": {
                "StartDelay": 0.0,
                "FadeInSpeed": 0.04,
                "FadeOutDelay": 0.15,
                "FadeOutSpeed": 0.08,
                "FadeOutAfterCollision": true,
                "UseHideStatus": true,
                // "goLight": "TheLightSpecifiedAbove",
                // "canStart": true,
              }
            },
            "GameObject|ExplosionBright": { 
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startSize": 12,
                    // "startSpeed": 15, //How far you want the particles to spread
                    // "emissionRate": 25.0,
                    "maxParticles": 750,
                    "emission": {
                      "rateMultiplier": 50.0,
                      "rateOverTimeMultiplier": 0.2,
                    }
                  }
                }
              },
              "GameObject|Sparks": { 
                "UnityEngine.ParticleSystem": {
                  "main": {
                    "m_ParticleSystem": {
                      "startSize": 7,
                      // "startSpeed": 15, //How far you want the particles to spread
                      // "emissionRate": 25.0,
                      // "maxParticles": 750,
                      "emission": {
                        "rateMultiplier": 50.0,
                        "rateOverTimeMultiplier": 0.2,
                      },
                    }
                  }
                }
              }
            }
          }
        }
      }
    } 
  }
}
