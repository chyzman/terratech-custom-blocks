// -- Make a copy of this file, change the ID and Hex, and modify the values shown to make your own block --
// "PropertyName" : Value,
// Only change the Value
{
  "Name": "TAC Ethereal Lancer Pulse Shotgun",
  "Description": "Fires a huge powerful abnormal burst of energy that  P H A S E S  through Techs, ignoring all shields and armor while hitting everything underneath. \n\nThe ability of  E T H E R E A L  weapons does not come standard.  No corp but <b>Youkai</b> has developed such powerful weapons to date.  A controlled Ethereal saber beam resulting between a covert research operation with <b>Youkai</b> resulted in this. \nWhile it's a technological farcry from the <b>Dark Star</b>, it still has the potential to claw at cabs safely tucked within the heart of the enemy.  \n\nIt couldn't give less of a F*bron what's in range and how strong it is.  It just DOES it.  \nThe definition of determination. \n\n\n(Some residual Phase Foam was used in making this) \n\nPTHeAcShEsS", //You can make multiple lines with \n
  "ID": 584288, //A random ID that MUST be unique
  //"IDNetHex": "4ff33d9399399999", //Get a random hex from https://www.random.org/bytes/ (8 bytes work)

  "Faction": 5, //GSO = 1|0, GeoCorp = 2, EXP = 3, Venture = 4, HawkEye = 5, Special = 6, BetterFuture = 7
  "Category": 4, //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
  "Grade": 3, //The desired grade minus one
  "Price": 14106,
  "HP": 2500,//-200 health
  "Mass": 2.0,//Heavy

  "IconName": "ShiaPiercer.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named

  "MeshName": null, //"GSO_BigBertha_845_MOD.obj"  FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

  "Recipe":  "44, 44, 44, 45, 45, 45, 51, 53, 58, 59", // Separate chunk names or IDs with a comma. Not case sensitive.


  /*  EITHER  */
  "MeshTextureName": null, //FILE Name of image for texture, such as "texture.png". File can be anywhere and should be uniquely named
  /*  OR  */
  "MeshMaterialName": null, //Name of one of the GAME'S materials to use, such as "Corp_Main", "GSO_Main", "GeoCorp_Main", "Venture_Main", and "HE_Main". This material flashes and everything!


  /*  OPTIONAL  */ "ColliderMeshName": null, //FILE Name of the mesh, such as "collider.obj". Leaving as null will make a box collider relative to the mesh

  // X is right and left, Y is up and down, and Z is forward and backward

  /*  EITHER  */
  "Cells": [ //The grid space to be occupied
  ],
  "APs": [ //The location of APs on the block. For use with "Cells"
    //bottom
     { "x": 0, "y": -0.5, "z": 0 },
     { "x": 0, "y": -0.5, "z": 1 },
     { "x": 0, "y": -0.5, "z": 2 },
    //top
     { "x": 0, "y": 0.5, "z": 0 },
     { "x": 0, "y": 0.5, "z": 1 },
    //left
     { "x": -0.5, "y": 0, "z": 0 },
     { "x": -0.5, "y": 0, "z": 1 },
     { "x": -0.5, "y": 0, "z": 2 },
    //right
     { "x": 0.5, "y": 0, "z": 0 },
     { "x": 0.5, "y": 0, "z": 1 },
     { "x": 0.5, "y": 0, "z": 2 },
  ],
  /*  OR  */
  "BlockExtents": //Makes a grid box with these dimensions. Is ignored if "Cells": is used
  {
    "x": 1,
    "y": 1,
    "z": 3 //
  }, // A vector of (1, 1, 1) returns a one-celled block
  "APsOnlyAtBottom": false, //Make APs only on the bottom, or have all faces covered. Only works with "BlockExtents":



  // Delete /* and */ if using
   
  
  //OPTIONAL

	"GamePrefabReference": "GSO_Cannon_Turret(111)",//Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)"
  "KeepReferenceRenderers": true,
  "ReferenceScale": { "x": 1, "y": 1, "z": 1 }, //Shift the subobjects of the block prefab by x, y and z
	"ReferenceOffset": { "x": 0, "y": 0, "z": 0 }, //Shift the subobjects of the block prefab by x, y and z

 
  
  // Sub Objects can modify existing sub gameobjects on a prefab reference
  "SubObjects": [ 
    { //Replacing Models
     "SubOverrideName": "GSO_Cannon_111_Base",
      "DestroySubReferenceRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "LancerBase.obj",
      // "MeshColliderName": "TACBeamGuided.obj",
      "MakeBoxCollider": true,
      "MeshMaterialName": "HE_Main"
    },
    { //Replacing Models
     "SubOverrideName": "GSO_Cannon_111_Mount",
      "DestroySubReferenceRenderer": true,
      // "DestroyExistingRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "TACProjectorBasePlus.obj",
      // "MeshColliderName": "TACBeamGuided.obj",
      "MakeBoxCollider": true,
      "MeshMaterialName": "HE_Main"
    },
    { //Replacing Models
     "SubOverrideName": "GSO_Cannon_111_Barrel",
      "DestroySubReferenceRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "LancerBarrel.obj",
      // "MeshColliderName": "TACBeamGuided.obj",
      "MakeBoxCollider": true,
      "MeshMaterialName": "HE_Main"
    },
    { //Only way to safely override the graphics it seems
      "SubOverrideName": "ChargeParticlesOffset/p_ChargeParticles",
      // "MeshTextureName": "EPMCEnergyBall.png",
      "MeshMaterialName": "Sparks",
      "MakeBoxCollider": false,
      "SubPosition": {
        "x": 0,
        "y": 0.0,
        "z": 0
      }
    },
  ],
	
  //
  // Note this is not exactly a shotgun, but rather an amped-up insta-explosion gun for phasing damage.
  //
  "JSONBLOCK": { //Root GameObject
    "GameObject|GSO_Cannon_111_Base": {
      "UnityEngine.Transform": {
        "localScale": { "x":1, "y":1, "z":1 },
        // "localEulerAngles": { "x":0, "y":0, "z":0},
        "localPosition": { "x":0, "y":0, "z":1 }
      },
    },
    "GameObject|ChargeParticlesOffset": {
      "UnityEngine.Transform": {
        "localScale": { "x":1.0, "y":1.0, "z":1.0 },
        // "localEulerAngles": { "x":0, "y":0, "z":0},
        "localPosition": { "x":0, "y":0, "z":2.5 }
      },
      // "Reference|GC_Battery_424/ModuleDamage.deathExplosion/FX_Lightning": {
      //   "UnityEngine.Transform": {
      //     "localScale": { "x":1.0, "y":1.0, "z":1.0 },
      //     "localEulerAngles": { "x":270, "y":0, "z":0},
      //     "localPosition": { "x":0, "y":0, "z":0 }
      //   },
      //   "UnityEngine.ParticleSystem": {
      //     "main": {
      //       "m_ParticleSystem": {
      //         "startColor": {
      //           "r": 0.6,
      //           "g": 0.9,
      //           "b": 1.0,
      //           "a": 1.0
      //         },
      //         "playOnAwake": false,//Prevents it from activating without Sozin's mod
      //       }
      //     }
      //   },
      // },
      "GameObject|p_ChargeParticles": {
        "UnityEngine.Transform": {
          "localScale": { "x":1.0, "y":1.0, "z":1.0 },
          // "localEulerAngles": { "x":0, "y":0, "z":0},
          "localPosition": { "x":0, "y":0, "z":0 }
        },
        "UnityEngine.MeshRenderer": {
          "material": {
            "shader": "Legacy Shaders/Particles/Alpha Blended Premultiply",
            "shaderKeywords": [
              "_ALBEDO",
              "_EMISSION",
              "_NORMALMAP"
            ],
            "mainTexture": "EPMCEnergyBall.png",
            "globalIlluminationFlags": 1,
          }
        },
        "UnityEngine.ParticleSystemRenderer": {
          // "alignment": 0,
          "renderMode": 0,
          // "sortMode": 0,
          // "minParticleSize": 0.05,
          "maxParticleSize": 0.15,
          "motionVectorGenerationMode": 1,
        },
        "UnityEngine.ParticleSystem": {
          "startSpeed": {
            "curveMin": -2,
            "curveMax": -2,
          }, //How far you want the particles to spread
          "main": {
            "m_ParticleSystem": {
              "startColor": {
                "r": 0.6,
                "g": 0.9,
                "b": 1.0,
                "a": 0.1
              },
              "playOnAwake": false,//Prevents it from activating without Sozin's mod
              "startDelay": 0.0,//Delay
              "startLifetime": 1.00,
              "startRotation": 0.0,
              "playbackSpeed": 1.0,
              //
              "ringBufferMode": null,
              "scalingMode": null,
              "useUnscaledTime": false,
              "prewarm": false,
              // "startRotation": 0.0,
              // "playbackSpeed": 0.5,
              //
              "gravityModifier": 0.0,//No gravity
              "loop": true, //Charging the beam
              "startSize": 0.65,
              "startSpeed": 1.0, //How far you want the particles to spread
              "emissionRate": 125.0,
              "emitterVelocityMode": 1,
              "simulationSpace": 0,// 0 = Host Gameobject, 1 = World
              "maxParticles": 500,
              "useAutoRandomSeed": false,
              "textureSheetAnimation": null,
              "subEmitters": {
                "enabled": false,
              },
              "proceduralSimulationSupported": false,
              "sizeBySpeed": {
                "enabled": true,
                "size": {
                  "m_Mode": 1,
                  "m_CurveMultiplier": 1.0,
                  "m_CurveMin": null,
                  "m_CurveMax": null,
                  "m_ConstantMin": 1.0,
                  "m_ConstantMax": 1.0,
                  "mode": 1,
                  "curveMultiplier": 1.0,
                  "curveMin": null,
                  "constantMax": 0.0,
                  "constantMin": 0.0,
                  "constant": 0.0
                },
                "sizeMultiplier": 2.0,
                "xMultiplier": 2.0,
                "yMultiplier": 2.0,
                "zMultiplier": 2.0,
                "separateAxes": false
              },
              "customData": {
                "enabled": false
              },
              "velocityOverLifetime": {
                "enabled": true,
                "xMultiplier": 0.0,
                "yMultiplier": 0.0,
                "zMultiplier": 0.0,
                "orbitalXMultiplier": 0.0,
                "orbitalYMultiplier": 0.0,
                "orbitalZMultiplier": 0.0,
                "orbitalOffsetXMultiplier": 0.0,
                "orbitalOffsetYMultiplier": 0.0,
                "orbitalOffsetZMultiplier": 0.0,
                "radialMultiplier": 1.0,
                "speedModifierMultiplier": -2.5,
                "space": 0
              },
              "forceOverLifetime": {
                "enabled": false,
              },
              "externalForces": {
                "enabled": false,
              },
              "noise": {
                "enabled": false,
              },
              "emission": {
                "type": 0,
                "rateMultiplier": 100.0,
                "enabled": true,
                "rateOverTimeMultiplier": 100.0,
                "rateOverDistanceMultiplier": 0.0,
                "burstCount": 0
              },
              "shape": {
                "enabled": true,
                "shapeType": 0,
                "meshShapeType": 0,
                "meshScale": 1.0,
                "radius": 1.75,
                "radiusMode": 0,
                "radiusSpread": 0.0,
                "angle": 0.0,
                "length": 0,
                "arcMode": 0,
                "randomDirectionAmount": 0.0,
                "sphericalDirectionAmount": 0.0,
                "randomPositionAmount": 0.0,
                "randomDirection": false,
                "randomDirectionAmount": 0.0,
              }
            }
          }
        }
      }
    },
    "GameObject|_gimbalBase": {
      "UnityEngine.Transform": {
        "localScale": { "x":1, "y":1, "z":1 },
        // "localEulerAngles": { "x":0, "y":0, "z":0},
        "localPosition": { "x":0, "y":0, "z":1 }
      },
      "GimbalAimer": { //Useful component - Horizontal Aiming
        "rotationLimits": [-6, 6], //[-Left,+Right](Degrees)
      },
      "GameObject|GSO_Cannon_111_Mount": {
          "UnityEngine.Transform": {
            "localScale": { "x":1.5, "y":1.5, "z":1.5 },
            // "localEulerAngles": { "x":0, "y":0, "z":0},
            // "localPosition": { "x":0, "y":0, "z":0 }
          },
      },
      "GameObject|_gimbalElev": {
        "GimbalAimer": { //Useful component - Vertical Aiming
          "rotationLimits": [-6, 6], //[-Up,+Down](Degrees) - VERY focused cone
        },
        // "GameObject|m_HE_Shotgun_Rotating_212_Body": {
        // },
        "GameObject|_barrel": {
          "UnityEngine.Transform": {
            "localScale": { "x":5, "y":5, "z":5 },
            // "localEulerAngles": { "x":0, "y":0, "z":0},
            "localPosition": { "x":0, "y":0, "z":0 }
          },
          "CannonBarrel": {
          },
            // "ParticleSystem": {
            //   "startDelay": 0.0,
            //   "loop": false,
            //   "playOnAwake": false,
            //   "duration": 0.0,
            //   "playbackSpeed": 0.0,
            //   "enableEmission": true,
            //   "emissionRate": 0.0,
            //   "startSpeed": 50.0,
            //   "startSize": 0.3,
            //   "startRotation": 0.0,
            //   "startLifetime": 0.0,//0.17
            //   "gravityModifier": 0.0,
            //   "maxParticles": 0,
            //   // "simulationSpace": 1,
            //   // "scalingMode": 2,
            //   // "automaticCullingEnabled": false,
            //   // "isPlaying": false,
            //   // "isEmitting": false,
            //   // "isStopped": true,
            //   // "isPaused": false,
            //   // "particleCount": 0,
            //   // "time": 0.0,
            // },
          // "GameObject|_smoke2": {
          // },
          // "GameObject|_smoke1": {
          // },
          "GameObject|_recoiler": {
            "UnityEngine.Transform": {
              "localScale": { "x":0.2, "y":0.2, "z":0.2 },
              // "localEulerAngles": { "x":0, "y":0, "z":0},
              // "localPosition": { "x":0, "y":0, "z":0 }
            },
            "GameObject|GSO_Cannon_111_Barrel": {
              "UnityEngine.Transform": {
                "localScale": { "x":1, "y":1, "z":1 },
                // "localEulerAngles": { "x":0, "y":0, "z":0},
                "localPosition": { "x":0, "y":0, "z":0 }
              },
            },
          },
          "GameObject|_muzzleFlash": {
            "UnityEngine.Transform": {
              "localScale": { "x":0.1, "y":0.1, "z":0.1 },
              // "localEulerAngles": { "x":0, "y":0, "z":0},
              "localPosition": { "x":0, "y":0, "z":-0.1 }
            },
            "MuzzleFlash": {
              "m_SpeedFactor": 0.90,
            },
            "GameObject|_light": {
              "UnityEngine.Light": {
                  "color": {
                    "r": 0.6,
                    "g": 0.6,
                    "b": 1.0,
                    // "a": 0.2
                  },
                // "areaSize": 5.0,//2.0
                // "intensity": 5.0,//2.0
                // "range": 7.5,
              }, 
            },
            "GameObject|_muzzleFlashAnim": null,
            "Reference|HE_Shotgun_Rotating_212/_muzzleFlashAnim": {
              "GameObject|m_MuzzleFlash_01": {
                "Spinner": {//Pulsating Fire Effect
                  "m_Speed": 1.75,
                  "m_RotationAxis": {
                    "axis": 1
                  },
                  // "m_SteerAxis": {
                  //   "axis": 1
                  // },
                  "m_AutoSpin": true,
                  "m_SpinUpTime": 0.1,
                  "m_CurrentAngle": 0,
                  "m_CurrentAutoSpeed": 0.0,
                  "m_CurrentSpeedFraction": 0.0,
                  "m_SpinnerSound": null,
                  "m_SpinnerSoundOriginalPitch": 0.0,
                  "Speed": -2.0,
                  "SpeedFraction": 0.0,
                  "AtFullSpeed": true
                },
                "UnityEngine.Transform": {
                  "localScale": { "x":5, "y":70, "z":5 },
                  // "localEulerAngles": { "x":0, "y":0, "z":0},
                  "localPosition": { "x":0, "y":0, "z":7 }
                },
                "UnityEngine.MeshRenderer": {
                  "material": {
                    // "shader": "Legacy Shaders/Particles/Alpha Blended Premultiply",
                    // "shaderKeywords": [
                    //   "_ALBEDO",
                    //   "_EMISSION",
                    //   "_NORMALMAP"
                    // ],
                    "mainTexture": "LancerMuzzleFlash.png",
                    "color": {
                      "r": 0.3,
                      "g": 0.3,
                      "b": 1.0,
                      "a": 1.0
                    }
                  }
                }
              }
            }
          },
          "GameObject|_casingSpawn": {
          },
          "GameObject|_bulletSpawn": {
            "UnityEngine.Transform": {
              "localScale": { "x":1, "y":1, "z":1 },
              // "localEulerAngles": { "x":0, "y":0, "z":0},
              "localPosition": { "x":0, "y":0, "z":0.3 }
            },
          }
        }
      }
    },

    "Damageable": {
      "m_DamageableType": 1, 
      "m_AoEDamageBlockPercent": 0.75,//Airgap
    },
    "ParticleManager.ModuleParticleManager": {//Additonal bonus effects with Sozin's mod installed
      "maxWeaponChargeTime" : -3.0, //
      "needToCorrectDelay" : 3.0, //
      // "Debug" : true, //

      "Input": [
        {
          "m_system": "ChargeParticlesOffset/p_ChargeParticles/ParticleSystem.",
          // "value": 0.8,//Delay before firing
          "value": 10,//Delay before firing
          "CannonBarrel": "/_gimbalBase/_gimbalElev/_barrel/CannonBarrel.",
          "type": "BarrelCharge",
        },
        // {
        //   "m_system": "ChargeParticlesOffset/FX_Lightning/ParticleSystem.",
        //   // "value": 0.8,//Delay before firing
        //   // "value": 0.4,//Delay before firing
        //   "CannonBarrel": "/_gimbalBase/_gimbalElev/_barrel/CannonBarrel.",
        //   "type": "BarrelFired",
        //   // "type": "BarrelCharge",
        // },
      ]
    },  
    "ModuleWeapon": { //Component
      "m_TargetingType" : "RandomBlockOnVehicle", 
      //   public enum TargetType
      // {
      //   CenterOfMass,
      //   BestAimCabOrCentre,
      //   RandomBlockOnVehicle
      // }
      "m_ShotCooldown" : 0.0, //This is the cooldown between every burst shot.
      "m_FireSFXType": "VENRPGLauncher", //Firing noise //36 -Delicannon 48 -canon -doesn't work
      // "m_AutoFire": false,
      //"m_LimitedShootAngle": 180,
      "m_RotateSpeed" : 10.0 //SPEED of turret aiming, not homing
    },
    "ModuleWeaponGun": { // Another component
      //"UnityEngine.Transform": {"localScale": { "x":6, "y":6, "z":6 }}, //Bigger for placeholder - broken as it crashes the game
      //"m_NumCannonBarrels" : 3,//[doesn't change anything]How many shots can be fired before animation plays
      //"m_FireControlMode": "AllAtOnce", //Sequenced for salvo
      // "m_AutoFire": false,
      "m_ShotCooldown" : 3.0, //This is the cooldown between every burst shot.
      "m_ResetBurstOnInterrupt" : false,
      "m_CooldownVariancePct" : 0.05, 
      // "m_BurstShotCount" : 0, //Number of shots before the gun "overheats"
      // "m_BurstCooldown" : 3.0, //3 seconds
      //"m_SeekingRounds" : true, //Rounds that home in. Missiles have these without gravity(0.0 "m_BulletSpin") - Fails to do this currently
      "m_HasCooldownAnim" : false, //Doesn't change anything
      "m_Animator" : null,
      "m_FiringData": null //Test to clear internal cache, probably does nothing good or bad
      //"m_DeploySFXType": 77 //This is supposed to make it sound like a big bertha(When it deploys on pressing Space[BF Block] or open when anchored)
    
    },//comma
    "FireData": { //Component, but with a catch
      "m_MuzzleVelocity": 100, //YEET the missile before booster
      "m_BulletSprayVariance": 0.0, //Bullet inverse-accuracy 
      "m_BulletSpin": 0, //Adds Gravity and likely reduces tracking ability - 
      "m_KickbackStrength": 500.0, // Would you like to become a plane
      "m_BulletCasingPrefab": null,   

      "Instantiate|m_BulletPrefab": { //Makes bullet unique, enters like "GameObject|m_BulletPrefab"   
        "Projectile": { //
          "m_LifeTime": 0.001, //Time before BOOM
          "m_SingleImpact" : false, 
          "m_ExplodeAfterLifetime": false,
          "m_DeathDelay": 0.01,
          "m_ImpactSFXType" : "Laser", //Makes for more intense hit noises
          "Instantiate|m_Explosion": { //Makes explosion unique, enters like "GameObject|m_Explosion" 
            "UnityEngine.Transform": {
              "localPosition": { "x":0, "y":0, "z":15 },
              "localScale": { "x":1, "y":1, "z":30 }, //{ "x":1.5, "y":1.5, "z":4 }
              "localEulerAngles": { "x":0, "y":0, "z":0},
            },
            "Explosion": { //wOW a component
              "m_DamageType" : 2, //What damage modifier the explosion does
              "m_ExplosionSize": 1, //This is an enum with values 0 1 and 2 for SFX
              "m_EffectRadius": 1, //Zing
              "m_EffectRadiusMaxStrength": 0.8, //Max Radius before the effect deals less damage outwards
              "m_MaxDamageStrength": 1, //
              "m_MaxImpulseStrength": -10, //How hard to push things, explosion force
            },
            "PlayAudioLoop": { //Component
              "m_SFXType" : " IntroExplosionHuge",
            },
            "Reference|VEN_Cab_111.ModuleDamage.deathExplosion/FX_Explosion_Fire": {
              "UnityEngine.Transform": {
                // "localScale": { "x":0.2, "y":0.2, "z":0.2 },
                // "localEulerAngles": { "x":0, "y":0, "z":0},
                "localPosition": { "x":0, "y":0, "z":0 }
              },
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startColor": {
                      "r": 0.45,
                      "g": 0.55,
                      "b": 1.0,
                      "a": 0.915
                    },
                    "startSize": 3.5,
                    // "loop": false, //Happens during flight
                    // "endSize": 15.0,
                    "playbackSpeed": 0.8,
                    "duration": 0.5,
                    "startSpeed": 2.5, //How far you want the particles to spread
                    "emissionRate": 50.0,
                    "maxParticles": 2,
                    "emission": {
                      "burstCount": 1,
                      "rateMultiplier": 0.1,
                      "rateOverTimeMultiplier": 0.1,
                      "burst": {
                        "count": 1,
                        //"cycleCount": 1,
                        "maxCount": 1,
                        "minCount": 1,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    },
                  }
                },
              },
            },
            "Reference|GC_Battery_424.ModuleDamage.deathExplosion/FX_Lightning": { 
              "UnityEngine.Transform": {
                "localScale": { "x":1, "y":1, "z":1 },
                "localEulerAngles": { "x":0, "y":0, "z":0 },
                "localPosition": { "x":0, "y":0, "z":0 }
              },
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startColor": {
                      "r": 0.45,
                      "g": 0.55,
                      "b": 1.0,
                      "a": 0.915
                    },
                    "startSize": 2.5,
                    // "loop": false, //Happens during flight
                    // "endSize": 15.0,
                    "playbackSpeed": 0.5,
                    "duration": 0.5,
                    "startSpeed": 2.5, //How far you want the particles to spread
                    "emissionRate": 50.0,
                    "maxParticles": 2,
                    "emission": {
                      "burstCount": 1,
                      "rateMultiplier": 0.1,
                      "rateOverTimeMultiplier": 0.1,
                      "burst": {
                        "count": 1,
                        //"cycleCount": 1,
                        "maxCount": 1,
                        "minCount": 1,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    },
                  }
                },
              },
            },
            "GameObject|ExplosionBright": {
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startSize": 0.2,
                    "startColor": {
                      "r": 0.3,
                      "g": 0.3,
                      "b": 1.0,
                      "a": 1.0
                    },
                    // "startSpeed": 15, //How far you want the particles to spread
                    "maxParticles": 0,
                    "emission": {
                      "rateMultiplier": 20.0,
                      "rateOverTimeMultiplier": 0.2,
                      "burst": {
                        "count": 2,
                        //"cycleCount": 1,
                        "maxCount": 1,
                        "minCount": 1,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    },
                  }
                }
              }
            },
            "GameObject|Sparks": {
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startSize": 0.2,
                    "startColor": {
                      "r": 0.3,
                      "g": 0.3,
                      "b": 1.0,
                      "a": 1.0
                    },
                    // "startSpeed": 15, //How far you want the particles to spread
                    "maxParticles": 0,
                    "emission": {
                      "rateMultiplier": 20.0,
                      "rateOverTimeMultiplier": 0.2,
                      "burst": {
                        "count": 2,
                        //"cycleCount": 1,
                        "maxCount": 1,
                        "minCount": 1,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    },
                  }
                }
              }
            },
            "GameObject|ExplosionDark": {
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startSize": 0,
                    "maxParticles": 0,//deny particle spawns
                    "emission": {
                      "rateMultiplier": 20.0,
                      "rateOverTimeMultiplier": 0.2,
                      "burst": {
                        "count": 2,
                        //"cycleCount": 1,
                        "maxCount": 1,
                        "minCount": 1,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    },
                  }
                }
              }
            },
            "GameObject|ExplosionSmoke": {
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startSize": 0,
                    "maxParticles": 0,
                    "emission": {
                      "rateMultiplier": 20.0,
                      // "rateOverTimeMultiplier": 0.2,
                      "burst": {
                        "count": 0,
                        //"cycleCount": 1,
                        "maxCount": 0,
                        "minCount": 0,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    },
                  }
                }
              }
            },
            "GameObject|Point light": {
              "UnityEngine.Light": {
                // "spotAngle": 60.0,
                "color": {
                  "r": 0.5,
                  "g": 0.5,
                  "b": 1.0,
                  // "a": 1.0
                },
                // "colorTemperature": 6570.0,
                // "intensity": 7.5,//2.0
                // "bounceIntensity": 1.0,
                // "shadowCustomResolution": -1,
                // "shadowBias": 0.5,
                // "shadowNormalBias": 1.0,
                // "shadowNearPlane": 0.2,
                // "range": 7.5,
                // "flare": null
              },
              "FadeInOutLight": {
                // "StartDelay": 0.0,
                "FadeInSpeed": 0.25,
                // "FadeOutDelay": 0.5,
                "FadeOutSpeed": 0.25,
                "FadeOutAfterCollision": true,
                "UseHideStatus": true,
                // "goLight": "TheLightSpecifiedAbove",
                // "canStart": true,
              }
            },
          }, //Explosion
        },
        "UnityEngine.Transform": {
          "localPosition": { "x":0, "y":0, "z":0 },
          "localScale": { "x":1, "y":1, "z":1 }, //{ "x":1.5, "y":1.5, "z":4 }
          "localEulerAngles": { "x":0, "y":0, "z":0},
        },
        "UnityEngine.Rigidbody": {//This is how to enable/disable gravioli
          "useGravity": false,
          // "centerOfMass": { "x":0, "y":0, "z":0 },
          // "mass": 25.0, //Bounce
        },     
        "UnityEngine.CapsuleCollider": { //Instant Damage pulse
          "gameObject": {
            "layer": 2, //ID 524288Layers:
              // (0) Default//Collides with normal things
              // (1) TransparentFX //Bypasses Shields, hits self
              // (2) Ignore Raycast//Raycasts cannot detect, hits self
              // (3) 
              // (4) Water//
              // (5) UI//No collision
              // (6) 
              // (7) 
              // (8) Tank //Bypasses shields, collides with self
              // (9) Cosmetic//Collides with nothing.
              // (10) Bullet //normal projectile
              // (11) Container //Crates, Collides with nothing.
              // (12) Shield //Clips through shields, collides with self
              // (13) Terrain //
              // (14) TankIgnoreTerrain //Ignores terrain, hits self
              // (15) Scenery //normal
              // (16) Pickup //normal
              // (17) Trigger //No collision
              // (18) SceneryIgnoreRaycast //Raycasts cannot detect
              // (19) 3D UI //No collision
              // (20) WheelSuspension // normal
              // (21) ShieldBulletFilter //collides with bullets and shields
              // (22) TerrainCollidingParticles
              // (23) ShieldTechFilter //collides with Techs
              // (24) TerrainOnly //idk
              // (25) RenderImageForPrefab
              // (26) SceneryCoarse
              // (27) Landmarks
          },
          "radius": 0.25,
          "height": 42,
          "direction": 2,
          "center": { "x": 0, "y": 0, "z": 25 }
        },
        "WeaponRound": {
          "m_DamageType": 2,
          "m_Damage": 150,//Because this PHASES through SHIELDS
        }
      },
    } 
  }
}
