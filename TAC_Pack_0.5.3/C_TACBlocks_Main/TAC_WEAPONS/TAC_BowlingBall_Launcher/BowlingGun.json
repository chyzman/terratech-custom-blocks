// -- Make a copy of this file, change the ID and Hex, and modify the values shown to make your own block --
// "PropertyName" : Value,
// Only change the Value
{
  "Name": "TAC Spheroth Wrecking Ball Cannon",
  "Description": "Launches car-sized wrecking balls to wreck armor plates and blow up shield generators. \n\nAceba1 thought it was a nice, splended day to go bowling.  However it was actually a bad day to do so as the forecast was mostly scattered showers of Enemy Base Bombs.  eww.  \n\nThe solution? \nThe <b>Spheroth Cannon</b>.  You can go bowling with friends AND attack the enemy at the same time! \n\nDon't even think about using this to hit aircraft.  The bowling balls are just too heavy to bother aiming correctly. \n\n\nActually it is heavy enough that shield generators don't even want to bother with it, so that's that.  If they did, they would probably commit die from just dealing with the weight on the spot.  How clever of them.", //You can make multiple lines with \n
  "ID": 584267, //A random ID that MUST be unique

  "Faction": 5, //GSO = 1|0, GeoCorp = 2, EXP = 3, Venture = 4, HawkEye = 5, Special = 6, BetterFuture = 7
  "Category": 4, //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
  "Grade": 3, //The desired grade minus one
  "Price": 58017, //Royal wrecker of armor plates
  "HP": 33750,//Decent
//"HP": 1500, //-Was this
  "Mass": 112,//Heaaavy
  "Rarity": 2,

  "IconName": "MotherOfAllCannons.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named

  "MeshName": null, //Moved it to SubObjects so that it can be aligned- FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

  "Recipe": "51, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 52, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 53, 54, 54, 54, 54, 54, 54, 54, 54, 55, 55, 55, 55, 55, 55, 55, 55, 55, 55, 61, 61, 62", // Separate chunk names or IDs with a comma. Not case sensitive.


  /*  EITHER  */
  "MeshTextureName": null, //FILE Name of image for texture, such as "texture.png". File can be anywhere and should be uniquely named
  /*  OR  */
  "MeshMaterialName": null, //Name of one of the GAME'S materials to use, such as "Corp_Main", "GSO_Main", "GeoCorp_Main", "Venture_Main", and "HE_Main". This material flashes and everything!


  /*  OPTIONAL  */
  "ColliderMeshName": null, //FILE Name of the mesh, such as "collider.obj". Leaving as null will make a box collider relative to the mesh

  // X is right and left, Y is up and down, and Z is forward and backward

 // "Cells": [
 //    { "x": 0, "y": 0, "z": 0 },
 //  ],

  "APs": [
    //Inner
    { "x":1, "y":-0.5, "z":1 },
    { "x":1, "y":-0.5, "z":2 },
    { "x":2, "y":-0.5, "z":1 },
    { "x":2, "y":-0.5, "z":2 },
    //Outer
    { "x":1, "y":-0.5, "z":0 },
    { "x":2, "y":-0.5, "z":0 },
    { "x":1, "y":-0.5, "z":3 },
    { "x":2, "y":-0.5, "z":3 },
    { "x":0, "y":-0.5, "z":1 },
    { "x":0, "y":-0.5, "z":2 },
    { "x":3, "y":-0.5, "z":1 },
    { "x":3, "y":-0.5, "z":2 },
  ],
  "BlockExtents": //Makes a grid box with these dimensions. Is ignored if "Cells": is used
  {
    "x": 4,
    "y": 7,
    "z": 4 //Absolutely massive for now.
  }, // A vector of (1, 1, 1) returns a one-celled block
  "APsOnlyAtBottom": false, //Make APs only on the bottom, or have all faces covered. Only works with "BlockExtents":


  "GamePrefabReference": "HE_CannonTurret_Short_(525)", //Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)"
  "KeepReferenceRenderers": true,
  "DeathExplosionReference":"HE_DeliveryCannon_353",//bigg
  "ReferenceOffset": {
    "x": 0,
    "y": 0,
    "z": 0
  },
  
  "SubObjects": [
    { //Base
     "SubOverrideName": "m_HE_CannonTurret_Short_Base",
      "DestroySubReferenceRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "TACBallCannonBase.obj",
      "ColliderMeshName": "TACBallCannonBase.obj",
      "MakeBoxCollider": false,
      "MeshTextureName": null,
      "MeshMaterialName": "HE_Main",
      //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
    },
    { //Base Tower
     "SubOverrideName": "m_HE_CannonTurret_Short_Base_copy",
      "DestroySubReferenceRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "TACBallCannonBaseTall.obj",
      "ColliderMeshName": "TACBallCannonBaseTall.obj",
      "MakeBoxCollider": false,
      "MeshTextureName": null,
      "MeshMaterialName": "HE_Main",
      //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
    },
    { //Azimuth
     "SubOverrideName": "m_HE_CannonTurret_Short_Turret",
      "DestroySubReferenceRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "TACBallCannonBaseRotatingPart2.obj",
      "ColliderMeshName": "TACBallCannonBaseRotatingPart2.obj",
      "MakeBoxCollider": false,
      "MeshTextureName": null,
      "MeshMaterialName": "HE_Main",
      //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
    },
    { //Azimuth
     "SubOverrideName": "m_HE_CannonTurret_Short_Barrel",
      "DestroySubReferenceRenderer": true,
      "DestroyExistingColliders": true,
      "MeshName": "TACBallCannonBarrel2.obj",
      "ColliderMeshName": "TACBallCannonBarrel2.obj",
      "MakeBoxCollider": false,
      "MeshTextureName": null,
      "MeshMaterialName": "HE_Main",
      //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
    },
    { //Removing unwanted part
     "SubOverrideName": "m_HE_CannonTurret_Short_GunMantlet",
      "DestroyExistingRenderer": true,
      "DestroyExistingColliders": true,
      "MakeBoxCollider": false,
      //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
    },
  ],

  "JSONBLOCK": { //Root GameObject
    "GameObject|_gimbalBase": { //GameObject child
      "UnityEngine.Transform": {
        "localScale": { "x":1.0, "y":1.0, "z":1.0 },
        "localPosition": { "x":1.5, "y":0, "z":1.5 }
      },
      "GameObject|m_HE_CannonTurret_Short_Turret": {
        "UnityEngine.Transform": {
          "localScale": { "x":1, "y":1, "z":1 },
          "localPosition": { "x":0, "y":0, "z":0 }
        },
      },
      "GimbalAimer": {
        "rotationLimits": [-180, 180]//Full Range here
      }, //For horizontal aim restrictions - Doesn't work on this Turret though
      "GameObject|_gimbalElev": { //GameObject in child
        "UnityEngine.Transform": {
          "localScale": { "x":1, "y":1, "z":1 },
          "localPosition": { "x":0, "y":4.8, "z":0.0 }
        },
        "GameObject|m_HE_CannonTurret_Short_GunMantlet": {
          // "UnityEngine.Transform": {
          //   "localScale": { "x":1, "y":1, "z":1 },
          //   "localPosition": { "x":-0.55, "y":-0.75, "z":-0.25 }
          // }
        },
        "GimbalAimer": {
          "rotationLimits": [-90, 5] //Vertical aim restrictions
        },
        "GameObject|_barrel": {
          "UnityEngine.Transform": {
            "localScale": { "x":5, "y":5, "z":5 }, //Increasing size of animation
            "localPosition": { "x":0, "y":0, "z":1 },
            "localEulerAngles": { "x":0, "y":0, "z":0 },
            // "localEulerAngles": { "x":10, "y":0, "z":90 }
          },
          "CannonBarrel": {
            "muzzleFlash": {
              "m_SpeedFactor": 0.85,
              "anim": {
              },
            },
          },
          "GameObject|_smoke": {
            "UnityEngine.Transform": {
              "localScale": { "x":0.2, "y":0.2, "z":0.2 }, //Animation rescaling
              "localPosition": { "x":0, "y":0, "z":0 }
            },
          },
          "GameObject|_muzzleFlash": {
            "UnityEngine.Transform": {
              "localScale": { "x":0.5, "y":0.5, "z":0.7 }, //Animation rescaling
              "localPosition": { "x":0, "y":0, "z":0.1 }
            },
            "GameObject|_muzzleFlashAnim": {
              "UnityEngine.Light": {
                // "spotAngle": 60.0,
                "color": {
                  "r": 0.05,
                  "g": 1.0,
                  "b": 0.05,
                  "a": 1.0
                },
              },
              "GameObject|m_MuzzleFlash_01": {
              }
            }
          },
          "GameObject|_casingSpawn": {
            "UnityEngine.Transform": {
              "localScale": { "x":0.2, "y":0.2, "z":0.2 }, //Animation rescaling
              "localPosition": { "x":0, "y":0, "z":-0.25 }
            },
          },
          "GameObject|_bulletSpawn": {
            "UnityEngine.Transform": {
              "localScale": { "x":0.2, "y":0.2, "z":0.2 }, //Animation rescaling
              "localPosition": { "x":0, "y":0, "z":0.5 },
              "localEulerAngles": { "x":0, "y":0, "z":0 }
            },
          },
          "GameObject|_recoiler": {
            "UnityEngine.Transform": {
              // "localScale": { "x":0.1, "y":0.1, "z":0.1 }, //Animation rescaling
              // "localPosition": { "x":0, "y":0, "z":0.5 },
              "localEulerAngles": { "x":0, "y":0, "z":0 }
            },
            "GameObject|m_HE_CannonTurret_Short_Barrel": {
              "UnityEngine.Transform": {
                "localScale": { "x":0.2, "y":0.2, "z":0.2 }, //Animation rescaling
                "localPosition": { "x":0, "y":0, "z":-0.15 },
                "localEulerAngles": { "x":0, "y":0, "z":90 }
              },
            }
          }
        },
      }
    },
    "GameObject|m_HE_CannonTurret_Short_Base": {
      "UnityEngine.Transform": {
        "localScale": { "x":1.0, "y":2, "z":1.0 },
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":1.5, "y":-0.5, "z":1.5 }
      },
    },
    "Duplicate|m_HE_CannonTurret_Short_Base": {
      "UnityEngine.Transform": {
        "localScale": { "x":1.0, "y":1, "z":1.0 },
        "localPosition": { "x":1.5, "y":0, "z":1.5 }
      },
    }, //Back to GameObject

    "Damageable": {
      "m_DamageableType": 1, 
      "m_AoEDamageBlockPercent": 1.0,//Stop shotguns
    },
    // TAC Standard - Shockwave Dissipation Armor
    "RandomAdditions.ModuleReinforced":{ // Add a special resistance to your block
      "DoDamagableSwitch": true, // Should we switch the DamageableType of this block?
      "TypeToSwitch": 0,          // DamageableType to switch to

      "ModifyAoEDamage": true,    // Enable AoE damage changing? (only handles Explosion, not shotguns)
      "ExplosionMultiplier": 0.6,   // Multiplier for all AoE attacks dealt against this block

      "UseMultipliers": false,     // Should the multipliers be used?
    },
    "ModuleWeapon": { //Component
      // "m_FireSFXType": " MegatonCannon", //Firing noise
      "m_FireSFXType": " BigBertha", //Firing noise
      //Other Firing noise options include "VENCannonRapid"(The old fire sfx), "PoundCannon"(GSO 3-Pound Cannon), "MegatonLongBarrel"(GSO Gigaton Cannon)
      "m_RotateSpeed" : 90, //SPEED
      //was 400, nerfed for obvious reasons
      // "m_FireSFXType": 66
    },
    "ModuleWeaponGun": { // Another component
      //Burst Shot setup begins - You can remove the '//'s to allow Sequencing for salvo
      // "m_FireControlMode": "Sequenced", 
      // "m_BurstShotCount" : 1, //Number of shots before the gun "overheats"
      // "m_BurstCooldown" : 0.5, //Seconds between bursts.
      //was 0.5
      //Burst Shot setup end
      //
      "m_ShotCooldown" : 5.0, //
      "m_SeekingRounds" : true, //Rounds that home in. Missiles have these without gravity(0.0 "m_BulletSpin")
      //was 5.0
      "m_FiringData": null, //Test to clear internal cache, probably does nothing good or bad
      //"m_DeploySFXType": 77 //This is supposed to make it sound like a big bertha but it doesn't for some reason - This is actually used for when the block deploys like the BF shotgun
    },//comma
    "FireData": { //Component, but with a catch
      "m_MuzzleVelocity": 125, //Bullet speed
      //was 65, then buffed to 275 for fun, then nerfed to 125. Will be nerfed to 75 or less upon release?
      "m_BulletSpin": 750, //Adds Gravity and likely reduces tracking ability
      "m_BulletSprayVariance": 0.02, //Bullet inverse-accuracy
      "m_KickbackStrength": 6000, // Would you like to become a plane
      "m_BulletCasingPrefab": null,
      "Instantiate|m_BulletPrefab": { //Makes bullet unique, enters like "GameObject|m_BulletPrefab"
        "UnityEngine.Transform": {
          "localScale": { "x":1.0, "y":1.0, "z":1.0 },
          "localPosition": { "x":0, "y":0.15, "z":0.0 }
        },  // Size of Bullet    
        "UnityEngine.MeshFilter": {
          "sharedMesh": "MetalBowling.obj"
        },
        "Spinner": {//The bees refuse to stay still
          "m_Speed": 3,
          "m_RotationAxis": {
            "axis": 2
          },
          "m_SteerAxis": {
            "axis": 1
          },
          "m_AutoSpin": true,
          "m_SpinUpTime": 0.1,
          "m_CurrentAngle": 0,
          "m_CurrentAutoSpeed": 0.0,
          "m_CurrentSpeedFraction": 0.0,
          "m_SpinnerSound": null,
          "m_SpinnerSoundOriginalPitch": 0.0,
          "Speed": -2.0,
          "SpeedFraction": 0.0,
          "AtFullSpeed": true
        },
        "UnityEngine.LineRenderer": {
          "startWidth": 1.5,
          "endWidth": 0.25,
        },
        "WeaponRound": { //Component because we are in GameObject right now
          "m_DamageType" : "Impact", //What damage modifier the weapon does
          "m_Damage": 1250,//did 3000 but MAGNET happened //Did 1250 damage before, Buffed.
          //It came in like a WRECKING BALLL
          //If shields DIDN'T ignore it, they would be taking a WHOPPING 6000 DAMAGE!
          //Then nerfed to 35, then back at 75
        },
        // "SmokeTrail": {
        //   "numberOfPoints": 3,
        //   "updateSpeed": 0.01,//how often it makes new "points"
        //   "riseSpeed": 0.0,//How fast it floats up
        //   "spread": 0.0,
        // },
        "UnityEngine.Rigidbody": {//This is how to enable/disable gravioli
          // "useGravity": true
          "mass": 1500.0, //we want a THUD not a pomf
          // "collisionDetectionMode": "ContinuousDynamic", //ContinuousDynamic(fast moving objects), Continuous(for colliding with ContinuousDynamic colliders), ContinuousSpeculative(Kinematics), Discrete(Non-Fast Objects),
          // "detectCollisions": true,
          // "maxDepenentrationVelocity": 10000.0,
          // "drag": 0.1,
          // "angularDrag": 1.0,
          // "centerOfMass": { "x":0, "y":0, "z":0 },
          // "isKinematic": false,//If isKinematic is enabled, Forces, collisions or joints will not affect the rigidbody anymore.
          // "freezeRotation": true,
        },  
        "UnityEngine.CapsuleCollider": { //Sozin found this one - Better collision detection
          "gameObject": {
            "layer": 8.//2 //ID 524288Layers:
              // (0) Default//Collides with normal things
              // (1) TransparentFX //Bypasses Shields, hits self
              // (2) Ignore Raycast//Raycasts cannot detect, hits self
              // (3) 
              // (4) Water//
              // (5) UI//No collision
              // (6) 
              // (7) 
              // (8) Tank //Bypasses shields, collides with self
              // (9) Cosmetic//Collides with nothing.
              // (10) Bullet //normal projectile
              // (11) Container //Crates, Collides with nothing.
              // (12) Shield //Clips through shields, collides with self
              // (13) Terrain //
              // (14) TankIgnoreTerrain //Ignores terrain, hits self
              // (15) Scenery //normal
              // (16) Pickup //normal
              // (17) Trigger //No collision
              // (18) SceneryIgnoreRaycast //Raycasts cannot detect
              // (19) 3D UI //No collision
              // (20) WheelSuspension // normal
              // (21) ShieldBulletFilter //collides with bullets and shields
              // (22) TerrainCollidingParticles
              // (23) ShieldTechFilter //collides with Techs
              // (24) TerrainOnly //idk
              // (25) RenderImageForPrefab
              // (26) SceneryCoarse
              // (27) Landmarks
              // (28) 
              // (29) 
              // (30) 
              // (31) 
          },
          "radius": 1.0,
          "height": 2.0,
          "direction": 2,
          "center": { "x": 0, "y": 0.1, "z": 0 }
        },

        "RandomAdditions.WeightedProjectile":{ // launch bowling balls but they actually have proper weight
          "ProjectileMass": 500,    // The Mass you want the projectile to have
          "CustomGravity":false, // enable the parameter below - WARNING overrides all grav settings!
          "GravityAndSpeedScale": 0.1,    // The percent (1.0 is 100%) force gravity pulls down on this 
        },
        "RandomAdditions.KeepSeekingProjectile": {},// Keep seeking no matter what

        "Projectile": { //Another one (doot doooooot dododoot)
          "m_SeekingRounds" : true,
          "m_ExplodeAfterLifetime": true,
          "m_ExplodeOnTerrain": true,
          // "m_ImpactSFXType" : "Mortar", //WHAM
          "m_ImpactSFXType" : "Hammer", //WHAM
          "m_DeathDelay": 20.0,
          //was 10.0, too short
          "m_SingleImpact" : false, // Bowling ball for maximum damage
          "m_LifeTime": 0.0,          
          "Instantiate|m_Explosion": { //Makes explosion unique, enters like "GameObject|m_Explosion"
            "Explosion": { //wOW a component
              "m_DamageType" : "Impact", //What damage modifier the explosion does
              "m_ExplosionSize": 1, //This is an enum with values 0 1 and 2 for SFX
              "m_EffectRadius": 3.0,//2.0 //Evil gun
              "m_EffectRadiusMaxStrength": 2.0,//1.0 //Max Radius before the effect deals less damage outwards
              "m_MaxDamageStrength": 25, //weak kick bonus
              //was 50, nerfed to 25
              "m_MaxImpulseStrength": -50 //YEET?
              //was 250, then was 1250, then settled on 500, now 750, now -50 to MAGNET
            },
            "GameObject|ExplosionBright": {
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startSize": 0.0,
                    "startSpeed": 0, //How far you want the particles to spread
                    // "emissionRate": 25.0,
                    "maxParticles": 0,
                    "emission": {
                      "rateMultiplier": 50.0,
                      "rateOverTimeMultiplier": 0.2,
                      "burst": {
                        "count": 0,
                        //"cycleCount": 1,
                        "maxCount": 0, 
                        "minCount": 0,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    },
                  }
                }
              }
            },
            "GameObject|ExplosionDark": { 
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startSize": 0.0,
                    "endSize": 0.0,
                    "startSpeed": 0, //How far you want the particles to spread
                    "emissionRate": 5.0,
                    "maxParticles": 0,
                    "emission": {
                      "rateMultiplier": 1.0,
                      "rateOverTimeMultiplier": 0.2,
                      "burst": {
                        "count": 0,
                        //"cycleCount": 1,
                        "maxCount": 0,
                        "minCount": 0,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    }
                  }
                }
              }
            },
            "GameObject|ExplosionSmoke": { 
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startSize": 0.0,
                    "endSize": 0.0,
                    "startSpeed": 0, //How far you want the particles to spread
                    "emissionRate": 5.0,
                    "maxParticles": 0,
                    "emission": {
                      "rateMultiplier": 1.0,
                      "rateOverTimeMultiplier": 0.2,
                      "burst": {
                        "count": 0,
                        //"cycleCount": 1,
                        "maxCount": 0,
                        "minCount": 0,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    }
                  }
                }
              }
            },
            "GameObject|Point light": {
              "UnityEngine.Light": {
                // "spotAngle": 60.0,
                // "color": {
                //   "r": 1.0,
                //   "g": 1.0,
                //   "b": 0.9,
                //   "a": 1.0
                // },
                // "colorTemperature": 6570.0,
                "intensity": 7.5,//2.0
                // "bounceIntensity": 1.0,
                // "shadowCustomResolution": -1,
                // "shadowBias": 0.5,
                // "shadowNormalBias": 1.0,
                // "shadowNearPlane": 0.2,
                "range": 3.5,
                // "flare": null
              },
              "FadeInOutLight": {
                "StartDelay": 0.0,
                "FadeInSpeed": 0.05,
                "FadeOutDelay": 0.2,
                "FadeOutSpeed": 0.05,
                "FadeOutAfterCollision": true,
                "UseHideStatus": true,
                // "goLight": "TheLightSpecifiedAbove",
                // "canStart": true,
              }
            },
            "GameObject|Sparks": {
              "UnityEngine.ParticleSystem": {
                "main": {
                  "m_ParticleSystem": {
                    "startSize": 0.2,
                    // "startSpeed": 15, //How far you want the particles to spread
                    // "emissionRate": 25.0,
                    "maxParticles": 20,
                    "emission": {
                      "rateMultiplier": 50.0,
                      "rateOverTimeMultiplier": 0.2,
                      "burst": {
                        "count": 20,
                        //"cycleCount": 1,
                        "maxCount": 20, 
                        "minCount": 18,
                        // "probability": 150,
                        // "repeatInterval": 150,
                        //"time": 0
                      }
                    },
                  }
                }
              }
			      }
          }
        },
        "SeekingProjectile": {
          "m_SeekType": "Vehicle",
          "m_TargetingType" : "RandomBlockOnVehicle", //Where we head to when locked onto a target
          "m_ActivationDelay": 0.2, //How long before we aim at the target?
          "m_VisionRange": 10, //How far can we see targets?
          "m_VisionConeAngle" : 360,
          "m_TurnSpeed" : 120, 
        },
      }
    }
  }
}