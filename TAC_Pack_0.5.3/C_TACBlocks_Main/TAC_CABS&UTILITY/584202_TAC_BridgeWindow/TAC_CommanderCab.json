// -- Make a copy of this file, change the ID and Hex, and modify the values shown to make your own block --
// "PropertyName" : Value,
// Only change the Value
{
  "Name": "TAC Oversight Bridge Viewport", //
  "Description": "A glamorus bridge window that offers an excellent view and a bunch of health. \n\nErick the TAC Navy Captain, disiple of <b>Sozin the Legendary Naval Engineer</b>, has an obsession with the view from this window for some reason, even after getting injured when it was struck by a volley of missiles. \n\n\nWe still think it should get some armor shutters though.", //You can make multiple lines with \n
  "ID": 584202, //A random ID that MUST be unique
  //"IDNetHex": "ffffffffffffffff", //Get a random hex from https://www.random.org/bytes/ (8 bytes work)

  "Faction": 5, //GSO = 1|0, GeoCorp = 2, EXP = 3, Venture = 4, HawkEye = 5, Special = 6, BetterFuture = 7
  "Category": 5, //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
  "Grade": 3, //The desired grade minus one - HE Grade 4
  "Price": 13842,//Not as expensive as the Hovabugga
  "HP": 2250, //no easy die but DO NOT PUSH IT
  //TAC blocks are normally 450, this has decent bonus health.
  "Mass": 6,

  "IconName": "YamamatoCab.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named

  "MeshName": null, //"GSO_BigBertha_845_MOD.obj"  FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

  "Recipe":  "45, 45, 45, 45, 46, 46, 46, 46, 60, 60", // Separate chunk names or IDs with a comma. Not case sensitive.
      // "name": "Rugged Fiblar",
      // "id": 52,
      // "price": 94,
      // "name": "Mother Brain",
      // "id": 60,
      // "price": 1465,


  /*  EITHER  */
  "MeshTextureName": null, //FILE Name of image for texture, such as "texture.png". File can be anywhere and should be uniquely named
  /*  OR  */
  "MeshMaterialName": null, //Name of one of the GAME'S materials to use, such as "Corp_Main", "GSO_Main", "GeoCorp_Main", "Venture_Main", and "HE_Main". This material flashes and everything!


  /*  OPTIONAL  */ "ColliderMeshName": null, //FILE Name of the mesh, such as "collider.obj". Leaving as null will make a box collider relative to the mesh

  // X is right and left, Y is up and down, and Z is forward and backward

  /*  EITHER  */
  "Cells": [ //The grid space to be occupied

  ],
  "APs": [ //The location of APs on the block. For use with "Cells"
     {
       "x": 0,
       "y": 0,
       "z": -0.5
     },
     {
       "x": 0,
       "y": 1,
       "z": -0.5
     },
     {
       "x": 0,
       "y": 1.5,
       "z": 0
     },
     {
       "x": 0,
       "y": -0.5,
       "z": 0
     },
     //Begin Left
     {"x": -0.5,"y": 0,"z": 0},
     {"x": -0.5,"y": 1,"z": 0},
     //Begin Right
     {"x": 0.5,"y": 0,"z": 0},
     {"x": 0.5,"y": 1,"z": 0},
  ],
  /*  OR  */
  "BlockExtents": //Makes a grid box with these dimensions. Is ignored if "Cells": is used
  {
    "x": 1,
    "y": 2,
    "z": 2 
  }, // A vector of (1, 1, 1) returns a one-celled block
  "APsOnlyAtBottom": false, //Make APs only on the bottom, or have all faces covered. Only works with "BlockExtents":



  // Delete /* and */ if using
   
  
  //OPTIONAL

  //was GC_Cab(222)
	"GamePrefabReference": "GC_Light_Strip(211)",//Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)"
  "KeepReferenceRenderers": false,
	"ReferenceOffset": { "x": 0, "y": 0.5, "z": 1 }, //Shift the subobjects of the block prefab by x, y and z

 
  
  // Sub Objects can modify existing sub gameobjects on a prefab reference
  "SubObjects": [ 
  { // Base
    "SubOverrideName": "m_GC_striplight",
    // "DestroySubReferenceRenderer": true,
    "DestroyExistingRenderer": true,
    "DestroyExistingColliders": true,
    "MeshName": "TACBridgeWindow.obj",
    "ColliderMeshName": "TACBridgeWindow.obj",
    "MeshTextureName": null,
    "MeshMaterialName": "HE_Main",
    //"SubOffset": { "x": 4.5, "y": 0, "z": 4.5 }
  },
],
	
  "JSONBLOCK": { //Root GameObject

    "GameObject|Geometry": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0, "z":0 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
      "GameObject|m_GC_striplight": {
	      "UnityEngine.Transform": {
	        "localEulerAngles": { "x":0, "y":0, "z":0 },
	        "localPosition": { "x":0, "y":0.5, "z":0.5 },
	        "localScale": { "x":1, "y":1, "z":1 }
	      },
      }
  	},
    // "GameObject|GeoCorp_Cab_Light 2": {
    //   "UnityEngine.Transform": {
    //     "localEulerAngles": { "x":0, "y":0, "z":315 },
    //     "localPosition": { "x":0, "y":0.5, "z":0.5 },
    //     "localScale": { "x":1, "y":1, "z":1 }
    //   },
    // },
    // "GameObject|GeoCorp_Cab_Light 1": {
    //   "UnityEngine.Transform": {
    //     "localEulerAngles": { "x":0, "y":0, "z":45 },
    //     "localPosition": { "x":0, "y":0.5, "z":0.5 },
    //     "localScale": { "x":1, "y":1, "z":1 }
    //   },
    // },
    // "GameObject|GeoCorp_Cockpit_222": {
    //   "UnityEngine.Transform": {
    //     "localEulerAngles": { "x":0, "y":0, "z":0 },
    //     "localPosition": { "x":0, "y":0.5, "z":0.5 },
    //     "localScale": { "x":1, "y":1, "z":1 }
    //   },
    // },
    "GameObject|CentreOfMass": {
      "UnityEngine.Transform": {
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0, "y":0.5, "z":0.5 },
        "localScale": { "x":1, "y":1, "z":1 }
      },
    },
    "GameObject|Lights": {
      "GameObject|GC_striplight_Light_02": {
	      "UnityEngine.Transform": {
	        "localEulerAngles": { "x":0, "y":0, "z":315 },
	        "localPosition": { "x":0, "y":0.5, "z":0.5 },
	        "localScale": { "x":1, "y":1, "z":1 }
	      },
	      "UnityEngine.Light": {
	        // "m_BakedIndex": 0,
	        // "type": 0,
	        "spotAngle": 90.0,
	        "color": {
	          "r": 1.0,
	          "g": 1.0,
	          "b": 1.0,
	          "a": 1.0
	        },
	        // "colorTemperature": 6570.0,
	        "intensity": 0.25,//2.0
	        "bounceIntensity": 1.0,
	        "shadowCustomResolution": -1,
	        "shadowBias": 0.5,
	        "shadowNormalBias": 1.0,
	        "shadowNearPlane": 0.2,
	        "range": 100.0,
	        "flare": null,
	      //   "cullingMask": -1,
	      //   "lightShadowCasterMode": 0,
	      //   "shadows": 0,
	      //   "shadowStrength": 0.5,
	      //   "shadowResolution": -1,
	      //   "shadowSoftness": 4.0,
	      //   "shadowSoftnessFade": 1.0,
	      //   "cookieSize": 10.0,
	      //   "cookie": null,
	      //   "renderMode": 1,
	      //   "bakedIndex": 0,
	      //   "commandBufferCount": 0,
	      //   "shadowConstantBias": 0.0,
	      //   "shadowObjectSizeBias": 0.0,
	      //   "attenuate": true
	      }
	    },
      "GameObject|GC_striplight_Light_01": {
	      "UnityEngine.Transform": {
	        "localEulerAngles": { "x":0, "y":0, "z":45 },
	        "localPosition": { "x":0, "y":0.5, "z":0.5 },
	        "localScale": { "x":1, "y":1, "z":1 }
	      },
	      "UnityEngine.Light": {
	        "spotAngle": 90.0,
	        "color": {
	          "r": 1.0,
	          "g": 1.0,
	          "b": 1.0,
	          "a": 1.0
	        },
	        // "colorTemperature": 6570.0,
	        "intensity": 0.25,//2.0
	        "bounceIntensity": 1.0,
	        "shadowCustomResolution": -1,
	        "shadowBias": 0.5,
	        "shadowNormalBias": 1.0,
	        "shadowNearPlane": 0.2,
	        "range": 100.0,
	        "flare": null
	      }
	    },
	    //Add First Person
	    // "GameObject|FirstPersonAnchor": {
	    //   "UnityEngine.Transform": {
	    //     "localEulerAngles": { "x":0, "y":0, "z":0 },
	    //     "localPosition": { "x":0, "y":0.5, "z":0.8 },
	    //     "localScale": { "x":1, "y":1, "z":1 }
	    //   },
     //    "Nuterra.BlockInjector.ModuleFirstPerson": { 
	    //     "_anchor": null,
	    //     "AdaptToMainRot": false,
	    //     "thisBlock": null,
	    //     // "FirstPersonAnchor": {
	    //     //   "transform": {
	    //     //     "rotationOrder": 0,
	    //     //     "parent": "Transform GSO Top Cockpit",
	    //     //     "parentInternal": "Transform GSO Top Cockpit",
	    //     //     "root": "Transform Player Tech #1",
	    //     //     "childCount": 0,
	    //     //     "hasChanged": true,
	    //     //     "hierarchyCapacity": 512,
	    //     //     "hierarchyCount": 359
	    //     //   },
	    //       // "layer": 0,
	    //       // "active": true,
	    //       // "activeSelf": true,
	    //       // "activeInHierarchy": true,
	    //       // "isStatic": false,
	    //       // "isStaticBatchable": false,
	    //       // "tag": "Untagged",
	    //     // }
	    //   }
	    // },
	  },
    // "GameObject|m_CustomBlockRenderer": {
    //   "UnityEngine.Transform": {
    //     "localEulerAngles": { "x":0, "y":0, "z":0 },
    //     "localPosition": { "x":0, "y":0.5, "z":0.8 },
    //     "localScale": { "x":1, "y":1, "z":1 }
    //   },
    // },

    //Now we begin MADNESS
   //  "ModuleFuelTank": {
   //    "m_Capacity": 5.0,
   //    "m_RefillRate": 1.0,
   //  },
   //  "ModuleAltimeter": {
   //    "m_Priority": -1
   //  },
	  // "ModuleSpeedo": {},
    "ModuleVision": { //Temp Arty Tests
      "visionRange": 250,//Still less than Satnav's 400
      "visionConeAngle": 90, //Long ranged, in specific direction
      "m_Range": 250
    },
    "Damageable": {
      // "m_DamageableType": 0, 
      "m_AoEDamageBlockPercent": 0.1,//Explosions are pathetic on TAC Blocks in general
    },


  	//Removed Cab functionality
    // "ModuleTechController": { //Let's-a-Control!
    //   "m_PlayerInput": true,
    //   "HandlesPlayerInput": true
    // },
    // "ModuleAIBot": {
    //   "m_AITypesEnabled": ["Harvest", "Idle", "Escort"]
    // },
    "ModuleDamage": {
      "m_DamageDetachFragility": 0.0, //the multiplier for the knock-off value from weapon damage hits x Bullet Velocity. Set to zero to disable.
      //Popping off in the middle of a fight will really ruin your day
      // "m_ExplodeCountdownTimer": 0.0, //How long till the block commits die
      // "m_HealOnDetach": false, //Does this block heal when it is detached?
      // "m_HealOnDetachPercent": 0.0, //How much it heals when detached
      // "m_DamageDetachMeter": 0.0, //idk
      // "m_DamageDetachMeterTimestamp": 0.0, //idk
    },
  }
}
