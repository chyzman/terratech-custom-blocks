// -- Make a copy of this file, change the ID and Hex, and modify the values shown to make your own block --
// "PropertyName" : Value,
// Only change the Value
{
  "Name": "TAC Reactive Armor Verge Block",
  "Description": "This armor does NOT come with the deflector installed!  Instead this block has more HP than the other reactive armours.  \n\nAs such, this makes it a better block to survive terrain abuse.", //You can make multiple lines with \n
  "ID": 584426, //A random ID that MUST be unique

  "Faction": 5, //GSO = 1|0, GeoCorp = 2, EXP = 3, Venture = 4, HawkEye = 5, Special = 6, BetterFuture = 7
  "Category": 2, //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
  "Grade": 3, //The desired grade minus one
  "Price": 1848, //103+103+111+111 =206+222 =428    //HE block cost is 573 with times 3 multiplier. BF block cost is 768 with times 3 multiplier. This block is a whopping 1284!
  "HP": 850, //Normal HE Block is 400 - armor density is 750 compared to HE's 1000, buffed because lack of AP, deflector and higher price
  "Mass": 1.0, //Normal HE Block is 1.5

  "IconName": "EndKerb.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named

  // "MeshName": "TACSlopeBlock.obj", //FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

  "Recipe": "44, 44, 45, 45, 52, 52", // Separate chunk names or IDs with a comma. Not case sensitive.
        // {
        //   "name": "Hardened Titanic",
        //   "id": 45,
        //   "count": 1
        // }

  /*  EITHER  */
  "MeshTextureName": null, //FILE Name of image for texture, such as "texture.png". File can be anywhere and should be uniquely named
  /*  OR  */
  "MeshMaterialName": "HE_Main", //Name of one of the GAME'S materials to use, such as "Corp_Main", "GSO_Main", "GeoCorp_Main", "Venture_Main", and "HE_Main". This material flashes and everything!


  // /*  OPTIONAL  */ "ColliderMeshName": "TACOneBlock.obj", //FILE Name of the mesh, such as "collider.obj". Leaving as null will make a box collider relative to the mesh

  // X is right and left, Y is up and down, and Z is forward and backward

  /*  EITHER  */
  "Cells": [ //The grid space to be occupied

  ],
  "APs": [ //The location of APs on the block. For use with "Cells"
    // {
    //   "x": 0,
    //   "y": 0.5,
    //   "z": 0
    // },
    {
      "x": 0,
      "y": -0.5,
      "z": 0
    },
    // {
    //   "x": 0,
    //   "y": 0,
    //   "z": 0.5
    // },
    {
      "x": 0,
      "y": 0,
      "z": -0.5
    },
    // {
    //   "x": 0.5,
    //   "y": 0,
    //   "z": 0
    // },
    {
      "x": -0.5,
      "y": 0,
      "z": 0
    }
  ],
  /*  OR  */
  "BlockExtents": //Makes a grid box with these dimensions. Is ignored if "Cells": is used
  {
    "x": 1,
    "y": 1,
    "z": 1
  }, // A vector of (1, 1, 1) returns a one-celled block
  "APsOnlyAtBottom": false, //Make APs only on the bottom, or have all faces covered. Only works with "BlockExtents":



  // Delete /* and */ if using
   
  
  //OPTIONAL

	"GamePrefabReference": "HE_Block_Alt_01_(111)",//Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)"
  "KeepReferenceRenderers": false,  
	"ReferenceOffset": { "x":0, "y":0, "z":0 }, //Shift the subobjects of the block prefab by x, y and z 
  "ReferenceScale": { "x": 1, "y": 1, "z": 1 }, //Scale all the subobjects of the block prefab by the origin

 
  
  // Sub Objects can modify existing sub gameobjects on a prefab reference
  "SubObjects": [ 
    { //Base Model
     "SubOverrideName": "m_HE_Block_111",
      "DestroySubReferenceRenderer": true,
      "DestroyExistingColliders": false,
      "MeshName": "TAC_NoseConer.obj",
      "ColliderMeshName": "TAC_NoseConer.obj",
      "MakeBoxCollider": false,
      "MeshMaterialName": "HE_Main"
    },
    // { //Collider Model
    //  "SubOverrideName": "m_HE_Block_111_copy",
    //   "DestroyExistingColliders": false,
    //   "MakeBoxCollider": true,
    //   "MeshMaterialName": "HE_Main",
    //   "layer": 8
    // },
  ],
	
  "JSONBLOCK": { //Root GameObject
    "GameObject|m_HE_Block_111": {//Model
      "UnityEngine.Transform": {
        "localScale": { "x":1, "y":1, "z":1 },
        "localEulerAngles": { "x":0, "y":0, "z":0 },
        "localPosition": { "x":0.0, "y":0.0, "z":0.0 },
        // "localPosition": { "x":0.0, "y":0.05, "z":0.05 } 
      },
    },




    // CODING
    "Damageable": {
      "m_DamageableType": 1, //What damage multiplier this runs by
      // "m_HealingOrigin": null,
      "m_AoEDamageBlockPercent": 1.0,//
      //
      // "destroyOnDeath": false,
      // "damageThresholdEvent": null,
      // "m_NextThreshold": 0.0,
      // "m_InvulnerableEndTime": 3000.0,
      // "m_Invulnerable": true,
    },
    "ModuleDamage": {
      "m_DamageDetachFragility": 0.0, //the multiplier for the knock-off value from weapon damage hits x Bullet Velocity. Set to zero to disable.
      // "m_ExplodeCountdownTimer": 0.0, //How long till the block commits die
      // "m_HealOnDetach": true, //Does this block heal when it is detached?
      // "m_HealOnDetachPercent": 100.0, //How much it heals when detached
      // "m_DamageDetachMeter": 0.0, //idk
      // "m_DamageDetachMeterTimestamp": 0.0, //idk
    },
  }
}







