{
  "Name": "Hawkeye Hyperion Plasma Lance",
  "Description": "The next generation in energy projector technology. The Hyperion is mounted on a fully rotatable base, and projects a devastating beam of plasma far into the distance. The quirks of the projection mechanism lead to a stronger beam closer to the weapon.",
  "ID": 10012,

  "Faction": 5,
  "Category": 4,
  "Grade": 2,
  "Price": 58677,
  "HP": 5000,
  "Mass": 50,

  "Fragility": 0.25,

  "IconName": "HE_Plasma_Gun_Icon.png",

  "MeshName": null,

  "Recipe":  "52, 53, 53, 54, 54, 56, 56, 56, 58, 58, 58, 59, 60, 62, 62, 62, 64",

  "MeshTextureName": null,

  "MeshMaterialName": "HE_Main",

  "ColliderMeshName": null,

  "BlockExtents":
  {
    "x": 5,
    "y": 4,
    "z": 5
  },

  "APs": [
    {
      "x": 1,
      "y": -0.5,
      "z": 1
    },
    {
      "x": 1,
      "y": -0.5,
      "z": 2
    },
    {
      "x": 1,
      "y": -0.5,
      "z": 3
    },
    {
      "x": 2,
      "y": -0.5,
      "z": 1
    },
    {
      "x": 2,
      "y": -0.5,
      "z": 2
    },
    {
      "x": 2,
      "y": -0.5,
      "z": 3
    },
    {
      "x": 3,
      "y": -0.5,
      "z": 1
    },
    {
      "x": 3,
      "y": -0.5,
      "z": 2
    },
    {
      "x": 3,
      "y": -0.5,
      "z": 3
    }
  ],


  "GamePrefabReference": "BF_Laser_Melee_212", //Bigger explosions, more menancing shells
  "KeepRenderers": true,
  "KeepColliders": false,
  "ReferenceOffset": {
    "x": 0,
    "y": 0,
    "z": 0
  },

  "SubObjects": [
    {
      "SubOverrideName": "HE_Spindle_Outer",
      "MakeBoxCollider": false,
      "DestroyExistingRenderer": true,
      "MeshName": "HE_Spindle_Outer.obj",
      "ColliderMeshName": null,
      "MeshMaterialName": "HE_Main"
    },
    {
      "SubOverrideName": "HE_Spindle_Inner",
      "MakeBoxCollider": false,
      "DestroyExistingRenderer": true,
      "MeshName": "HE_Spindle_Inner.obj",
      "ColliderMeshName": null,
      "MeshMaterialName": "HE_Main"
    },
    {
      "SubOverrideName": "m_BF_Laser_Melee_212_Base",
      "MakeBoxCollider": false,
      "DestroyExistingRenderer": true
    },
    {
      "SubOverrideName": "HE_Plasma_Beam_Mount",
      "MakeBoxCollider": true,
      "DestroyExistingRenderer": true,
      "MeshName": "HE_Plasma_Turret_Mount.obj",
      "MeshMaterialName": "HE_Main",
      "SubPosition": {
        "x": 0,
        "y": 0,
        "z": 0
      }
    },
    {
      "SubOverrideName": "m_BF_Laser_Melee_212_Laser",
      "MakeBoxCollider": true,
      "DestroyExistingRenderer": true,
      "MeshName": "HE_Plasma_Barrel.obj",
      "MeshMaterialName": "HE_Main"
    },
    {
      "SubOverrideName": "_gimbalBase",
      "MakeBoxCollider": false,
      "SubPosition": {
        "x": 2,
        "y": -0.5,
        "z": 2
      }
    },
    {
      "SubOverrideName": "_gimbalElev",
      "MakeBoxCollider": false,
      "SubPosition": {
        "x": 0,
        "y": 2.0,
        "z": -1.0
      }
    }
  ],

  "Deserializer": {
    "GameObject|_gimbalBase": {
      "GimbalAimer": {
        "rotationAxis": 2,
        "rotationLimits": [-0, 0]
      },
      "GameObject|_gimbalElev": {
        "GimbalAimer": {
          "rotationAxis": 1,
          "rotationLimits": [-75, 12]
        },
        "GameObject|m_BF_Laser_Melee_212_Laser": {
          "UnityEngine.Transform": {
            "localEulerAngles": { "x": 0, "y": 0, "z": 0 },
            "localPosition": { "x": 0, "y": 0, "z": 0 }
          }
        },
        "GameObject|particles": {
            "UnityEngine.Transform": {
                "localPosition": { "x": 0, "y": 0, "z": 3.0 }
            },
            // Plasma beam particles #1
            "GameObject|UselessName": {
                "Reference|BF_Laser_Melee_212/_gimbalBase/_gimbalElev/_barrel/_beam/BeamWeapon.m_BeamParticlesPrefab/ParticleSystem.": {
                "startDelay": 0.0,
                "loop": true,
                "playOnAwake": false,
                "maxParticles": 1000,
                "startLifetime": 0.5,
                //"duration": 1.0,
                    //"playbackSpeed": 1.0,
                //"emissionRate": 20,
                //"startSpeed": 0.5,
                "main": {
                    "startSize3D": true,
                    "startSizeX": {
                    "mode": 3,
                        // 0: Use a single constant for the MinMaxCurve.
                        // 1: Use a single curve for the MinMaxCurve.
                        // 2: Use a random value between 2 curves for the MinMaxCurve.
                        // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": null,
                    "constantMax": 0.5,
                    "constantMin": 0.5,
                    "constant": 1.0
                    },
                    "startSizeXMultiplier": 0.25,
                    "startSizeY": {
                    "mode": 3,
                        // 0: Use a single constant for the MinMaxCurve.
                        // 1: Use a single curve for the MinMaxCurve.
                        // 2: Use a random value between 2 curves for the MinMaxCurve.
                        // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": null,
                    "constantMax": 1.0,
                    "constantMin": 0.7,
                    "constant": 1.0
                    },
                    "startSizeYMultiplier": 0.5,
                    "startSizeZ": {
                    "mode": 0,
                        // 0: Use a single constant for the MinMaxCurve.
                        // 1: Use a single curve for the MinMaxCurve.
                        // 2: Use a random value between 2 curves for the MinMaxCurve.
                        // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 1.0
                    }
                },
                "startColor": {
                    "r": 1.0,
                    "g": 0.8,
                    "b": 0.5,
                    "a": 1.0
                },
                "emission": {
                    "rateOverTimeMultiplier": 240
                },
                "collision": {
                    "enabled": true,
                    "type": 1,
                    "mode": 0,
                    "maxKillSpeed": 0.0,
                    "minKillSpeed": 1001.0,
                    "bounce": {
                    "mode": 0,
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 0.0,
                    "curve": null
                    },
                    "quality": 0
                },
                "shape": {
                    "shapeType": 8,
                    //0: Sphere
                    //1: Hemisphere
                    //2: Cone
                    "angle": 0,
                    "length": 2,
                    //3: Box
                    "box": {
                    "x": 1.0,
                    "y": 1.0,
                    "z": 1.0
                    },

                    //4: Mesh

                    //5: ConeVolume

                    //6: Circle

                    //7: SingleSidedEdge

                    //8: MeshRenderer
                    "meshRenderer": null,

                    //9: SkinnedMeshRenderer
                    "skinnedMeshRenderer": null,

                    //10: BoxShell
                    //11: BoxEdge
                    //12: Donut
                    
                    "sphericalDirectionAmount": 0,

                    "rotation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                    },
                    "position": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 4.0
                    },

                    "scale": {
                    "x": 0.1,
                    "y": 0.1,
                    "z": 1.0
                    },
                    "randomDirectionAmount": 0.0,
                    "randomPositionAmount": 1.0,

                    "useMeshColors": false,

                    "normalOffset": 0.0
                },
                "sizeOverLifetime": {
                    "enabled": true,
                    "sizeMultiplier": 1.0,
                    "x": {
                    "mode": 1,
                    "curveMultiplier": 1.0,
                    "curveMax": null,
                    "curveMin": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 0.0,
                    "curve": {
                        "keys": [
                        {
                            "time": 0.0,
                            "value": 0.1,
                            "inTangent": 12.5641022,
                            "outTangent": 12.5641022,
                            "inWeight": 0.333333343,
                            "outWeight": 0.04310507,
                            "weightedMode": 0,
                            "tangentMode": 0
                        },
                        {
                            "time": 0.197061688,
                            "value": 0.3,
                            "inTangent": 0.0,
                            "outTangent": 0.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                        },
                        {
                            "time": 0.992126,
                            "value": 0.1,
                            "inTangent": -3.94877648,
                            "outTangent": -3.94877648,
                            "inWeight": 0.0503641,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                        }
                        ],
                        "preWrapMode": 1,
                        "postWrapMode": 2
                    }
                    },
                    "xMultiplier": 1.0,
                    "y": {
                    "mode": 1,
                    "curveMultiplier": 1.0,
                    "curveMax": null,
                    "curveMin": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 0.0,
                    "curve": {
                        "keys": [
                        {
                            "time": 0.0,
                            "value": 2.0,
                            "inTangent": 0.0,
                            "outTangent": 1.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                        },
                        {
                            "time": 1.0,
                            "value": 5.0,
                            "inTangent": 1.0,
                            "outTangent": 0.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                        }
                        ],
                        "preWrapMode": 1,
                        "postWrapMode": 3
                    }
                    },
                    "yMultiplier": 1.0,
                    "z": {
                    "mode": 1,
                    "curveMultiplier": 1.0,
                    "curveMax": null,
                    "curveMin": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 0.0,
                    "curve": {
                        "keys": [
                        {
                            "time": 0.0,
                            "value": 0.5,
                            "inTangent": 0.0,
                            "outTangent": 1.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                        },
                        {
                            "time": 1.0,
                            "value": 1.0,
                            "inTangent": 1.0,
                            "outTangent": 0.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                        }
                        ],
                        "preWrapMode": 1,
                        "postWrapMode": 3
                    }
                    },
                    "zMultiplier": 1.0,
                    "separateAxes": true
                },
                "velocityOverLifetime": {
                    "enabled": false
                },
                "startSpeed": 1000
                },
                "Reference|BF_Laser_Melee_212/_gimbalBase/_gimbalElev/_barrel/_beam/BeamWeapon.m_BeamParticlesPrefab/ParticleSystemRenderer.": {

                }
            }
        },
        "GameObject|_barrel": {
          "UnityEngine.Transform": {
            "localPosition": { "x": 0, "y": 0, "z": 1.15 }
          },
          "GameObject|HE_Spindle_Inner": {
            "UnityEngine.Transform": {
              "localPosition": { "x": 0, "y": 0, "z": 0.15 }
            }
          },
          "Spinner": {
            "m_Speed": 3.0,
            "m_SpinUpTime": 0.0
          },
          "GameObject|_muzzleFlash": {
            "GameObject|_light": {
              "UnityEngine.Light": {
                "color": {
                  "r": 1.0,
                  "g": 0,
                  "b": 0,
                  "a": 1.0
                }
              }
            }
          },
          "GameObject|_beam": {
            "UnityEngine.Transform": {
              "localEulerAngles": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "localPosition": { "x": 0, "y": 0, "z": 1.65 }
            },
            "LineRenderer": {
              "colorGradient": {
                "alphaKeys": [
                  {
                    "alpha": 1.0,
                    "time": 0.0
                  },
                  {
                    "alpha": 1.0,
                    "time": 1.0
                  }
                ],
                "colorKeys": [
                  {
                    "color": {
                      "r": 1.0,
                      "g": 0.8,
                      "b": 0.8
                    },
                    "time": 0.0
                  },
                  {
                    "color": {
                      "r": 1.0,
                      "g": 0.6,
                      "b": 0.6
                    },
                    "time": 1.0
                  }
                ]
              },
              "startColor": {
                "r": 1.0,
                "g": 0.3,
                "b": 0.3,
                "a": 1.0
              },
              "endColor": {
                "r": 1.0,
                "g": 0.3,
                "b": 0.3,
                "a": 1.0
              },
              "startWidth": 1.5,
              "endWidth": 1.5,
              "textureMode": 1,
							"numCapVertices": 8,
              "loop": false,
              "material": {
                "mainTextureScale": {
                  "x": 1.0,
                  "y": 1.0
                },
                "mainTexture": "Hyperion_Beam.png"
              }
            },
            "BeamWeapon": {
              "m_DamagePerSecond": 3000,
              "m_Range": 500, // 200
              "m_DamageType": 2,
              // "m_BeamParticles": "/_gimbalBase/_gimbalElev/_barrel/_beam/_beamParticles/ParticleSystem.",
              //"m_BeamParticlesPrefab": "Reference|HE_PlasmaTeeth_311/_barrel/_beam/BeamWeapon.m_BeamParticlesPrefab." 
              //"m_BeamParticlesPrefab": "/_gimbalBase/_gimbalElev/_barrel/particles/BF_LaserBeam_Emission/ParticleSystem."
              "m_BeamParticlesPrefab": "/_gimbalBase/_gimbalElev/particles/BF_LaserBeam_Emission/ParticleSystem.",
              
              // "m_BeamParticlesPrefab": "/_gimbalBase/_gimbalElev/particles/FX_SemiCircle/ParticleSystem.",
              // "m_BeamParticlesPrefab": null,
              
              // "m_HitParticlesPrefab": "Reference|HE_PlasmaTeeth_311/_barrel/_beam/BeamWeapon.m_HitParticlesPrefab."
            }
          },
          "GameObject|_bulletSpawn": {
            "UnityEngine.Transform": {
              "localEulerAngles": {
                "x": 0.0,
                "y": 0.0,
                "z": 0.0
              },
              "localPosition": { "x": 0, "y": 0, "z": 1.75 }
            }
          },
          
          "CannonBarrel": {
            "particles": [
              // "/_gimbalBase/_gimbalElev/particles/fx_Lightning/ParticleSystem."
              //"Reference|HE_RailGunTurret(213).FireData.m_BulletPrefab/FX_SemiCircle/ParticleSystem.",
            ]
          }
        },
        "GameObject|_outer": {
          "UnityEngine.Transform": {
            "localEulerAngles": { "x": 0, "y": 180, "z": 0 },
            "localPosition": { "x": 0, "y": 0, "z": 0 }
          },
          "GameObject|HE_Spindle_Outer": {
            "UnityEngine.Transform": {
              "localEulerAngles": { "x": 180, "y": 0, "z": 0 },
              "localPosition": { "x": 0, "y": 0, "z": -1.25 }
            }
          },
          "Spinner": {
            "m_Speed": 1.0,
            "m_SpinUpTime": 0.0,
            "m_RotationAxis": {
              "axis": 2
            },
            "m_SteerAxis": {
              "axis": 1
            },
          }
        },
        "Reference|GC_PlasmaCutter_Auto_434/_gimbalBase/_gimbalElev/_barrel": {
          "UnityEngine.Transform": {
            "localEulerAngles": { "x": 0, "y": 0, "z": 0 },
            "localPosition": { "x": 0, "y": 0, "z": 2.5 }
          },
          
          "GameObject|_muzzleFlash": {
            "UnityEngine.Transform": {
              "localEulerAngles": { "x": 0, "y": 180, "z": 0 },
              "localPosition": { "x": 0, "y": 0, "z": -1.35 }
            },
            "GameObject|_light": {
              "UnityEngine.Light": {
                "color": {
                  "r": 1.0,
                  "g": 0,
                  "b": 0,
                  "a": 1.0
                }
              }
            },
            "Reference|HE_RailGunTurret(213).FireData.m_BulletPrefab/FX_SemiCircle": {
              "UnityEngine.Transform": {
                "localEulerAngles": { "x": 180, "y": 0, "z": 0 },
                "localPosition": { "x": 0, "y": 0, "z": -1.75 }
              },
              "ParticleSystem": {
                "main": {
                  "startColor": {
                    "mode": 2,
                    // 0: Use a single color for the MinMaxGradient
                    // 1: Use a single color gradient for the MinMaxGradient.
                    // 2: Use a random value between 2 colors for the MinMaxGradient.
                    // 3: Use a random value between 2 color gradients for the MinMaxGradient.
                    // 4: Define a list of colors in the MinMaxGradient, to be chosen from at random.
                    "color": {
                      "r": 1.0,
                      "g": 0,
                      "b": 0,
                      "a": 1.0
                    },
                    "colorMin": {
                      "r": 1.0,
                      "g": 0.5,
                      "b": 0.5,
                      "a": 1.0
                    },
                    "colorMax": {
                      "r": 1.0,
                      "g": 0,
                      "b": 0,
                      "a": 1.0
                    },
                    "gradient": {
                      "mode": 0,
                      "alphaKeys": [
                        {
                          "alpha": 1.0,
                          "time": 0.0
                        },
                        {
                          "alpha": 0.5,
                          "time": 0.7
                        },
                        {
                          "alpha": 0.3,
                          "time": 1.0
                        }
                      ],
                      "colorKeys": [
                        {
                          "color": {
                            "r": 1.0,
                            "g": 0.6,
                            "b": 0.8
                          },
                          "time": 0.0
                        },
                        {
                          "color": {
                            "r": 1.0,
                            "g": 0.2,
                            "b": 0.4
                          },
                          "time": 0.7
                        },
                        {
                          "color": {
                            "r": 1.0,
                            "g": 0.0,
                            "b": 0.0
                          },
                          "time": 1.0
                        }
                      ]
                    },
                    "gradientMin": null,
                    "gradientMax": null
                  },
                  "startSize": {
                    "mode": 0,
                      // 0: Use a single constant for the MinMaxCurve.
                      // 1: Use a single curve for the MinMaxCurve.
                      // 2: Use a random value between 2 curves for the MinMaxCurve.
                      // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 1.5
                  },
                  "simulationSpace": 0,
                  // Local
                  // World
                  // Custom: use whatever is specified in ParticleSystem.MainModule.customSimulationSpace.
                  "playOnAwake": true
                },
                "emission": {
                  "rateOverTimeMultiplier": 60.0
                },
                "velocityOverLifetime": {
                  "enabled": true,
                  "space": 2, // which transform are velocities relative to?
                    // Local
                    // World
                    // Custom: use whatever is specified in ParticleSystem.MainModule.customSimulationSpace.
                    "z": {
                      "mode": 1.0,
                      // 0: Use a single constant for the MinMaxCurve.
                      // 1: Use a single curve for the MinMaxCurve.
                      // 2: Use a random value between 2 curves for the MinMaxCurve.
                      // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                      "curveMultiplier": 0.0,
                      "curveMax": null,
                      "curveMin": null,
                      "curve": {
                        "keys": [ // array of KeyFrame
                          {
                            // "inTangent"
                            // "inWeight"
                            // "outTangent"
                            // "outWeight"
                            "time": 0.0,
                            "value": 0.0
                            // "weightedMode": Sets which weights to use when calculating curve segments.
                              // None: Exclude both inWeight or outWeight when calculating curve segments.
                              // In: Include inWeight when calculating the previous curve segment.
                              // Out: Include outWeight when calculating the next curve segment.
                              // Both: Include inWeight and outWeight when calculating curve segments.
                          },
                          {
                            "time": 1.0,
                            "value": 10.0
                          }
                        ],
                        // Both inherit from WrapMode:
                        // 0: Once: When time reaches the end of the animation clip, the clip will automatically stop playing and time will be reset to beginning of the clip.
                        // 1: Loop: When time reaches the end of the animation clip, time will continue at the beginning.
                        // 2: PingPong: When time reaches the end of the animation clip, time will ping pong back between beginning and end.
                        // 3: Default: Reads the default repeat mode set higher up.
                        // 4: ClampForever: Plays back the animation. When it reaches the end, it will keep playing the last frame and never stop playing.
                        "postWrapMode": 1,
                        "preWrapMode": 3
    
                        // length [readOnly]
                      }
                    },
                    "zMultiplier": 80,
                    "y": {
                      "mode": 0,
                      // 0: Use a single constant for the MinMaxCurve.
                      // 1: Use a single curve for the MinMaxCurve.
                      // 2: Use a random value between 2 curves for the MinMaxCurve.
                      // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                      "curveMultiplier": 0.0,
                      "curveMax": null,
                      "curveMin": null,
                      "curve": null,
                      "constantMax": 0.0,
                      "constantMin": 0.0,
                      "constant": 0.0
                    },
                    "yMultiplier": 0.0,
                    "x": {
                      "mode": 0,
                      // 0: Use a single constant for the MinMaxCurve.
                      // 1: Use a single curve for the MinMaxCurve.
                      // 2: Use a random value between 2 curves for the MinMaxCurve.
                      // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                      "curveMultiplier": 0.0,
                      "curveMax": null,
                      "curveMin": null,
                      "curve": null,
                      "constantMax": 0.0,
                      "constantMin": 0.0,
                      "constant": 0.0
                    },
                    "xMultiplier": 0.0
                },
                "rotationOverLifetime": {
                  // Must specify either exact angle, or curve for rotation to happen
                  "enabled": true,
                  "separateAxes": true,
                  "z": {
                    "mode": 1.0,
                    // 0: Use a single constant for the MinMaxCurve.
                    // 1: Use a single curve for the MinMaxCurve.
                    // 2: Use a random value between 2 curves for the MinMaxCurve.
                    // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": {
                      "keys": [ // array of KeyFrame
                        {
                          // "inTangent"
                          // "inWeight"
                          // "outTangent"
                          // "outWeight"
                          "time": 0.0,
                          "value": 0.0
                          // "weightedMode": Sets which weights to use when calculating curve segments.
                            // None: Exclude both inWeight or outWeight when calculating curve segments.
                            // In: Include inWeight when calculating the previous curve segment.
                            // Out: Include outWeight when calculating the next curve segment.
                            // Both: Include inWeight and outWeight when calculating curve segments.
                        },
                        {
                          "time": 1.0,
                          "value": 10.0
                        }
                      ],
                      // Both inherit from WrapMode:
                      // 0: Once: When time reaches the end of the animation clip, the clip will automatically stop playing and time will be reset to beginning of the clip.
                      // 1: Loop: When time reaches the end of the animation clip, time will continue at the beginning.
                      // 2: PingPong: When time reaches the end of the animation clip, time will ping pong back between beginning and end.
                      // 3: Default: Reads the default repeat mode set higher up.
                      // 4: ClampForever: Plays back the animation. When it reaches the end, it will keep playing the last frame and never stop playing.
                      "postWrapMode": 1,
                      "preWrapMode": 3
  
                      // length [readOnly]
                    }
                  },
                  "zMultiplier": -3,
                  "y": {
                    "mode": 0,
                    // 0: Use a single constant for the MinMaxCurve.
                    // 1: Use a single curve for the MinMaxCurve.
                    // 2: Use a random value between 2 curves for the MinMaxCurve.
                    // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 0.0
                  },
                  "yMultiplier": 0.0,
                  "x": {
                    "mode": 0,
                    // 0: Use a single constant for the MinMaxCurve.
                    // 1: Use a single curve for the MinMaxCurve.
                    // 2: Use a random value between 2 curves for the MinMaxCurve.
                    // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 0.0
                  },
                  "xMultiplier": 0.0
                },
                "startLifetime": 0.5
              },
              "ParticleSystemRenderer": {
                "alignment": 2
              },
              "PlayParticlesOnFirstUpdate": null
            },
            "Duplicate|FX_SemiCircle": {
              "UnityEngine.Transform": {
                "localEulerAngles": { "x": 0, "y": 0, "z": 0 },
                "localPosition": { "x": 0, "y": 0, "z": -1.75 }
              },
              "ParticleSystem": {
                "main": {
                  "startColor": {
                    "mode": 2,
                    // 0: Use a single color for the MinMaxGradient
                    // 1: Use a single color gradient for the MinMaxGradient.
                    // 2: Use a random value between 2 colors for the MinMaxGradient.
                    // 3: Use a random value between 2 color gradients for the MinMaxGradient.
                    // 4: Define a list of colors in the MinMaxGradient, to be chosen from at random.
                    "color": {
                      "r": 1.0,
                      "g": 0,
                      "b": 0,
                      "a": 1.0
                    },
                    "colorMin": {
                      "r": 1.0,
                      "g": 0.5,
                      "b": 0.5,
                      "a": 1.0
                    },
                    "colorMax": {
                      "r": 1.0,
                      "g": 0,
                      "b": 0,
                      "a": 1.0
                    },
                    "gradient": {
                      "mode": 0,
                      "alphaKeys": [
                        {
                          "alpha": 1.0,
                          "time": 0.0
                        },
                        {
                          "alpha": 0.5,
                          "time": 0.7
                        },
                        {
                          "alpha": 0.3,
                          "time": 1.0
                        }
                      ],
                      "colorKeys": [
                        {
                          "color": {
                            "r": 1.0,
                            "g": 0.6,
                            "b": 0.8
                          },
                          "time": 0.0
                        },
                        {
                          "color": {
                            "r": 1.0,
                            "g": 0.2,
                            "b": 0.4
                          },
                          "time": 0.7
                        },
                        {
                          "color": {
                            "r": 1.0,
                            "g": 0.0,
                            "b": 0.0
                          },
                          "time": 1.0
                        }
                      ]
                    },
                    "gradientMin": null,
                    "gradientMax": null
                  },
                  "startSize": {
                    "mode": 0,
                      // 0: Use a single constant for the MinMaxCurve.
                      // 1: Use a single curve for the MinMaxCurve.
                      // 2: Use a random value between 2 curves for the MinMaxCurve.
                      // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 1.5
                  },
                  "simulationSpace": 0,
                  // Local
                  // World
                  // Custom: use whatever is specified in ParticleSystem.MainModule.customSimulationSpace.
                  "playOnAwake": true
                },
                "velocityOverLifetime": {
                  "enabled": false
                }
              },
              "ParticleSystemRenderer": {
                "alignment": 0
              }
            },
            "Reference|GC_SamSite_Charger_444/fx_Lightning":{
              "GameObject|Light_Point": null,
              "UnityEngine.Transform": {
                "localEulerAngles": { "x": 90, "y": 0, "z": 0 },
                "localPosition": { "x": 0, "y": 0, "z": -1.65 },
                "localScale": { "x": 0.25, "y": 0.25, "z": 0.25 }
              },
              "ParticleSystem": {
                "main": {
                  "startColor": {
                    "mode": 2,
                    // 0: Use a single color for the MinMaxGradient
                    // 1: Use a single color gradient for the MinMaxGradient.
                    // 2: Use a random value between 2 colors for the MinMaxGradient.
                    // 3: Use a random value between 2 color gradients for the MinMaxGradient.
                    // 4: Define a list of colors in the MinMaxGradient, to be chosen from at random.
                    "color": {
                      "r": 1.0,
                      "g": 0,
                      "b": 0,
                      "a": 1.0
                    },
                    "colorMin": {
                      "r": 1.0,
                      "g": 0.3,
                      "b": 0.1,
                      "a": 1.0
                    },
                    "colorMax": {
                      "r": 1.0,
                      "g": 0.8,
                      "b": 0.4,
                      "a": 1.0
                    },
                    "gradient": {
                      "mode": 0,
                      "alphaKeys": [
                        {
                          "alpha": 1.0,
                          "time": 0.0
                        },
                        {
                          "alpha": 0.5,
                          "time": 0.7
                        },
                        {
                          "alpha": 0.3,
                          "time": 1.0
                        }
                      ],
                      "colorKeys": [
                        {
                          "color": {
                            "r": 1.0,
                            "g": 0.8,
                            "b": 0.4
                          },
                          "time": 0.0
                        },
                        {
                          "color": {
                            "r": 1.0,
                            "g": 0.8,
                            "b": 0.4
                          },
                          "time": 0.7
                        },
                        {
                          "color": {
                            "r": 1.0,
                            "g": 0.8,
                            "b": 0.4
                          },
                          "time": 1.0
                        }
                      ]
                    },
                    "gradientMin": null,
                    "gradientMax": null
                  },
                  "startSize": {
                    "mode": 3,
                      // 0: Use a single constant for the MinMaxCurve.
                      // 1: Use a single curve for the MinMaxCurve.
                      // 2: Use a random value between 2 curves for the MinMaxCurve.
                      // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": null,
                    "constantMax": 1.0,
                    "constantMin": 0.3,
                    "constant": 0.2
                  },
                  "simulationSpace": 0,
                  // Local
                  // World
                  // Custom: use whatever is specified in ParticleSystem.MainModule.customSimulationSpace.
                  "playOnAwake": true
                },
                "shape": {
                  "shapeType": 2,
                  //0: Sphere
                  //1: Hemisphere
                  //2: Cone
                  "angle": 20,
                  "length": 2,
                  //3: Box
                  "box": {
                    "x": 1.0,
                    "y": 1.0,
                    "z": 1.0
                  },

                  //4: Mesh

                  //5: ConeVolume

                  //6: Circle

                  //7: SingleSidedEdge

                  //8: MeshRenderer
                  "meshRenderer": null,

                  //9: SkinnedMeshRenderer
                  "skinnedMeshRenderer": null,

                  //10: BoxShell
                  //11: BoxEdge
                  //12: Donut
                  
                  "sphericalDirectionAmount": 0,

                  "rotation": {
                    "x": 90.0,
                    "y": 0.0,
                    "z": 0.0
                  },

                  "radius": 0.95,

                  "alignToDirection": false
                },
                "emission": {
                  "rateOverTimeMultiplier": 50
                },
                "velocityOverLifetime": {
                  "enabled": false
                },
                "startSpeed": 20,
                "startLifetime": 1.0,
                "noise": {
                  "enabled": true,
                  "frequency": 500,
                  "strength": {
                    "mode": 0,
                    "constant": 1.0,
                    "constantMin": 0.0,
                    "constantMax": 1.0,
                    "curve": null,
                    "curveMin": null,
                    "curveMax": null
                  },
                  "strengthMultiplier": 10.0,

                  "scrollSpeed": {
                    "mode": 0,
                    "constant": 1.0,
                    "constantMin": 0.0,
                    "constantMax": 1.0,
                    "curve": null,
                    "curveMin": null,
                    "curveMax": null
                  },
                  "scrollSpeedMultiplier": 1.0,

                  "damping": true,

                  "quality": 2,

                  "octaveCount": 2,
                  "octaveMultiplier": 0.5,
                  "octaveScale": 2,

                  "remapenabled": false,

                  "positionAmount": {
                    "mode": 0,
                    "constant": 10.0,
                    "constantMin": 0.0,
                    "constantMax": 1.0,
                    "curve": null,
                    "curveMin": null,
                    "curveMax": null
                  }
                },
                "trails": {
                  "enabled": true,
                  "inheritParticleColor": true,
                  "lifetime": {
                    "mode": 0,
                    "constant": 1.0,
                    "constantMin": 0.0,
                    "constantMax": 1.0,
                    "curve": null,
                    "curveMax": null,
                    "curveMin": null
                  },
                  "lifetimeMultiplier": 1.0,
                  "sizeAffectsLifetime": false,

                  "minVertexDistance": 0.01,

                  "widthOverTrail": {
                    "mode": 0,
                    "constant": 1.0,
                    "constantMin": 0.0,
                    "constantMax": 1.0,
                    "curve": null,
                    "curveMax": null,
                    "curveMin": null
                  },
                  "widthOverTrailMultiplier": 0.3,
                  "sizeAffectsWidth": false,

                  "ribbonCount": 1,

                  "worldSpace": false,

                  "textureMode": 0,

                  "mode": 0,
                  "dieWithParticles": true,

                  "colorOverLifetime": {
                    "mode": 0,
                    "color": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0,
                      "a": 1.0
                    },
                    "colorMin": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0,
                      "a": 1.0
                    },
                    "colorMax": {
                      "r": 1.0,
                      "g": 1.0,
                      "b": 1.0,
                      "a": 1.0
                    },
                    "gradient": null,
                    "gradientMin": null,
                    "gradientMax": null
                  }

                }
              },
              "ParticleSystemRenderer": {
                "trailMaterial": "Reference|HE_PlasmaTeeth_311/_barrel/_beam/BeamWeapon.m_BeamParticlesPrefab/ParticleSystemRenderer.material.",
                "alignment": 2,
                "renderMode": 5
              }
            },
            "GameObject|UselessName": {
              "UnityEngine.Transform": {
                "localEulerAngles": { "x": 0, "y": 180, "z": 0 },
                "localPosition": { "x": 0, "y": 0, "z": 3.0 }
              },
              "Reference|HE_PlasmaTeeth_311/_barrel/_beam/BeamWeapon.m_BeamParticlesPrefab/ParticleSystem.": {
                //"Reference|BF_Laser_Melee_212/_gimbalBase/_gimbalElev/_barrel/_beam/BeamWeapon.transform.gameObject/BF_LaserBeam_Emission.": {
                "startLifetime": 0.5,
                "startDelay": 0.0,
                "main": {
                  "startSize": {
                    "mode": 0,
                      // 0: Use a single constant for the MinMaxCurve.
                      // 1: Use a single curve for the MinMaxCurve.
                      // 2: Use a random value between 2 curves for the MinMaxCurve.
                      // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                    "curveMultiplier": 0.0,
                    "curveMax": null,
                    "curveMin": null,
                    "curve": null,
                    "constantMax": 1.0,
                    "constantMin": 0.3,
                    "constant": 0.5
                  }
                },
                "emission": {
                  "rateOverTimeMultiplier": 400.0
                },
                "shape": {
                  "shapeType": 8,
                  //0: Sphere
                  //1: Hemisphere
                  //2: Cone
                  "angle": 0,
                  "radius": 0,
                  "length": 2,
                  //3: Box
                  "box": {
                    "x": 1.0,
                    "y": 1.0,
                    "z": 1.0
                  },
  
                  //4: Mesh
  
                  //5: ConeVolume
  
                  //6: Circle
  
                  //7: SingleSidedEdge
  
                  //8: MeshRenderer
                  "meshRenderer": null,
  
                  //9: SkinnedMeshRenderer
                  "skinnedMeshRenderer": null,
  
                  //10: BoxShell
                  //11: BoxEdge
                  //12: Donut
                  
                  "sphericalDirectionAmount": 0,
  
                  "rotation": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 0.0
                  },
                  "position": {
                    "x": 0.0,
                    "y": 0.0,
                    "z": 4.0
                  },
  
                  "scale": {
                    "x": 1.0,
                    "y": 1.0,
                    "z": 1.0
                  },
                  "randomDirectionAmount": 0.0,
                  "randomPositionAmount": 0.0,
  
                  "useMeshColors": false,
  
                  "normalOffset": 0.0
                },
                "sizeOverLifetime": {
                  "enabled": true,
                  "sizeMultiplier": 1.0,
                  "x": {
                    "mode": 1,
                    "curveMultiplier": 1.5,
                    "curveMax": null,
                    "curveMin": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 0.0,
                    "curve": {
                      "keys": [
                        {
                          "time": 0.0,
                          "value": 1.0,
                          "inTangent": 0.0,
                          "outTangent": 1.0,
                          "inWeight": 0.333333343,
                          "outWeight": 0.333333343,
                          "weightedMode": 0,
                          "tangentMode": 0
                        },
                        {
                          "time": 1.0,
                          "value": 0.4,
                          "inTangent": 1.0,
                          "outTangent": 0.0,
                          "inWeight": 0.333333343,
                          "outWeight": 0.333333343,
                          "weightedMode": 0,
                          "tangentMode": 0
                        }
                      ],
                      // "length": 2,
                      "preWrapMode": 8,
                      "postWrapMode": 8
                    }
                  },
                  "xMultiplier": 1.5,
                  "y": {
                    "mode": 1,
                    "curveMultiplier": 1.0,
                    "curveMax": null,
                    "curveMin": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 0.0,
                    "curve": {
                      "keys": [
                        {
                          "time": 0.0,
                          "value": 1.0,
                          "inTangent": 0.0,
                          "outTangent": 1.0,
                          "inWeight": 0.333333343,
                          "outWeight": 0.333333343,
                          "weightedMode": 0,
                          "tangentMode": 0
                        },
                        {
                          "time": 1.0,
                          "value": 0.4,
                          "inTangent": 1.0,
                          "outTangent": 0.0,
                          "inWeight": 0.333333343,
                          "outWeight": 0.333333343,
                          "weightedMode": 0,
                          "tangentMode": 0
                        }
                      ],
                      // "length": 2,
                      "preWrapMode": 8,
                      "postWrapMode": 8
                    }
                  },
                  "yMultiplier": 1.0,
                  "z": {
                    "mode": 1,
                    "curveMultiplier": 1.0,
                    "curveMax": null,
                    "curveMin": null,
                    "constantMax": 0.0,
                    "constantMin": 0.0,
                    "constant": 0.0,
                    "curve": {
                      "keys": [
                        {
                          "time": 0.0,
                          "value": 1.0,
                          "inTangent": 0.0,
                          "outTangent": 1.0,
                          "inWeight": 0.333333343,
                          "outWeight": 0.333333343,
                          "weightedMode": 0,
                          "tangentMode": 0
                        },
                        {
                          "time": 1.0,
                          "value": 1.0,
                          "inTangent": 1.0,
                          "outTangent": 0.0,
                          "inWeight": 0.333333343,
                          "outWeight": 0.333333343,
                          "weightedMode": 0,
                          "tangentMode": 0
                        }
                      ],
                      // "length": 2,
                      "preWrapMode": 8,
                      "postWrapMode": 8
                    }
                  },
                  "zMultiplier": 1.0,
                  "separateAxes": true
                },
                "maxParticles": 1000,
                "loop": true
              },
              "Reference|HE_PlasmaTeeth_311/_barrel/_beam/BeamWeapon.m_BeamParticlesPrefab/ParticleSystemRenderer.": {}
            }
          },
          "GameObject|_beam": {
            "UnityEngine.Transform": {
              "localEulerAngles": { "x": 0, "y": 0, "z": 0 },
              "localPosition": { "x": 0, "y": 0, "z": 3.0 }
            },
            "BeamWeapon": {
              "m_DamagePerSecond": 5000,
              "m_Range": 100,
              "m_DamageType": 7
              
              // "m_BeamLine": null,
              // "m_BeamParticlesPrefab": "/_gimbalBase/_gimbalElev/particles/BF_LaserBeam_Emission/ParticleSystem."
              // "m_BeamParticlesPrefab": "/_gimbalBase/_gimbalElev/particles/FX_SemiCircle/ParticleSystem."
            }
          },
          "GameObject|_bulletSpawn": {
            "UnityEngine.Transform": {
              "localEulerAngles": { "x": 0, "y": 0, "z": 0 },
              "localPosition": { "x": 0, "y": 0, "z": 1.35 }
            }
          },
          "CannonBarrel": {
						"beamWeapon": {
              "Instantiate|m_BeamParticlesPrefab": {
								"UnityEngine.Transform": {
									"gameObject": {
										"active": true
                  },
								},
								"GameObject|FX_Sparkles": null,
								"UnityEngine.ParticleSystem": {
                  //"Reference|BF_Laser_Melee_212/_gimbalBase/_gimbalElev/_barrel/_beam/BeamWeapon.transform.gameObject/BF_LaserBeam_Emission.": {
                  "emission": {
                    "type": 0, // time or distance?
                    "enabled": true,
                    "rateOverTime": {
                      "mode": 1,
                      // 0: Use a single constant for the MinMaxCurve.
                      // 1: Use a single curve for the MinMaxCurve.
                      // 2: Use a random value between 2 curves for the MinMaxCurve.
                      // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                      "curveMultiplier": 0.0,
                      "curveMax": null,
                      "curveMin": null,
                      "constantMax": 0.0,
                      "constantMin": 0.0,
                      "constant": 0.0,
                      "curve": {
                        "keys": [ // array of KeyFrame
                          {
                            // "inTangent"
                            // "inWeight"
                            // "outTangent"
                            // "outWeight"
                            "time": 0.0,
                            "value": 4.0
                            // "weightedMode": Sets which weights to use when calculating curve segments.
                              // None: Exclude both inWeight or outWeight when calculating curve segments.
                              // In: Include inWeight when calculating the previous curve segment.
                              // Out: Include outWeight when calculating the next curve segment.
                              // Both: Include inWeight and outWeight when calculating curve segments.
                          },
                          {
                            "time": 1.0,
                            "value": 6.0
                          }
                        ],
                        // Both inherit from WrapMode:
                        // 0: Once: When time reaches the end of the animation clip, the clip will automatically stop playing and time will be reset to beginning of the clip.
                        // 1: Loop: When time reaches the end of the animation clip, time will continue at the beginning.
                        // 2: PingPong: When time reaches the end of the animation clip, time will ping pong back between beginning and end.
                        // 3: Default: Reads the default repeat mode set higher up.
                        // 4: ClampForever: Plays back the animation. When it reaches the end, it will keep playing the last frame and never stop playing.
                        "postWrapMode": 1,
                        "preWrapMode": 3
    
                        // length [readOnly]
                      }
                    },
                    "rateOverTimeMultiplier": 120
                  },
                  "main": {
                    "startColor": {
                      "mode": 2,
                      // 0: Use a single color for the MinMaxGradient
                      // 1: Use a single color gradient for the MinMaxGradient.
                      // 2: Use a random value between 2 colors for the MinMaxGradient.
                      // 3: Use a random value between 2 color gradients for the MinMaxGradient.
                      // 4: Define a list of colors in the MinMaxGradient, to be chosen from at random.
                      "color": {
                        "r": 1.0,
                        "g": 0,
                        "b": 0,
                        "a": 1.0
                      },
                      "colorMin": {
                        "r": 1.0,
                        "g": 0.5,
                        "b": 0.5,
                        "a": 1.0
                      },
                      "colorMax": {
                        "r": 1.0,
                        "g": 0,
                        "b": 0,
                        "a": 1.0
                      },
                      "gradient": {
                        "mode": 0,
                        "alphaKeys": [
                          {
                            "alpha": 1.0,
                            "time": 0.0
                          },
                          {
                            "alpha": 0.5,
                            "time": 0.7
                          },
                          {
                            "alpha": 0.3,
                            "time": 1.0
                          }
                        ],
                        "colorKeys": [
                          {
                            "color": {
                              "r": 1.0,
                              "g": 0.6,
                              "b": 0.8
                            },
                            "time": 0.0
                          },
                          {
                            "color": {
                              "r": 1.0,
                              "g": 0.2,
                              "b": 0.4
                            },
                            "time": 0.7
                          },
                          {
                            "color": {
                              "r": 1.0,
                              "g": 0.0,
                              "b": 0.0
                            },
                            "time": 1.0
                          }
                        ]
                      },
                      "gradientMin": null,
                      "gradientMax": null
                    },
                    "maxParticles": 1000,
                    "startRotation3D": true,
                    "simulationSpace": 0,
                    "startSize3D": true,
                    "startSizeX": {
                      "mode": 3,
                        // 0: Use a single constant for the MinMaxCurve.
                        // 1: Use a single curve for the MinMaxCurve.
                        // 2: Use a random value between 2 curves for the MinMaxCurve.
                        // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                      "curveMultiplier": 0.0,
                      "curveMax": null,
                      "curveMin": null,
                      "curve": null,
                      "constantMin": 0.5,
                      "constantMax": 1.0,
                      "constant": 1.0
                    },
                    "startSizeXMultiplier": 1.0,
                    "startSizeY": {
                      "mode": 3,
                        // 0: Use a single constant for the MinMaxCurve.
                        // 1: Use a single curve for the MinMaxCurve.
                        // 2: Use a random value between 2 curves for the MinMaxCurve.
                        // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                      "curveMultiplier": 0.0,
                      "curveMax": null,
                      "curveMin": null,
                      "curve": null,
                      "constantMin": 0.7,
                      "constantMax": 1.0,
                      "constant": 1.0
                    },
                    "startSizeYMultiplier": 4.0,
                    "startSizeZ": {
                      "mode": 0,
                        // 0: Use a single constant for the MinMaxCurve.
                        // 1: Use a single curve for the MinMaxCurve.
                        // 2: Use a random value between 2 curves for the MinMaxCurve.
                        // 3: 	Use a random value between 2 constants for the MinMaxCurve.
                      "curveMultiplier": 0.0,
                      "curveMax": null,
                      "curveMin": null,
                      "curve": null,
                      "constantMax": 0.0,
                      "constantMin": 0.0,
                      "constant": 1.0
                    },
                    "startSizeZMultiplier": 1.0
                    // Local
                    // World
                    // Custom: use whatever is specified in ParticleSystem.MainModule.customSimulationSpace.
                  },
                  "rotationBySpeed": {
                    "enabled": false
                  },
                  "collision": {
                    "enabled": true,
                    "type": 1,
                    "mode": 0,
                    "maxKillSpeed": 0.0,
                    "minKillSpeed": 1001.0,
                    "bounce": {
                      "mode": 0,
                      "curveMultiplier": 0.0,
                      "curveMax": null,
                      "curveMin": null,
                      "constantMax": 0.0,
                      "constantMin": 0.0,
                      "constant": 0.0,
                      "curve": null
                    },
                    "quality": 0
                  },
                  "startLifetime": 0.5,
                  "startSpeed": 1000,
                  "shape": {
                    "normalOffset": 0.0,
                    "position": {
                      "x": 0.0,
                      "y": 0.0,
                      "z": 6.0
                    }
                  },
                  "startDelay": 0.0,
                  "velocityOverLifetime": {
                    "enabled": false
                  },
                  "rotationOverLifetime": {
                    // Must specify either exact angle, or curve for rotation to happen
                    "enabled": false
                  },
                  "sizeOverLifetime": {
                    "sizeMultiplier": 1.0,
                    "enabled": true,
                    "x": {
                      "mode": 1,
                      "curveMultiplier": 1.0,
                      "curveMax": null,
                      "curveMin": null,
                      "constantMax": 0.0,
                      "constantMin": 0.0,
                      "constant": 0.0,
                      "curve": {
                        "keys": [
                          {
                            "time": 0.0,
                            "value": 0.5,
                            "inTangent": 12.5641022,
                            "outTangent": 12.5641022,
                            "inWeight": 0.333333343,
                            "outWeight": 0.04310507,
                            "weightedMode": 0,
                            "tangentMode": 0
                          },
                          {
                            "time": 0.197061688,
                            "value": 1.0,
                            "inTangent": 0.0,
                            "outTangent": 0.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                          },
                          {
                            "time": 0.992126,
                            "value": 0.5,
                            "inTangent": -3.94877648,
                            "outTangent": -3.94877648,
                            "inWeight": 0.0503641,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                          }
                        ],
                        "preWrapMode": 1,
                        "postWrapMode": 2
                      }
                    },
                    "xMultiplier": 1.0,
                    "y": {
                      "mode": 1,
                      "curveMultiplier": 1.0,
                      "curveMax": null,
                      "curveMin": null,
                      "constantMax": 0.0,
                      "constantMin": 0.0,
                      "constant": 0.0,
                      "curve": {
                        "keys": [
                          {
                            "time": 0.0,
                            "value": 2.0,
                            "inTangent": 0.0,
                            "outTangent": 1.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                          },
                          {
                            "time": 1.0,
                            "value": 5.0,
                            "inTangent": 1.0,
                            "outTangent": 0.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                          }
                        ],
                        "preWrapMode": 1,
                        "postWrapMode": 3
                      }
                    },
                    "yMultiplier": 1.0,
                    "z": {
                      "mode": 1,
                      "curveMultiplier": 1.0,
                      "curveMax": null,
                      "curveMin": null,
                      "constantMax": 0.0,
                      "constantMin": 0.0,
                      "constant": 0.0,
                      "curve": {
                        "keys": [
                          {
                            "time": 0.0,
                            "value": 0.5,
                            "inTangent": 0.0,
                            "outTangent": 1.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                          },
                          {
                            "time": 1.0,
                            "value": 1.0,
                            "inTangent": 1.0,
                            "outTangent": 0.0,
                            "inWeight": 0.333333343,
                            "outWeight": 0.333333343,
                            "weightedMode": 0,
                            "tangentMode": 0
                          }
                        ],
                        "preWrapMode": 1,
                        "postWrapMode": 3
                      }
                    },
                    "zMultiplier": 1.0,
                    "separateAxes": true
                  },
                  "playOnAwake": false
                },
                "UnityEngine.ParticleSystemRenderer": {
                  "maxParticleSize": 10,  // serves as a clamp on ParticleSystem
                  "alignment": 0,
                    // View:	Particles face the camera plane.
                    // World:	Particles align with the world.
                    // Local:	Particles align with their local transform.
                    // Facing:	Particles face the eye position.
                    // Velocity:	Particles are aligned to their direction of travel.
                  "renderMode": 1
                    // Billboard: Render particles as billboards facing the active camera. (Default)
                    // Stretch: Stretch particles in the direction of motion.
                    // HorizontalBillboard: Render particles as billboards always facing up along the y-Axis.
                    // VerticalBillboard: Render particles as billboards always facing the player, but not pitching along the x-Axis.
                    // Mesh: Render particles as meshes.
                    // None: Do not render particles.
                }
                //"Reference|HE_RailGunTurret(213).FireData.m_BulletPrefab/FX_SemiCircle/ParticleSystemRenderer.": {
                
              }
            },
            "m_FireSpinner": "/_gimbalBase/_gimbalElev/_outer/Spinner."
          }
        }
      },
      "GameObject|HE_Plasma_Beam_Mount": {}
    },
    "ModuleWeapon": {
      "m_RotateSpeed" : 45
    }
  }
}