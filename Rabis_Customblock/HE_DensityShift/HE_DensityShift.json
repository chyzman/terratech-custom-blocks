{
    "Name": "Hawkeye Glaviton Ballast",
    "Description": "Composed of a strange lead-like alloy which's gravitational influence can be altered through exposure to electromagnetic polarity", //You can make multiple lines with \n
    "ID": 546331,

    "Faction": 5, //GSO = 1|0, GeoCorp = 2, EXP|RR = 3, Venture = 4, HawkEye = 5, Special = 6, BetterFuture = 7
    "Category": 5, //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
    "Grade": 2, //The desired grade minus one
    "Price": 6180, //The price is measured by sum of recipe value times 3
    "HP": 3200, //A GSO one block has 250 health
    "Mass": 16.0,
    //"CenterOfMass": {"x": 0.5, "y": 0.0, "z": 0.5},

    "Fragility": 0.0, //How likely the block is to fall off from being attacked. 2 is two times as likely, 0 is none at all, for example, SCUs do not fall off when attacked
    "DamageableType": 0, // Standard = 0, Armour = 1, Rubber = 2, Volatile = 3, Shield = 4, Wood = 5, Rock = 6
    "Rarity": 0, // Common = 0, Uncommon = 1, Rare = 2

    "Recipe": "5, 5, 5, 5, 5, 5, 7, 7, 7, 7, 7, 7, 32, 45, 45, 59 " ,

    //"DropFromCrates": false, // No change = true
    //"PairedBlock": 534968, // ID of paired block (Can be used to drop 2 wheels)

    "IconName": "HE_DensityShift.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named

    "MeshName": "HE_DensityShift.obj", //FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

    /*  EITHER  */
    "MeshTextureName": null, //FILE Name of image for texture, such as "texture.png". File can be anywhere and should be uniquely named
    //"MeshGlossTextureName": null, //Black white transparency image for the shine. Opaque black looks like rough plastic or rubber, Opaque white looks like glossed mirror.
    //"MeshEmissionTextureName": null, //Texture like the first, except is for illumination of parts of the model for things like night. Black is "off", the brighter it is the more it shows. Think LEDs
    /*  OR  */
    "MeshMaterialName": "HE_Main", //Name of one of the GAME'S materials to use, such as "Corp_Main", "GSO_Main", "GC_Main", "VEN_Main", "BF_Main", and "HE_Main",. This material flashes and everything! (You can use this in combination with the above)

    "EmissionMode": 1, // No change = 0, Glow = 1, Glow at night = 2, Glow when anchored = 3

    "ColliderMeshName": null, //FILE Name of the mesh, such as "collider.obj". Leaving as null will make an upright box collider relative to the mesh's extents
    "SupressBoxColliderFallback": false, //Disable creation of BoxCollider. Useful for if a collider will be already provided

    // X is right and left, Y is up and down, and Z is forward and backward
    "BlockExtents":
    {
        "x": 2,
        "y": 1,
        "z": 2
    },

    "APs": [
        {"x": 0,"y": 0,"z": -0.5},{"x": 1,"y": 0,"z": -0.5}, //back
        {"x": 0,"y": 0,"z": 1.5},{"x": 1,"y": 0,"z": 1.5}, //front
        {"x": -0.5,"y": 0,"z": 0},{"x": -0.5,"y": 0,"z": 1}, //left
        {"x": 1.5,"y": 0,"z": 0},{"x": 1.5,"y": 0,"z": 1}, //right

        {"x": 0,"y": -0.5,"z": 0},{"x": 1,"y": -0.5,"z": 0},
        {"x": 0,"y": -0.5,"z": 1},{"x": 1,"y": -0.5,"z": 1},//bottom
        {"x": 0,"y": 0.5,"z": 0},{"x": 1,"y": 0.5,"z": 0},
        {"x": 0,"y": 0.5,"z": 1},{"x": 1,"y": 0.5,"z": 1}//top
    ],
    "GamePrefabReference": null, //Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)", 3
    "KeepRenderers": false, //If not true, prefab renderers will be removed
    "KeepColliders": false, //If not true, colliders will be removed
    //"DeathExplosionReference": 52, //Like the GamePrefabReference, but copies the explosion of a specific block. (Copies before Deserializer, so it is possible to manipulate in there)
    "ReferenceOffset": {
        "x": 0,
        "y": 0,
        "z": 0
    },
    "SubObjects": [
        { // This is the start of a subobject modifier item. All the parameters are here for reference
          "SubOverrideName": "Ballast_Weight", //This line can be omitted (or set to not a valid subobject of the prefab) to create a new gameobject child.
          "DestroyExistingRenderer": true, //With this false, it will use the material on the subobject if it exists instead of root. Can still be modified with below properties
          "DestroyExistingColliders": true,
          "MeshName": "HE_DensityShift_Ballast.obj",
          "MakeBoxCollider": false, //Will resize to mesh if one is present, otherwise SubScale
          "MakeSphereCollider": false, //Just a sphere
          "ColliderMeshName": null,
          //"Layer": null, //Leave as null to be the default Tech layer for collision. Advanced use only!
          //"Friction": 0.6, //A value between 0 and 1, the slowdown of rubbing objects
          //"StaticFriction": 0.6, //A value between 0 and 1, how much it sticks to a surface when it is stopped
          //"Bounciness": 0.1, //A value between 0 and 1, how much it bounces back from a collision
          "MeshTextureName": null,
          "MeshMaterialName": "HE_Main",
          "SubPosition": { "x": 0, "y": 0, "z": 0 },
          "SubScale": { "x": 1, "y": 1, "z": 1 },
          "SubRotation": {
            "x": 0, // Pitch
            "y": 0, // Yaw
            "z": 0  // Roll
          }
        }
      ],
    "JSONBLOCK": {
        "MotionBlocks.ModuleDensityShift": {
            //"Mass": 16.0,
            //"Color": 4.0,
            "Range": {
              "x": 16.0,
              "y": 128.0
            }
          }
    }
}