{
  "Name": "DarkLight Brudger Medium Wide Spike Slope",
  "Description": "A longer and wider slope, with specific angles you can maximize the chance the spikes hit.\n\nOr you can use them as decoratives.",
                 //You can make multiple lines with \n
  "ID": 2000019, 
                 //Anywhere between 2,000,000 and 2,004,999 should do for DarkLight Blocks

  "Faction": 7, 
                 //GSO = 1|0, GC = 2, EXP|RR = 3, VEN = 4, HK = 5, Special = 6, BF = 7
  "Category": 0, 
                 //Control = 1, Standard = 2|0, Wheels = 3, Weapons = 4, Accessories = 5, Power = 6, Base = 7, Flight = 8
  "Grade": 3, 
                 //The desired grade -1, DL 2
  "Price": 7660, 
                 //The price is measured by sum of recipe value times 5 for DarkLight in particular, these are VERY costly bois but they do have good things for their higher natural cost
  "HP": 2400, 
                 //A BF one block has 300 health, HK has 400 and 1.5 weight, DL Basic have 500 and 2 Weight by default
  "Mass": 10.0, //Spikes are heavy
  "CenterOfMass": {"x": 0.5, "y": 0.1, "z": 0.6},

  "Fragility": 0.9, //How likely the block is to fall off from being attacked. 2 is two times as likely, 0 is none at all, for example, SCUs do not fall off when attacked
  "DamageableType": 1, // Standard = 0, Armour = 1, Rubber = 2, Volatile = 3, Shield = 4, Wood = 5, Rock = 6
  "Rarity": 0, // Common = 0, Uncommon = 1, Rare = 2

  "Recipe": "43, 43, 43, 43, 43, 44, 44, 44, 44, 44, 45, 45, 45, 45, 45, 45, 45", // Separate chunk names or IDs with a comma. DarkLight does not use resources in craft, only components.
  "IconName": "DLBrudgerSlope6.png", //FILE Name of image, such as "icon.png". File can be anywhere and should be uniquely named
  "MeshName": "DLBasicCurve2Wide.obj", //FILE Name of mesh, such as "mesh.obj". File can be anywhere and should be uniquely named

  "MeshTextureName": "DarkLight1.png", //FILE Name of image for texture, such as "texture.png". File can be anywhere and should be uniquely named
  "MeshGlossTextureName": "DarkLight2.png", //Black white transparency image for the shine. Opaque black looks like rough plastic or rubber, Opaque white looks like glossed mirror.
  "MeshEmissionTextureName": "DarkLight3.png", //Texture like the first, except is for illumination of parts of the model for things like night. Black is "off", the brighter it is the more it shows. Think LEDs

  //"EmissionMode": 0, // No change = 0, Glow = 1, Glow at night = 2, Glow when anchored = 3

  "ColliderMeshName": "DLBasicCurve2WideCollider.obj", //FILE Name of the mesh, such as "collider.obj". Leaving as null will make an upright box collider relative to the mesh's extents
  "SupressBoxColliderFallback": true, //Disable creation of BoxCollider. Useful for if a collider will be already provided

  //"Friction": 0.6, //A value between 0 and 1, the slowdown of rubbing objects
  //"StaticFriction": 0.6, //A value between 0 and 1, how much it sticks to a surface when it is stopped
  //"Bounciness": 0.1, //A value between 0 and 1, how much it bounces back from a collision

  // X is right and left, Y is up and down, and Z is forward and backward

  "Cells": [ //Units in the grid space to be occupied
    { "x": 0, "y": 0, "z": 0 },
    { "x": 0, "y": 0, "z": 1 },
    { "x": 1, "y": 0, "z": 0 },
    { "x": 1, "y": 0, "z": 1 }
  ],

  "APs": [ //The location of APs on the block. Delete this or set to null if you'd rather use "APsOnlyAtBottom": with "BlockExtents": 
    { "x": 0,    "y": 0,    "z": -0.5 },
    { "x": 1,    "y": 0,    "z": -0.5 },
    { "x": -0.5, "y": 0,    "z": 0    },
    { "x": 1.5,  "y": 0,    "z": 0    },
    { "x": 0,    "y": -0.5, "z": 0    },
    { "x": 0,    "y": -0.5, "z": 1    },
    { "x": 1,    "y": -0.5, "z": 0    },
    { "x": 1,    "y": -0.5, "z": 1    }
  ],

  // Delete /* and */ if using

  //OPTIONAL
  "GamePrefabReference": "BF_Streamline_111", //Use a block prefab from the GAME'S RESOURCES as a base. For example, "GSOBlock(111)", 3
  "KeepRenderers": false, //If not true, prefab renderers will be removed
  "KeepColliders": false, //If not true, colliders will be removed
  //"DeathExplosionReference": 52, //Like the GamePrefabReference, but copies the explosion of a specific block. (Copies before Deserializer, so it is possible to manipulate in there)
  "ReferenceOffset": {
    "x": 0,
    "y": 0,
    "z": 0
  }, //Shift the subobjects of the block prefab by x, y and z
  /*
  "ReferenceRotationOffset": {
    "x": 0, // Pitch
    "y": 0, // Yaw
    "z": 0  // Roll
  }, //Rotate the subobjects of the block prefab by the origin
  */
  /*
  "ReferenceScale": {
    "x": 0,
    "y": 0,
    "z": 0
  }, //Scale all the subobjects of the block prefab by the origin
  */

  // Sub Objects can modify existing sub gameobjects on a prefab reference. Properties can be omitted as necessary
  "SubObjects": [
    {
        "SubOverrideName": "Spike",
        "Layer": 14,
        "ColliderMeshName": "DLBasicCurve2WideSpikeCollide.obj"
    }
],

  // For great control of a block without creating a C# mod, such a system exists that you can modify the Hierarchy, and variables, of one.
  // Note: There can only be one "JSONBLOCK" / "Deserializer" property in a file, but what is in it can be changed depending on use. These are examples.

 
  "JSONBLOCK": {
    "GameObject|Spike": {
      "UnityEngine.MeshCollider": { "sharedMesh": "DLBasicCurve2WideSpikeCollide.obj", "convex": true }
  },
    "ModuleDrill": {
      "activeColliders": ["Spike/MeshCollider."],
      "impactDamageMultiplier": 10.0,
      "damagePerSecond": 50.0,
      "m_SpinOnCollisionDuration": 1,
      "m_DamageType": 4
  }
  }


  //If you have any problems, recommendations, or seek for guidance, ask on the Forum or official TerraTech Discord (discord.gg/terratechgame)
  //It may be necessary to examine the hierarchy of the block you wish to base your block on. You can do that by pressing backslash with your mouse on top of that block, with the Control Blocks mod installed, or by dumping the block's JSON with Misc Mods.
}